unit Excel2020;

{$TYPEDADDRESS OFF}
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}

interface

uses
	Winapi.Windows,
	Office2020,
	System.Classes,
	System.Variants,
	System.Win.StdVCL,
	VBIDE2020,
	Vcl.Graphics,
	Vcl.OleServer,
	Winapi.ActiveX;

const

	ExcelMajorVersion=1;
	ExcelMinorVersion=9;

	LIBID_Excel:TGUID='{00020813-0000-0000-C000-000000000046}';

	IID_Adjustments:TGUID='{000C0310-0000-0000-C000-000000000046}';
	IID_CalloutFormat:TGUID='{000C0311-0000-0000-C000-000000000046}';
	IID_ColorFormat:TGUID='{000C0312-0000-0000-C000-000000000046}';
	IID_LineFormat:TGUID='{000C0317-0000-0000-C000-000000000046}';
	IID_ShapeNode:TGUID='{000C0318-0000-0000-C000-000000000046}';
	IID_ShapeNodes:TGUID='{000C0319-0000-0000-C000-000000000046}';
	IID_PictureFormat:TGUID='{000C031A-0000-0000-C000-000000000046}';
	IID_ShadowFormat:TGUID='{000C031B-0000-0000-C000-000000000046}';
	IID_TextEffectFormat:TGUID='{000C031F-0000-0000-C000-000000000046}';
	IID_ThreeDFormat:TGUID='{000C0321-0000-0000-C000-000000000046}';
	IID_FillFormat:TGUID='{000C0314-0000-0000-C000-000000000046}';
	IID_DiagramNodes:TGUID='{000C036E-0000-0000-C000-000000000046}';
	IID_DiagramNodeChildren:TGUID='{000C036F-0000-0000-C000-000000000046}';
	IID_DiagramNode:TGUID='{000C0370-0000-0000-C000-000000000046}';
	IID_IRTDUpdateEvent:TGUID='{A43788C1-D91B-11D3-8F39-00C04F3651B8}';
	IID_IRtdServer:TGUID='{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}';
	IID_TextFrame2:TGUID='{000C0398-0000-0000-C000-000000000046}';
	IID_Model3DFormat:TGUID='{000C03D8-0000-0000-C000-000000000046}';
	IID_ExcelIFont:TGUID='{0002084D-0001-0000-C000-000000000046}';
	IID_IWindow:TGUID='{00020893-0001-0000-C000-000000000046}';
	IID_IWindows:TGUID='{00020892-0001-0000-C000-000000000046}';
	IID_IAppEvents:TGUID='{00024413-0001-0000-C000-000000000046}';
	IID__Application:TGUID='{000208D5-0000-0000-C000-000000000046}';
	IID_IWorksheetFunction:TGUID='{00020845-0001-0000-C000-000000000046}';
	IID_IRange:TGUID='{00020846-0001-0000-C000-000000000046}';
	IID_IChartEvents:TGUID='{0002440F-0001-0000-C000-000000000046}';
	IID__Chart:TGUID='{000208D6-0000-0000-C000-000000000046}';
	IID_Sheets:TGUID='{000208D7-0000-0000-C000-000000000046}';
	IID_IVPageBreak:TGUID='{00024402-0001-0000-C000-000000000046}';
	IID_IHPageBreak:TGUID='{00024401-0001-0000-C000-000000000046}';
	IID_IHPageBreaks:TGUID='{00024404-0001-0000-C000-000000000046}';
	IID_IVPageBreaks:TGUID='{00024405-0001-0000-C000-000000000046}';
	IID_IRecentFile:TGUID='{00024407-0001-0000-C000-000000000046}';
	IID_IRecentFiles:TGUID='{00024406-0001-0000-C000-000000000046}';
	IID_IDocEvents:TGUID='{00024411-0001-0000-C000-000000000046}';
	IID__Worksheet:TGUID='{000208D8-0000-0000-C000-000000000046}';
	IID_IStyle:TGUID='{00020852-0001-0000-C000-000000000046}';
	IID_IStyles:TGUID='{00020853-0001-0000-C000-000000000046}';
	IID_IBorders:TGUID='{00020855-0001-0000-C000-000000000046}';
	IID__Global:TGUID='{000208D9-0000-0000-C000-000000000046}';
	IID_IAddIn:TGUID='{00020857-0001-0000-C000-000000000046}';
	IID_IAddIns:TGUID='{00020858-0001-0000-C000-000000000046}';
	IID_IToolbar:TGUID='{0002085C-0001-0000-C000-000000000046}';
	IID_IToolbars:TGUID='{0002085D-0001-0000-C000-000000000046}';
	IID_IToolbarButton:TGUID='{0002085E-0001-0000-C000-000000000046}';
	IID_IToolbarButtons:TGUID='{0002085F-0001-0000-C000-000000000046}';
	IID_IAreas:TGUID='{00020860-0001-0000-C000-000000000046}';
	IID_IWorkbookEvents:TGUID='{00024412-0001-0000-C000-000000000046}';
	IID__Workbook:TGUID='{000208DA-0000-0000-C000-000000000046}';
	IID_Workbooks:TGUID='{000208DB-0000-0000-C000-000000000046}';
	IID_IMenuBars:TGUID='{00020863-0001-0000-C000-000000000046}';
	IID_IMenuBar:TGUID='{00020864-0001-0000-C000-000000000046}';
	IID_IMenus:TGUID='{00020865-0001-0000-C000-000000000046}';
	IID_IMenu:TGUID='{00020866-0001-0000-C000-000000000046}';
	IID_IMenuItems:TGUID='{00020867-0001-0000-C000-000000000046}';
	IID_IMenuItem:TGUID='{00020868-0001-0000-C000-000000000046}';
	IID_ICharts:TGUID='{0002086D-0001-0000-C000-000000000046}';
	IID_IDrawingObjects:TGUID='{0002086F-0001-0000-C000-000000000046}';
	IID_IPivotCache:TGUID='{0002441C-0001-0000-C000-000000000046}';
	IID_IPivotCaches:TGUID='{0002441D-0001-0000-C000-000000000046}';
	IID_IPivotFormula:TGUID='{0002441E-0001-0000-C000-000000000046}';
	IID_IPivotFormulas:TGUID='{0002441F-0001-0000-C000-000000000046}';
	IID_IPivotTable:TGUID='{00020872-0001-0000-C000-000000000046}';
	IID_IPivotTables:TGUID='{00020873-0001-0000-C000-000000000046}';
	IID_IPivotField:TGUID='{00020874-0001-0000-C000-000000000046}';
	IID_IPivotFields:TGUID='{00020875-0001-0000-C000-000000000046}';
	IID_ICalculatedFields:TGUID='{00024420-0001-0000-C000-000000000046}';
	IID_IPivotItem:TGUID='{00020876-0001-0000-C000-000000000046}';
	IID_IPivotItems:TGUID='{00020877-0001-0000-C000-000000000046}';
	IID_ICalculatedItems:TGUID='{00024421-0001-0000-C000-000000000046}';
	IID_ICharacters:TGUID='{00020878-0001-0000-C000-000000000046}';
	IID_IDialogs:TGUID='{00020879-0001-0000-C000-000000000046}';
	IID_IDialog:TGUID='{0002087A-0001-0000-C000-000000000046}';
	IID_ISoundNote:TGUID='{0002087B-0001-0000-C000-000000000046}';
	IID_IButton:TGUID='{0002087D-0001-0000-C000-000000000046}';
	IID_IButtons:TGUID='{0002087E-0001-0000-C000-000000000046}';
	IID_ICheckBox:TGUID='{0002087F-0001-0000-C000-000000000046}';
	IID_ICheckBoxes:TGUID='{00020880-0001-0000-C000-000000000046}';
	IID_IOptionButton:TGUID='{00020881-0001-0000-C000-000000000046}';
	IID_IOptionButtons:TGUID='{00020882-0001-0000-C000-000000000046}';
	IID_IEditBox:TGUID='{00020883-0001-0000-C000-000000000046}';
	IID_IEditBoxes:TGUID='{00020884-0001-0000-C000-000000000046}';
	IID_IScrollBar:TGUID='{00020885-0001-0000-C000-000000000046}';
	IID_IScrollBars:TGUID='{00020886-0001-0000-C000-000000000046}';
	IID_IListBox:TGUID='{00020887-0001-0000-C000-000000000046}';
	IID_IListBoxes:TGUID='{00020888-0001-0000-C000-000000000046}';
	IID_IGroupBox:TGUID='{00020889-0001-0000-C000-000000000046}';
	IID_IGroupBoxes:TGUID='{0002088A-0001-0000-C000-000000000046}';
	IID_IDropDown:TGUID='{0002088B-0001-0000-C000-000000000046}';
	IID_IDropDowns:TGUID='{0002088C-0001-0000-C000-000000000046}';
	IID_ISpinner:TGUID='{0002088D-0001-0000-C000-000000000046}';
	IID_ISpinners:TGUID='{0002088E-0001-0000-C000-000000000046}';
	IID_IDialogFrame:TGUID='{0002088F-0001-0000-C000-000000000046}';
	IID_ILabel:TGUID='{00020890-0001-0000-C000-000000000046}';
	IID_ILabels:TGUID='{00020891-0001-0000-C000-000000000046}';
	IID_IPanes:TGUID='{00020894-0001-0000-C000-000000000046}';
	IID_IPane:TGUID='{00020895-0001-0000-C000-000000000046}';
	IID_IScenarios:TGUID='{00020896-0001-0000-C000-000000000046}';
	IID_IScenario:TGUID='{00020897-0001-0000-C000-000000000046}';
	IID_IGroupObject:TGUID='{00020898-0001-0000-C000-000000000046}';
	IID_IGroupObjects:TGUID='{00020899-0001-0000-C000-000000000046}';
	IID_ILine:TGUID='{0002089A-0001-0000-C000-000000000046}';
	IID_ILines:TGUID='{0002089B-0001-0000-C000-000000000046}';
	IID_IRectangle:TGUID='{0002089C-0001-0000-C000-000000000046}';
	IID_IRectangles:TGUID='{0002089D-0001-0000-C000-000000000046}';
	IID_IOval:TGUID='{0002089E-0001-0000-C000-000000000046}';
	IID_IOvals:TGUID='{0002089F-0001-0000-C000-000000000046}';
	IID_IArc:TGUID='{000208A0-0001-0000-C000-000000000046}';
	IID_IArcs:TGUID='{000208A1-0001-0000-C000-000000000046}';
	IID_IOLEObjectEvents:TGUID='{00024410-0001-0000-C000-000000000046}';
	IID__IOLEObject:TGUID='{000208A2-0001-0000-C000-000000000046}';
	IID_IOLEObjects:TGUID='{000208A3-0001-0000-C000-000000000046}';
	IID_ITextBox:TGUID='{000208A4-0001-0000-C000-000000000046}';
	IID_ITextBoxes:TGUID='{000208A5-0001-0000-C000-000000000046}';
	IID_IPicture:TGUID='{000208A6-0001-0000-C000-000000000046}';
	IID_IPictures:TGUID='{000208A7-0001-0000-C000-000000000046}';
	IID_IDrawing:TGUID='{000208A8-0001-0000-C000-000000000046}';
	IID_IDrawings:TGUID='{000208A9-0001-0000-C000-000000000046}';
	IID_IRoutingSlip:TGUID='{000208AA-0001-0000-C000-000000000046}';
	IID_IOutline:TGUID='{000208AB-0001-0000-C000-000000000046}';
	IID_IModule:TGUID='{000208AD-0001-0000-C000-000000000046}';
	IID_IModules:TGUID='{000208AE-0001-0000-C000-000000000046}';
	IID_IDialogSheet:TGUID='{000208AF-0001-0000-C000-000000000046}';
	IID_IDialogSheets:TGUID='{000208B0-0001-0000-C000-000000000046}';
	IID_IWorksheets:TGUID='{000208B1-0001-0000-C000-000000000046}';
	IID_IPageSetup:TGUID='{000208B4-0001-0000-C000-000000000046}';
	IID_INames:TGUID='{000208B8-0001-0000-C000-000000000046}';
	IID_IName:TGUID='{000208B9-0001-0000-C000-000000000046}';
	IID_IChartObject:TGUID='{000208CF-0001-0000-C000-000000000046}';
	IID_IChartObjects:TGUID='{000208D0-0001-0000-C000-000000000046}';
	IID_IMailer:TGUID='{000208D1-0001-0000-C000-000000000046}';
	IID_ICustomViews:TGUID='{00024422-0001-0000-C000-000000000046}';
	IID_ICustomView:TGUID='{00024423-0001-0000-C000-000000000046}';
	IID_IFormatConditions:TGUID='{00024424-0001-0000-C000-000000000046}';
	IID_IFormatCondition:TGUID='{00024425-0001-0000-C000-000000000046}';
	IID_IComments:TGUID='{00024426-0001-0000-C000-000000000046}';
	IID_IComment:TGUID='{00024427-0001-0000-C000-000000000046}';
	IID_IRefreshEvents:TGUID='{0002441B-0001-0000-C000-000000000046}';
	IID__IQueryTable:TGUID='{00024428-0001-0000-C000-000000000046}';
	IID_IQueryTables:TGUID='{00024429-0001-0000-C000-000000000046}';
	IID_IParameter:TGUID='{0002442A-0001-0000-C000-000000000046}';
	IID_IParameters:TGUID='{0002442B-0001-0000-C000-000000000046}';
	IID_IODBCError:TGUID='{0002442C-0001-0000-C000-000000000046}';
	IID_IODBCErrors:TGUID='{0002442D-0001-0000-C000-000000000046}';
	IID_IValidation:TGUID='{0002442F-0001-0000-C000-000000000046}';
	IID_IHyperlinks:TGUID='{00024430-0001-0000-C000-000000000046}';
	IID_IHyperlink:TGUID='{00024431-0001-0000-C000-000000000046}';
	IID_IAutoFilter:TGUID='{00024432-0001-0000-C000-000000000046}';
	IID_IFilters:TGUID='{00024433-0001-0000-C000-000000000046}';
	IID_IFilter:TGUID='{00024434-0001-0000-C000-000000000046}';
	IID_IAutoCorrect:TGUID='{000208D4-0001-0000-C000-000000000046}';
	IID_IBorder:TGUID='{00020854-0001-0000-C000-000000000046}';
	IID_IInterior:TGUID='{00020870-0001-0000-C000-000000000046}';
	IID_IChartFillFormat:TGUID='{00024435-0001-0000-C000-000000000046}';
	IID_IChartColorFormat:TGUID='{00024436-0001-0000-C000-000000000046}';
	IID_IAxis:TGUID='{00020848-0001-0000-C000-000000000046}';
	IID_IChartTitle:TGUID='{00020849-0001-0000-C000-000000000046}';
	IID_IAxisTitle:TGUID='{0002084A-0001-0000-C000-000000000046}';
	IID_IChartGroup:TGUID='{00020859-0001-0000-C000-000000000046}';
	IID_IChartGroups:TGUID='{0002085A-0001-0000-C000-000000000046}';
	IID_IAxes:TGUID='{0002085B-0001-0000-C000-000000000046}';
	IID_IPoints:TGUID='{00020869-0001-0000-C000-000000000046}';
	IID_IPoint:TGUID='{0002086A-0001-0000-C000-000000000046}';
	IID_ISeries:TGUID='{0002086B-0001-0000-C000-000000000046}';
	IID_ISeriesCollection:TGUID='{0002086C-0001-0000-C000-000000000046}';
	IID_IDataLabel:TGUID='{000208B2-0001-0000-C000-000000000046}';
	IID_IDataLabels:TGUID='{000208B3-0001-0000-C000-000000000046}';
	IID_ILegendEntry:TGUID='{000208BA-0001-0000-C000-000000000046}';
	IID_ILegendEntries:TGUID='{000208BB-0001-0000-C000-000000000046}';
	IID_ILegendKey:TGUID='{000208BC-0001-0000-C000-000000000046}';
	IID_ITrendlines:TGUID='{000208BD-0001-0000-C000-000000000046}';
	IID_ITrendline:TGUID='{000208BE-0001-0000-C000-000000000046}';
	IID_ICorners:TGUID='{000208C0-0001-0000-C000-000000000046}';
	IID_ISeriesLines:TGUID='{000208C1-0001-0000-C000-000000000046}';
	IID_IHiLoLines:TGUID='{000208C2-0001-0000-C000-000000000046}';
	IID_IGridlines:TGUID='{000208C3-0001-0000-C000-000000000046}';
	IID_IDropLines:TGUID='{000208C4-0001-0000-C000-000000000046}';
	IID_ILeaderLines:TGUID='{00024437-0001-0000-C000-000000000046}';
	IID_IUpBars:TGUID='{000208C5-0001-0000-C000-000000000046}';
	IID_IDownBars:TGUID='{000208C6-0001-0000-C000-000000000046}';
	IID_IFloor:TGUID='{000208C7-0001-0000-C000-000000000046}';
	IID_IWalls:TGUID='{000208C8-0001-0000-C000-000000000046}';
	IID_ITickLabels:TGUID='{000208C9-0001-0000-C000-000000000046}';
	IID_IPlotArea:TGUID='{000208CB-0001-0000-C000-000000000046}';
	IID_IChartArea:TGUID='{000208CC-0001-0000-C000-000000000046}';
	IID_ILegend:TGUID='{000208CD-0001-0000-C000-000000000046}';
	IID_IErrorBars:TGUID='{000208CE-0001-0000-C000-000000000046}';
	IID_IDataTable:TGUID='{00020843-0001-0000-C000-000000000046}';
	IID_IPhonetic:TGUID='{00024438-0001-0000-C000-000000000046}';
	IID_IShape:TGUID='{00024439-0001-0000-C000-000000000046}';
	IID_IShapes:TGUID='{0002443A-0001-0000-C000-000000000046}';
	IID_IShapeRange:TGUID='{0002443B-0001-0000-C000-000000000046}';
	IID_IGroupShapes:TGUID='{0002443C-0001-0000-C000-000000000046}';
	IID_ITextFrame:TGUID='{0002443D-0001-0000-C000-000000000046}';
	IID_IConnectorFormat:TGUID='{0002443E-0001-0000-C000-000000000046}';
	IID_IFreeformBuilder:TGUID='{0002443F-0001-0000-C000-000000000046}';
	IID_IControlFormat:TGUID='{00024440-0001-0000-C000-000000000046}';
	IID_IOLEFormat:TGUID='{00024441-0001-0000-C000-000000000046}';
	IID_ILinkFormat:TGUID='{00024442-0001-0000-C000-000000000046}';
	IID_IPublishObjects:TGUID='{00024443-0001-0000-C000-000000000046}';
	IID_PublishObject:TGUID='{00024444-0000-0000-C000-000000000046}';
	IID_IOLEDBError:TGUID='{00024445-0001-0000-C000-000000000046}';
	IID_IOLEDBErrors:TGUID='{00024446-0001-0000-C000-000000000046}';
	IID_IPhonetics:TGUID='{00024447-0001-0000-C000-000000000046}';
	IID_DefaultWebOptions:TGUID='{00024448-0000-0000-C000-000000000046}';
	IID_WebOptions:TGUID='{00024449-0000-0000-C000-000000000046}';
	IID_IPivotLayout:TGUID='{0002444A-0001-0000-C000-000000000046}';
	IID_TreeviewControl:TGUID='{0002444B-0000-0000-C000-000000000046}';
	IID_CubeField:TGUID='{0002444C-0000-0000-C000-000000000046}';
	IID_CubeFields:TGUID='{0002444D-0000-0000-C000-000000000046}';
	IID_IDisplayUnitLabel:TGUID='{0002084C-0001-0000-C000-000000000046}';
	IID_ICellFormat:TGUID='{00024450-0001-0000-C000-000000000046}';
	IID_IUsedObjects:TGUID='{00024451-0001-0000-C000-000000000046}';
	IID_ICustomProperties:TGUID='{00024452-0001-0000-C000-000000000046}';
	IID_ICustomProperty:TGUID='{00024453-0001-0000-C000-000000000046}';
	IID_ICalculatedMembers:TGUID='{00024454-0001-0000-C000-000000000046}';
	IID_ICalculatedMember:TGUID='{00024455-0001-0000-C000-000000000046}';
	IID_IWatches:TGUID='{00024456-0001-0000-C000-000000000046}';
	IID_IWatch:TGUID='{00024457-0001-0000-C000-000000000046}';
	IID_IPivotCell:TGUID='{00024458-0001-0000-C000-000000000046}';
	IID_IGraphic:TGUID='{00024459-0001-0000-C000-000000000046}';
	IID_IAutoRecover:TGUID='{0002445A-0001-0000-C000-000000000046}';
	IID_IErrorCheckingOptions:TGUID='{0002445B-0001-0000-C000-000000000046}';
	IID_IErrors:TGUID='{0002445C-0001-0000-C000-000000000046}';
	IID_IError:TGUID='{0002445D-0001-0000-C000-000000000046}';
	IID_ISmartTagAction:TGUID='{0002445E-0001-0000-C000-000000000046}';
	IID_ISmartTagActions:TGUID='{0002445F-0001-0000-C000-000000000046}';
	IID_ISmartTag:TGUID='{00024460-0001-0000-C000-000000000046}';
	IID_ISmartTags:TGUID='{00024461-0001-0000-C000-000000000046}';
	IID_ISmartTagRecognizer:TGUID='{00024462-0001-0000-C000-000000000046}';
	IID_ISmartTagRecognizers:TGUID='{00024463-0001-0000-C000-000000000046}';
	IID_ISmartTagOptions:TGUID='{00024464-0001-0000-C000-000000000046}';
	IID_ISpellingOptions:TGUID='{00024465-0001-0000-C000-000000000046}';
	IID_ISpeech:TGUID='{00024466-0001-0000-C000-000000000046}';
	IID_IProtection:TGUID='{00024467-0001-0000-C000-000000000046}';
	IID_IPivotItemList:TGUID='{00024468-0001-0000-C000-000000000046}';
	IID_ITab:TGUID='{00024469-0001-0000-C000-000000000046}';
	IID_IAllowEditRanges:TGUID='{0002446A-0001-0000-C000-000000000046}';
	IID_IAllowEditRange:TGUID='{0002446B-0001-0000-C000-000000000046}';
	IID_IUserAccessList:TGUID='{0002446C-0001-0000-C000-000000000046}';
	IID_IUserAccess:TGUID='{0002446D-0001-0000-C000-000000000046}';
	IID_IRTD:TGUID='{0002446E-0001-0000-C000-000000000046}';
	IID_IDiagram:TGUID='{0002446F-0001-0000-C000-000000000046}';
	IID_IListObjects:TGUID='{00024470-0001-0000-C000-000000000046}';
	IID_IListObject:TGUID='{00024471-0001-0000-C000-000000000046}';
	IID_IListColumns:TGUID='{00024472-0001-0000-C000-000000000046}';
	IID_IListColumn:TGUID='{00024473-0001-0000-C000-000000000046}';
	IID_IListRows:TGUID='{00024474-0001-0000-C000-000000000046}';
	IID_IListRow:TGUID='{00024475-0001-0000-C000-000000000046}';
	IID_IXmlNamespace:TGUID='{00024476-0001-0000-C000-000000000046}';
	IID_IXmlNamespaces:TGUID='{00024477-0001-0000-C000-000000000046}';
	IID_IXmlDataBinding:TGUID='{00024478-0001-0000-C000-000000000046}';
	IID_IXmlSchema:TGUID='{00024479-0001-0000-C000-000000000046}';
	IID_IXmlSchemas:TGUID='{0002447A-0001-0000-C000-000000000046}';
	IID_IXmlMap:TGUID='{0002447B-0001-0000-C000-000000000046}';
	IID_IXmlMaps:TGUID='{0002447C-0001-0000-C000-000000000046}';
	IID_IListDataFormat:TGUID='{0002447D-0001-0000-C000-000000000046}';
	IID_IXPath:TGUID='{0002447E-0001-0000-C000-000000000046}';
	IID_IPivotLineCells:TGUID='{0002447F-0001-0000-C000-000000000046}';
	IID_IPivotLine:TGUID='{00024480-0001-0000-C000-000000000046}';
	IID_IPivotLines:TGUID='{00024481-0001-0000-C000-000000000046}';
	IID_IPivotAxis:TGUID='{00024482-0001-0000-C000-000000000046}';
	IID_IPivotFilter:TGUID='{00024483-0001-0000-C000-000000000046}';
	IID_IPivotFilters:TGUID='{00024484-0001-0000-C000-000000000046}';
	IID_IWorkbookConnection:TGUID='{00024485-0001-0000-C000-000000000046}';
	IID_IConnections:TGUID='{00024486-0001-0000-C000-000000000046}';
	IID_IWorksheetView:TGUID='{00024487-0001-0000-C000-000000000046}';
	IID_IChartView:TGUID='{00024488-0001-0000-C000-000000000046}';
	IID_IModuleView:TGUID='{00024489-0001-0000-C000-000000000046}';
	IID_IDialogSheetView:TGUID='{0002448A-0001-0000-C000-000000000046}';
	IID_ISheetViews:TGUID='{0002448C-0001-0000-C000-000000000046}';
	IID_IOLEDBConnection:TGUID='{0002448D-0001-0000-C000-000000000046}';
	IID_IODBCConnection:TGUID='{0002448E-0001-0000-C000-000000000046}';
	IID_IAction:TGUID='{0002448F-0001-0000-C000-000000000046}';
	IID_IActions:TGUID='{00024490-0001-0000-C000-000000000046}';
	IID_IFormatColor:TGUID='{00024491-0001-0000-C000-000000000046}';
	IID_IConditionValue:TGUID='{00024492-0001-0000-C000-000000000046}';
	IID_IColorScale:TGUID='{00024493-0001-0000-C000-000000000046}';
	IID_IColorScaleCriteria:TGUID='{00024494-0001-0000-C000-000000000046}';
	IID_IColorScaleCriterion:TGUID='{00024495-0001-0000-C000-000000000046}';
	IID_IDatabar:TGUID='{00024496-0001-0000-C000-000000000046}';
	IID_IIconSetCondition:TGUID='{00024497-0001-0000-C000-000000000046}';
	IID_IIconCriteria:TGUID='{00024498-0001-0000-C000-000000000046}';
	IID_IIconCriterion:TGUID='{00024499-0001-0000-C000-000000000046}';
	IID_IIcon:TGUID='{0002449A-0001-0000-C000-000000000046}';
	IID_IIconSet:TGUID='{0002449B-0001-0000-C000-000000000046}';
	IID_IIconSets:TGUID='{0002449C-0001-0000-C000-000000000046}';
	IID_ITop10:TGUID='{0002449D-0001-0000-C000-000000000046}';
	IID_IAboveAverage:TGUID='{0002449E-0001-0000-C000-000000000046}';
	IID_IUniqueValues:TGUID='{0002449F-0001-0000-C000-000000000046}';
	IID_IRanges:TGUID='{000244A0-0001-0000-C000-000000000046}';
	IID_IHeaderFooter:TGUID='{000244A1-0001-0000-C000-000000000046}';
	IID_IPage:TGUID='{000244A2-0001-0000-C000-000000000046}';
	IID_IPages:TGUID='{000244A3-0001-0000-C000-000000000046}';
	IID_IServerViewableItems:TGUID='{000244A4-0001-0000-C000-000000000046}';
	IID_ITableStyleElement:TGUID='{000244A5-0001-0000-C000-000000000046}';
	IID_ITableStyleElements:TGUID='{000244A6-0001-0000-C000-000000000046}';
	IID_ITableStyle:TGUID='{000244A7-0001-0000-C000-000000000046}';
	IID_ITableStyles:TGUID='{000244A8-0001-0000-C000-000000000046}';
	IID_ISortField:TGUID='{000244A9-0001-0000-C000-000000000046}';
	IID_ISortFields:TGUID='{000244AA-0001-0000-C000-000000000046}';
	IID_ISort:TGUID='{000244AB-0001-0000-C000-000000000046}';
	IID_IResearch:TGUID='{000244AC-0001-0000-C000-000000000046}';
	IID_IColorStop:TGUID='{000244AD-0001-0000-C000-000000000046}';
	IID_IColorStops:TGUID='{000244AE-0001-0000-C000-000000000046}';
	IID_ILinearGradient:TGUID='{000244AF-0001-0000-C000-000000000046}';
	IID_IRectangularGradient:TGUID='{000244B0-0001-0000-C000-000000000046}';
	IID_IMultiThreadedCalculation:TGUID='{000244B1-0001-0000-C000-000000000046}';
	IID_IChartFormat:TGUID='{000244B2-0001-0000-C000-000000000046}';
	IID_IFileExportConverter:TGUID='{000244B3-0001-0000-C000-000000000046}';
	IID_IFileExportConverters:TGUID='{000244B4-0001-0000-C000-000000000046}';
	IID_IAddIns2:TGUID='{000244B5-0001-0000-C000-000000000046}';
	IID_ISparklineGroups:TGUID='{000244B6-0001-0000-C000-000000000046}';
	IID_ISparklineGroup:TGUID='{000244B7-0001-0000-C000-000000000046}';
	IID_ISparkPoints:TGUID='{000244B8-0001-0000-C000-000000000046}';
	IID_ISparkline:TGUID='{000244B9-0001-0000-C000-000000000046}';
	IID_ISparkAxes:TGUID='{000244BA-0001-0000-C000-000000000046}';
	IID_ISparkHorizontalAxis:TGUID='{000244BB-0001-0000-C000-000000000046}';
	IID_ISparkVerticalAxis:TGUID='{000244BC-0001-0000-C000-000000000046}';
	IID_ISparkColor:TGUID='{000244BD-0001-0000-C000-000000000046}';
	IID_IDataBarBorder:TGUID='{000244BE-0001-0000-C000-000000000046}';
	IID_INegativeBarFormat:TGUID='{000244BF-0001-0000-C000-000000000046}';
	IID_IValueChange:TGUID='{000244C0-0001-0000-C000-000000000046}';
	IID_IPivotTableChangeList:TGUID='{000244C1-0001-0000-C000-000000000046}';
	IID_IDisplayFormat:TGUID='{000244C2-0001-0000-C000-000000000046}';
	IID_ISlicerCaches:TGUID='{000244C3-0001-0000-C000-000000000046}';
	IID_ISlicerCache:TGUID='{000244C4-0001-0000-C000-000000000046}';
	IID_ISlicerCacheLevels:TGUID='{000244C5-0001-0000-C000-000000000046}';
	IID_ISlicerCacheLevel:TGUID='{000244C6-0001-0000-C000-000000000046}';
	IID_ISlicers:TGUID='{000244C7-0001-0000-C000-000000000046}';
	IID_ISlicer:TGUID='{000244C8-0001-0000-C000-000000000046}';
	IID_ISlicerItem:TGUID='{000244C9-0001-0000-C000-000000000046}';
	IID_ISlicerItems:TGUID='{000244CA-0001-0000-C000-000000000046}';
	IID_ISlicerPivotTables:TGUID='{000244CB-0001-0000-C000-000000000046}';
	IID_IProtectedViewWindows:TGUID='{000244CC-0001-0000-C000-000000000046}';
	IID_IProtectedViewWindow:TGUID='{000244CD-0001-0000-C000-000000000046}';
	IID_ITableObject:TGUID='{000244CE-0001-0000-C000-000000000046}';
	IID_IPivotValueCell:TGUID='{000244CF-0001-0000-C000-000000000046}';
	IID_IQuickAnalysis:TGUID='{000244D0-0001-0000-C000-000000000046}';
	IID_IModelConnection:TGUID='{000244D1-0001-0000-C000-000000000046}';
	IID_IWorksheetDataConnection:TGUID='{000244D2-0001-0000-C000-000000000046}';
	IID_ITextConnection:TGUID='{000244D3-0001-0000-C000-000000000046}';
	IID_IDataFeedConnection:TGUID='{000244D4-0001-0000-C000-000000000046}';
	IID_IModelTableColumn:TGUID='{000244D5-0001-0000-C000-000000000046}';
	IID_IModelTableColumns:TGUID='{000244D6-0001-0000-C000-000000000046}';
	IID_IModelTable:TGUID='{000244D7-0001-0000-C000-000000000046}';
	IID_IModelTables:TGUID='{000244D8-0001-0000-C000-000000000046}';
	IID_IModelRelationship:TGUID='{000244D9-0001-0000-C000-000000000046}';
	IID_IModelRelationships:TGUID='{000244DA-0001-0000-C000-000000000046}';
	IID_IModel:TGUID='{000244DB-0001-0000-C000-000000000046}';
	IID_IFullSeriesCollection:TGUID='{000244DC-0001-0000-C000-000000000046}';
	IID_IChartCategory:TGUID='{000244DD-0001-0000-C000-000000000046}';
	IID_ICategoryCollection:TGUID='{000244DE-0001-0000-C000-000000000046}';
	IID_ITimelineState:TGUID='{000244DF-0001-0000-C000-000000000046}';
	IID_ITimelineViewState:TGUID='{000244E0-0001-0000-C000-000000000046}';
	IID_IModelTableNames:TGUID='{000244E1-0001-0000-C000-000000000046}';
	IID_IModelTableNameChange:TGUID='{000244E2-0001-0000-C000-000000000046}';
	IID_IModelTableNameChanges:TGUID='{000244E3-0001-0000-C000-000000000046}';
	IID_IModelChanges:TGUID='{000244E4-0001-0000-C000-000000000046}';
	IID_IModelColumnName:TGUID='{000244E5-0001-0000-C000-000000000046}';
	IID_IModelColumnNames:TGUID='{000244E6-0001-0000-C000-000000000046}';
	IID_IModelColumnChange:TGUID='{000244E7-0001-0000-C000-000000000046}';
	IID_IModelColumnChanges:TGUID='{000244E8-0001-0000-C000-000000000046}';
	IID_IModelMeasureName:TGUID='{000244E9-0001-0000-C000-000000000046}';
	IID_IModelMeasureNames:TGUID='{000244EA-0001-0000-C000-000000000046}';
	IID_IWorkbookQuery:TGUID='{000244EB-0001-0000-C000-000000000046}';
	IID_IQueries:TGUID='{000244EC-0001-0000-C000-000000000046}';
	IID_IModelMeasure:TGUID='{000244ED-0001-0000-C000-000000000046}';
	IID_IModelMeasures:TGUID='{000244EE-0001-0000-C000-000000000046}';
	IID_IModelFormatGeneral:TGUID='{000244EF-0001-0000-C000-000000000046}';
	IID_IModelFormatDate:TGUID='{000244F0-0001-0000-C000-000000000046}';
	IID_IModelFormatDecimalNumber:TGUID='{000244F1-0001-0000-C000-000000000046}';
	IID_IModelFormatWholeNumber:TGUID='{000244F2-0001-0000-C000-000000000046}';
	IID_IModelFormatPercentageNumber:TGUID='{000244F3-0001-0000-C000-000000000046}';
	IID_IModelFormatScientificNumber:TGUID='{000244F4-0001-0000-C000-000000000046}';
	IID_IModelFormatCurrency:TGUID='{000244F5-0001-0000-C000-000000000046}';
	IID_IModelFormatBoolean:TGUID='{000244F6-0001-0000-C000-000000000046}';
	IID_IPublishedDocs:TGUID='{000244F7-0001-0000-C000-000000000046}';
	IID_IPublishedDoc:TGUID='{000244F8-0001-0000-C000-000000000046}';
	IID_ISeriesGradientStopColorFormat:TGUID='{000244F9-0001-0000-C000-000000000046}';
	IID_IChartSeriesGradientStopData:TGUID='{000244FA-0001-0000-C000-000000000046}';
	IID_IDefaultPivotTableLayoutOptions:TGUID='{000244FB-0001-0000-C000-000000000046}';
	IID_ICommentsThreaded:TGUID='{000244FC-0001-0000-C000-000000000046}';
	IID_ICommentThreaded:TGUID='{000244FD-0001-0000-C000-000000000046}';
	IID_IAuthor:TGUID='{000244FE-0001-0000-C000-000000000046}';
	IID_INamedSheetViewCollection:TGUID='{00024501-0001-0000-C000-000000000046}';
	IID_INamedSheetView:TGUID='{00024502-0001-0000-C000-000000000046}';
	DIID_Font:TGUID='{0002084D-0000-0000-C000-000000000046}';
	DIID_Window:TGUID='{00020893-0000-0000-C000-000000000046}';
	DIID_Windows:TGUID='{00020892-0000-0000-C000-000000000046}';
	DIID_AppEvents:TGUID='{00024413-0000-0000-C000-000000000046}';
	DIID_WorksheetFunction:TGUID='{00020845-0000-0000-C000-000000000046}';
	DIID_ExcelRange:TGUID='{00020846-0000-0000-C000-000000000046}';
	DIID_ChartEvents:TGUID='{0002440F-0000-0000-C000-000000000046}';
	DIID_VPageBreak:TGUID='{00024402-0000-0000-C000-000000000046}';
	DIID_HPageBreak:TGUID='{00024401-0000-0000-C000-000000000046}';
	DIID_HPageBreaks:TGUID='{00024404-0000-0000-C000-000000000046}';
	DIID_VPageBreaks:TGUID='{00024405-0000-0000-C000-000000000046}';
	DIID_RecentFile:TGUID='{00024407-0000-0000-C000-000000000046}';
	DIID_RecentFiles:TGUID='{00024406-0000-0000-C000-000000000046}';
	DIID_DocEvents:TGUID='{00024411-0000-0000-C000-000000000046}';
	DIID_Style:TGUID='{00020852-0000-0000-C000-000000000046}';
	DIID_Styles:TGUID='{00020853-0000-0000-C000-000000000046}';
	DIID_Borders:TGUID='{00020855-0000-0000-C000-000000000046}';
	DIID_AddIn:TGUID='{00020857-0000-0000-C000-000000000046}';
	DIID_AddIns:TGUID='{00020858-0000-0000-C000-000000000046}';
	DIID_Toolbar:TGUID='{0002085C-0000-0000-C000-000000000046}';
	DIID_Toolbars:TGUID='{0002085D-0000-0000-C000-000000000046}';
	DIID_ToolbarButton:TGUID='{0002085E-0000-0000-C000-000000000046}';
	DIID_ToolbarButtons:TGUID='{0002085F-0000-0000-C000-000000000046}';
	DIID_Areas:TGUID='{00020860-0000-0000-C000-000000000046}';
	DIID_WorkbookEvents:TGUID='{00024412-0000-0000-C000-000000000046}';
	DIID_MenuBars:TGUID='{00020863-0000-0000-C000-000000000046}';
	DIID_MenuBar:TGUID='{00020864-0000-0000-C000-000000000046}';
	DIID_Menus:TGUID='{00020865-0000-0000-C000-000000000046}';
	DIID_Menu:TGUID='{00020866-0000-0000-C000-000000000046}';
	DIID_MenuItems:TGUID='{00020867-0000-0000-C000-000000000046}';
	DIID_MenuItem:TGUID='{00020868-0000-0000-C000-000000000046}';
	DIID_Charts:TGUID='{0002086D-0000-0000-C000-000000000046}';
	DIID_DrawingObjects:TGUID='{0002086F-0000-0000-C000-000000000046}';
	DIID_PivotCache:TGUID='{0002441C-0000-0000-C000-000000000046}';
	DIID_PivotCaches:TGUID='{0002441D-0000-0000-C000-000000000046}';
	DIID_PivotFormula:TGUID='{0002441E-0000-0000-C000-000000000046}';
	DIID_PivotFormulas:TGUID='{0002441F-0000-0000-C000-000000000046}';
	DIID_PivotTable:TGUID='{00020872-0000-0000-C000-000000000046}';
	DIID_PivotTables:TGUID='{00020873-0000-0000-C000-000000000046}';
	DIID_PivotField:TGUID='{00020874-0000-0000-C000-000000000046}';
	DIID_PivotFields:TGUID='{00020875-0000-0000-C000-000000000046}';
	DIID_CalculatedFields:TGUID='{00024420-0000-0000-C000-000000000046}';
	DIID_PivotItem:TGUID='{00020876-0000-0000-C000-000000000046}';
	DIID_PivotItems:TGUID='{00020877-0000-0000-C000-000000000046}';
	DIID_CalculatedItems:TGUID='{00024421-0000-0000-C000-000000000046}';
	DIID_Characters:TGUID='{00020878-0000-0000-C000-000000000046}';
	DIID_Dialogs:TGUID='{00020879-0000-0000-C000-000000000046}';
	DIID_Dialog:TGUID='{0002087A-0000-0000-C000-000000000046}';
	DIID_SoundNote:TGUID='{0002087B-0000-0000-C000-000000000046}';
	DIID_Button:TGUID='{0002087D-0000-0000-C000-000000000046}';
	DIID_Buttons:TGUID='{0002087E-0000-0000-C000-000000000046}';
	DIID_CheckBox:TGUID='{0002087F-0000-0000-C000-000000000046}';
	DIID_CheckBoxes:TGUID='{00020880-0000-0000-C000-000000000046}';
	DIID_OptionButton:TGUID='{00020881-0000-0000-C000-000000000046}';
	DIID_OptionButtons:TGUID='{00020882-0000-0000-C000-000000000046}';
	DIID_EditBox:TGUID='{00020883-0000-0000-C000-000000000046}';
	DIID_EditBoxes:TGUID='{00020884-0000-0000-C000-000000000046}';
	DIID_ScrollBar:TGUID='{00020885-0000-0000-C000-000000000046}';
	DIID_ScrollBars:TGUID='{00020886-0000-0000-C000-000000000046}';
	DIID_ListBox:TGUID='{00020887-0000-0000-C000-000000000046}';
	DIID_ListBoxes:TGUID='{00020888-0000-0000-C000-000000000046}';
	DIID_GroupBox:TGUID='{00020889-0000-0000-C000-000000000046}';
	DIID_GroupBoxes:TGUID='{0002088A-0000-0000-C000-000000000046}';
	DIID_DropDown:TGUID='{0002088B-0000-0000-C000-000000000046}';
	DIID_DropDowns:TGUID='{0002088C-0000-0000-C000-000000000046}';
	DIID_Spinner:TGUID='{0002088D-0000-0000-C000-000000000046}';
	DIID_Spinners:TGUID='{0002088E-0000-0000-C000-000000000046}';
	DIID_DialogFrame:TGUID='{0002088F-0000-0000-C000-000000000046}';
	DIID_Label_:TGUID='{00020890-0000-0000-C000-000000000046}';
	DIID_Labels:TGUID='{00020891-0000-0000-C000-000000000046}';
	DIID_Panes:TGUID='{00020894-0000-0000-C000-000000000046}';
	DIID_Pane:TGUID='{00020895-0000-0000-C000-000000000046}';
	DIID_Scenarios:TGUID='{00020896-0000-0000-C000-000000000046}';
	DIID_Scenario:TGUID='{00020897-0000-0000-C000-000000000046}';
	DIID_GroupObject:TGUID='{00020898-0000-0000-C000-000000000046}';
	DIID_GroupObjects:TGUID='{00020899-0000-0000-C000-000000000046}';
	DIID_Line:TGUID='{0002089A-0000-0000-C000-000000000046}';
	DIID_Lines:TGUID='{0002089B-0000-0000-C000-000000000046}';
	DIID_Rectangle:TGUID='{0002089C-0000-0000-C000-000000000046}';
	DIID_Rectangles:TGUID='{0002089D-0000-0000-C000-000000000046}';
	DIID_Oval:TGUID='{0002089E-0000-0000-C000-000000000046}';
	DIID_Ovals:TGUID='{0002089F-0000-0000-C000-000000000046}';
	DIID_Arc:TGUID='{000208A0-0000-0000-C000-000000000046}';
	DIID_Arcs:TGUID='{000208A1-0000-0000-C000-000000000046}';
	DIID_OLEObjectEvents:TGUID='{00024410-0000-0000-C000-000000000046}';
	DIID__OLEObject:TGUID='{000208A2-0000-0000-C000-000000000046}';
	DIID_OLEObjects:TGUID='{000208A3-0000-0000-C000-000000000046}';
	DIID_TextBox:TGUID='{000208A4-0000-0000-C000-000000000046}';
	DIID_TextBoxes:TGUID='{000208A5-0000-0000-C000-000000000046}';
	DIID_Picture:TGUID='{000208A6-0000-0000-C000-000000000046}';
	DIID_Pictures:TGUID='{000208A7-0000-0000-C000-000000000046}';
	DIID_Drawing:TGUID='{000208A8-0000-0000-C000-000000000046}';
	DIID_Drawings:TGUID='{000208A9-0000-0000-C000-000000000046}';
	DIID_RoutingSlip:TGUID='{000208AA-0000-0000-C000-000000000046}';
	DIID_Outline:TGUID='{000208AB-0000-0000-C000-000000000046}';
	DIID_Module:TGUID='{000208AD-0000-0000-C000-000000000046}';
	DIID_Modules:TGUID='{000208AE-0000-0000-C000-000000000046}';
	DIID_DialogSheet:TGUID='{000208AF-0000-0000-C000-000000000046}';
	DIID_DialogSheets:TGUID='{000208B0-0000-0000-C000-000000000046}';
	DIID_Worksheets:TGUID='{000208B1-0000-0000-C000-000000000046}';
	DIID_PageSetup:TGUID='{000208B4-0000-0000-C000-000000000046}';
	DIID_Names:TGUID='{000208B8-0000-0000-C000-000000000046}';
	DIID_Name:TGUID='{000208B9-0000-0000-C000-000000000046}';
	DIID_ChartObject:TGUID='{000208CF-0000-0000-C000-000000000046}';
	DIID_ChartObjects:TGUID='{000208D0-0000-0000-C000-000000000046}';
	DIID_Mailer:TGUID='{000208D1-0000-0000-C000-000000000046}';
	DIID_CustomViews:TGUID='{00024422-0000-0000-C000-000000000046}';
	DIID_CustomView:TGUID='{00024423-0000-0000-C000-000000000046}';
	DIID_FormatConditions:TGUID='{00024424-0000-0000-C000-000000000046}';
	DIID_FormatCondition:TGUID='{00024425-0000-0000-C000-000000000046}';
	DIID_Comments:TGUID='{00024426-0000-0000-C000-000000000046}';
	DIID_Comment:TGUID='{00024427-0000-0000-C000-000000000046}';
	DIID_RefreshEvents:TGUID='{0002441B-0000-0000-C000-000000000046}';
	DIID__QueryTable:TGUID='{00024428-0000-0000-C000-000000000046}';
	DIID_QueryTables:TGUID='{00024429-0000-0000-C000-000000000046}';
	DIID_Parameter:TGUID='{0002442A-0000-0000-C000-000000000046}';
	DIID_Parameters:TGUID='{0002442B-0000-0000-C000-000000000046}';
	DIID_ODBCError:TGUID='{0002442C-0000-0000-C000-000000000046}';
	DIID_ODBCErrors:TGUID='{0002442D-0000-0000-C000-000000000046}';
	DIID_Validation:TGUID='{0002442F-0000-0000-C000-000000000046}';
	DIID_Hyperlinks:TGUID='{00024430-0000-0000-C000-000000000046}';
	DIID_Hyperlink:TGUID='{00024431-0000-0000-C000-000000000046}';
	DIID_AutoFilter:TGUID='{00024432-0000-0000-C000-000000000046}';
	DIID_Filters:TGUID='{00024433-0000-0000-C000-000000000046}';
	DIID_Filter:TGUID='{00024434-0000-0000-C000-000000000046}';
	DIID_AutoCorrect:TGUID='{000208D4-0000-0000-C000-000000000046}';
	DIID_Border:TGUID='{00020854-0000-0000-C000-000000000046}';
	DIID_Interior:TGUID='{00020870-0000-0000-C000-000000000046}';
	DIID_ChartFillFormat:TGUID='{00024435-0000-0000-C000-000000000046}';
	DIID_ChartColorFormat:TGUID='{00024436-0000-0000-C000-000000000046}';
	DIID_Axis:TGUID='{00020848-0000-0000-C000-000000000046}';
	DIID_ChartTitle:TGUID='{00020849-0000-0000-C000-000000000046}';
	DIID_AxisTitle:TGUID='{0002084A-0000-0000-C000-000000000046}';
	DIID_ChartGroup:TGUID='{00020859-0000-0000-C000-000000000046}';
	DIID_ChartGroups:TGUID='{0002085A-0000-0000-C000-000000000046}';
	DIID_Axes:TGUID='{0002085B-0000-0000-C000-000000000046}';
	DIID_Points:TGUID='{00020869-0000-0000-C000-000000000046}';
	DIID_Point:TGUID='{0002086A-0000-0000-C000-000000000046}';
	DIID_Series:TGUID='{0002086B-0000-0000-C000-000000000046}';
	DIID_SeriesCollection:TGUID='{0002086C-0000-0000-C000-000000000046}';
	DIID_DataLabel:TGUID='{000208B2-0000-0000-C000-000000000046}';
	DIID_DataLabels:TGUID='{000208B3-0000-0000-C000-000000000046}';
	DIID_LegendEntry:TGUID='{000208BA-0000-0000-C000-000000000046}';
	DIID_LegendEntries:TGUID='{000208BB-0000-0000-C000-000000000046}';
	DIID_LegendKey:TGUID='{000208BC-0000-0000-C000-000000000046}';
	DIID_Trendlines:TGUID='{000208BD-0000-0000-C000-000000000046}';
	DIID_Trendline:TGUID='{000208BE-0000-0000-C000-000000000046}';
	DIID_Corners:TGUID='{000208C0-0000-0000-C000-000000000046}';
	DIID_SeriesLines:TGUID='{000208C1-0000-0000-C000-000000000046}';
	DIID_HiLoLines:TGUID='{000208C2-0000-0000-C000-000000000046}';
	DIID_Gridlines:TGUID='{000208C3-0000-0000-C000-000000000046}';
	DIID_DropLines:TGUID='{000208C4-0000-0000-C000-000000000046}';
	DIID_LeaderLines:TGUID='{00024437-0000-0000-C000-000000000046}';
	DIID_UpBars:TGUID='{000208C5-0000-0000-C000-000000000046}';
	DIID_DownBars:TGUID='{000208C6-0000-0000-C000-000000000046}';
	DIID_Floor:TGUID='{000208C7-0000-0000-C000-000000000046}';
	DIID_Walls:TGUID='{000208C8-0000-0000-C000-000000000046}';
	DIID_TickLabels:TGUID='{000208C9-0000-0000-C000-000000000046}';
	DIID_PlotArea:TGUID='{000208CB-0000-0000-C000-000000000046}';
	DIID_ChartArea:TGUID='{000208CC-0000-0000-C000-000000000046}';
	DIID_Legend:TGUID='{000208CD-0000-0000-C000-000000000046}';
	DIID_ErrorBars:TGUID='{000208CE-0000-0000-C000-000000000046}';
	DIID_DataTable:TGUID='{00020843-0000-0000-C000-000000000046}';
	DIID_Phonetic:TGUID='{00024438-0000-0000-C000-000000000046}';
	DIID_Shape:TGUID='{00024439-0000-0000-C000-000000000046}';
	DIID_Shapes:TGUID='{0002443A-0000-0000-C000-000000000046}';
	DIID_ShapeRange:TGUID='{0002443B-0000-0000-C000-000000000046}';
	DIID_GroupShapes:TGUID='{0002443C-0000-0000-C000-000000000046}';
	DIID_TextFrame:TGUID='{0002443D-0000-0000-C000-000000000046}';
	DIID_ConnectorFormat:TGUID='{0002443E-0000-0000-C000-000000000046}';
	DIID_FreeformBuilder:TGUID='{0002443F-0000-0000-C000-000000000046}';
	DIID_ControlFormat:TGUID='{00024440-0000-0000-C000-000000000046}';
	DIID_OLEFormat:TGUID='{00024441-0000-0000-C000-000000000046}';
	DIID_LinkFormat:TGUID='{00024442-0000-0000-C000-000000000046}';
	DIID_PublishObjects:TGUID='{00024443-0000-0000-C000-000000000046}';
	DIID_OLEDBError:TGUID='{00024445-0000-0000-C000-000000000046}';
	DIID_OLEDBErrors:TGUID='{00024446-0000-0000-C000-000000000046}';
	DIID_Phonetics:TGUID='{00024447-0000-0000-C000-000000000046}';
	DIID_PivotLayout:TGUID='{0002444A-0000-0000-C000-000000000046}';
	DIID_DisplayUnitLabel:TGUID='{0002084C-0000-0000-C000-000000000046}';
	DIID_CellFormat:TGUID='{00024450-0000-0000-C000-000000000046}';
	DIID_UsedObjects:TGUID='{00024451-0000-0000-C000-000000000046}';
	DIID_CustomProperties:TGUID='{00024452-0000-0000-C000-000000000046}';
	DIID_CustomProperty:TGUID='{00024453-0000-0000-C000-000000000046}';
	DIID_CalculatedMembers:TGUID='{00024454-0000-0000-C000-000000000046}';
	DIID_CalculatedMember:TGUID='{00024455-0000-0000-C000-000000000046}';
	DIID_Watches:TGUID='{00024456-0000-0000-C000-000000000046}';
	DIID_Watch:TGUID='{00024457-0000-0000-C000-000000000046}';
	DIID_PivotCell:TGUID='{00024458-0000-0000-C000-000000000046}';
	DIID_Graphic:TGUID='{00024459-0000-0000-C000-000000000046}';
	DIID_AutoRecover:TGUID='{0002445A-0000-0000-C000-000000000046}';
	DIID_ErrorCheckingOptions:TGUID='{0002445B-0000-0000-C000-000000000046}';
	DIID_Errors:TGUID='{0002445C-0000-0000-C000-000000000046}';
	DIID_Error:TGUID='{0002445D-0000-0000-C000-000000000046}';
	DIID_SmartTagAction:TGUID='{0002445E-0000-0000-C000-000000000046}';
	DIID_SmartTagActions:TGUID='{0002445F-0000-0000-C000-000000000046}';
	DIID_SmartTag:TGUID='{00024460-0000-0000-C000-000000000046}';
	DIID_SmartTags:TGUID='{00024461-0000-0000-C000-000000000046}';
	DIID_SmartTagRecognizer:TGUID='{00024462-0000-0000-C000-000000000046}';
	DIID_SmartTagRecognizers:TGUID='{00024463-0000-0000-C000-000000000046}';
	DIID_SmartTagOptions:TGUID='{00024464-0000-0000-C000-000000000046}';
	DIID_SpellingOptions:TGUID='{00024465-0000-0000-C000-000000000046}';
	DIID_Speech:TGUID='{00024466-0000-0000-C000-000000000046}';
	DIID_Protection:TGUID='{00024467-0000-0000-C000-000000000046}';
	DIID_PivotItemList:TGUID='{00024468-0000-0000-C000-000000000046}';
	DIID_Tab:TGUID='{00024469-0000-0000-C000-000000000046}';
	DIID_AllowEditRanges:TGUID='{0002446A-0000-0000-C000-000000000046}';
	DIID_AllowEditRange:TGUID='{0002446B-0000-0000-C000-000000000046}';
	DIID_UserAccessList:TGUID='{0002446C-0000-0000-C000-000000000046}';
	DIID_UserAccess:TGUID='{0002446D-0000-0000-C000-000000000046}';
	DIID_RTD:TGUID='{0002446E-0000-0000-C000-000000000046}';
	DIID_Diagram:TGUID='{0002446F-0000-0000-C000-000000000046}';
	DIID_ListObjects:TGUID='{00024470-0000-0000-C000-000000000046}';
	DIID_ListObject:TGUID='{00024471-0000-0000-C000-000000000046}';
	DIID_ListColumns:TGUID='{00024472-0000-0000-C000-000000000046}';
	DIID_ListColumn:TGUID='{00024473-0000-0000-C000-000000000046}';
	DIID_ListRows:TGUID='{00024474-0000-0000-C000-000000000046}';
	DIID_ListRow:TGUID='{00024475-0000-0000-C000-000000000046}';
	DIID_XmlNamespace:TGUID='{00024476-0000-0000-C000-000000000046}';
	DIID_XmlNamespaces:TGUID='{00024477-0000-0000-C000-000000000046}';
	DIID_XmlDataBinding:TGUID='{00024478-0000-0000-C000-000000000046}';
	DIID_XmlSchema:TGUID='{00024479-0000-0000-C000-000000000046}';
	DIID_XmlSchemas:TGUID='{0002447A-0000-0000-C000-000000000046}';
	DIID_XmlMap:TGUID='{0002447B-0000-0000-C000-000000000046}';
	DIID_XmlMaps:TGUID='{0002447C-0000-0000-C000-000000000046}';
	DIID_ListDataFormat:TGUID='{0002447D-0000-0000-C000-000000000046}';
	DIID_XPath:TGUID='{0002447E-0000-0000-C000-000000000046}';
	DIID_PivotLineCells:TGUID='{0002447F-0000-0000-C000-000000000046}';
	DIID_PivotLine:TGUID='{00024480-0000-0000-C000-000000000046}';
	DIID_PivotLines:TGUID='{00024481-0000-0000-C000-000000000046}';
	DIID_PivotAxis:TGUID='{00024482-0000-0000-C000-000000000046}';
	DIID_PivotFilter:TGUID='{00024483-0000-0000-C000-000000000046}';
	DIID_PivotFilters:TGUID='{00024484-0000-0000-C000-000000000046}';
	DIID_WorkbookConnection:TGUID='{00024485-0000-0000-C000-000000000046}';
	DIID_Connections:TGUID='{00024486-0000-0000-C000-000000000046}';
	DIID_WorksheetView:TGUID='{00024487-0000-0000-C000-000000000046}';
	DIID_ChartView:TGUID='{00024488-0000-0000-C000-000000000046}';
	DIID_ModuleView:TGUID='{00024489-0000-0000-C000-000000000046}';
	DIID_DialogSheetView:TGUID='{0002448A-0000-0000-C000-000000000046}';
	DIID_SheetViews:TGUID='{0002448C-0000-0000-C000-000000000046}';
	DIID_OLEDBConnection:TGUID='{0002448D-0000-0000-C000-000000000046}';
	DIID_ODBCConnection:TGUID='{0002448E-0000-0000-C000-000000000046}';
	DIID_Action:TGUID='{0002448F-0000-0000-C000-000000000046}';
	DIID_Actions:TGUID='{00024490-0000-0000-C000-000000000046}';
	DIID_FormatColor:TGUID='{00024491-0000-0000-C000-000000000046}';
	DIID_ConditionValue:TGUID='{00024492-0000-0000-C000-000000000046}';
	DIID_ColorScale:TGUID='{00024493-0000-0000-C000-000000000046}';
	DIID_ColorScaleCriteria:TGUID='{00024494-0000-0000-C000-000000000046}';
	DIID_ColorScaleCriterion:TGUID='{00024495-0000-0000-C000-000000000046}';
	DIID_Databar:TGUID='{00024496-0000-0000-C000-000000000046}';
	DIID_IconSetCondition:TGUID='{00024497-0000-0000-C000-000000000046}';
	DIID_IconCriteria:TGUID='{00024498-0000-0000-C000-000000000046}';
	DIID_IconCriterion:TGUID='{00024499-0000-0000-C000-000000000046}';
	DIID_Icon:TGUID='{0002449A-0000-0000-C000-000000000046}';
	DIID_IconSet:TGUID='{0002449B-0000-0000-C000-000000000046}';
	DIID_IconSets:TGUID='{0002449C-0000-0000-C000-000000000046}';
	DIID_Top10:TGUID='{0002449D-0000-0000-C000-000000000046}';
	DIID_AboveAverage:TGUID='{0002449E-0000-0000-C000-000000000046}';
	DIID_UniqueValues:TGUID='{0002449F-0000-0000-C000-000000000046}';
	DIID_Ranges:TGUID='{000244A0-0000-0000-C000-000000000046}';
	DIID_HeaderFooter:TGUID='{000244A1-0000-0000-C000-000000000046}';
	DIID_Page:TGUID='{000244A2-0000-0000-C000-000000000046}';
	DIID_Pages:TGUID='{000244A3-0000-0000-C000-000000000046}';
	DIID_ServerViewableItems:TGUID='{000244A4-0000-0000-C000-000000000046}';
	DIID_TableStyleElement:TGUID='{000244A5-0000-0000-C000-000000000046}';
	DIID_TableStyleElements:TGUID='{000244A6-0000-0000-C000-000000000046}';
	DIID_TableStyle:TGUID='{000244A7-0000-0000-C000-000000000046}';
	DIID_TableStyles:TGUID='{000244A8-0000-0000-C000-000000000046}';
	DIID_SortField:TGUID='{000244A9-0000-0000-C000-000000000046}';
	DIID_SortFields:TGUID='{000244AA-0000-0000-C000-000000000046}';
	DIID_Sort:TGUID='{000244AB-0000-0000-C000-000000000046}';
	DIID_Research:TGUID='{000244AC-0000-0000-C000-000000000046}';
	DIID_ColorStop:TGUID='{000244AD-0000-0000-C000-000000000046}';
	DIID_ColorStops:TGUID='{000244AE-0000-0000-C000-000000000046}';
	DIID_LinearGradient:TGUID='{000244AF-0000-0000-C000-000000000046}';
	DIID_RectangularGradient:TGUID='{000244B0-0000-0000-C000-000000000046}';
	DIID_MultiThreadedCalculation:TGUID='{000244B1-0000-0000-C000-000000000046}';
	DIID_ChartFormat:TGUID='{000244B2-0000-0000-C000-000000000046}';
	DIID_FileExportConverter:TGUID='{000244B3-0000-0000-C000-000000000046}';
	DIID_FileExportConverters:TGUID='{000244B4-0000-0000-C000-000000000046}';
	DIID_AddIns2:TGUID='{000244B5-0000-0000-C000-000000000046}';
	DIID_SparklineGroups:TGUID='{000244B6-0000-0000-C000-000000000046}';
	DIID_SparklineGroup:TGUID='{000244B7-0000-0000-C000-000000000046}';
	DIID_SparkPoints:TGUID='{000244B8-0000-0000-C000-000000000046}';
	DIID_Sparkline:TGUID='{000244B9-0000-0000-C000-000000000046}';
	DIID_SparkAxes:TGUID='{000244BA-0000-0000-C000-000000000046}';
	DIID_SparkHorizontalAxis:TGUID='{000244BB-0000-0000-C000-000000000046}';
	DIID_SparkVerticalAxis:TGUID='{000244BC-0000-0000-C000-000000000046}';
	DIID_SparkColor:TGUID='{000244BD-0000-0000-C000-000000000046}';
	DIID_DataBarBorder:TGUID='{000244BE-0000-0000-C000-000000000046}';
	DIID_NegativeBarFormat:TGUID='{000244BF-0000-0000-C000-000000000046}';
	DIID_ValueChange:TGUID='{000244C0-0000-0000-C000-000000000046}';
	DIID_PivotTableChangeList:TGUID='{000244C1-0000-0000-C000-000000000046}';
	DIID_DisplayFormat:TGUID='{000244C2-0000-0000-C000-000000000046}';
	DIID_SlicerCaches:TGUID='{000244C3-0000-0000-C000-000000000046}';
	DIID_SlicerCache:TGUID='{000244C4-0000-0000-C000-000000000046}';
	DIID_SlicerCacheLevels:TGUID='{000244C5-0000-0000-C000-000000000046}';
	DIID_SlicerCacheLevel:TGUID='{000244C6-0000-0000-C000-000000000046}';
	DIID_Slicers:TGUID='{000244C7-0000-0000-C000-000000000046}';
	DIID_Slicer:TGUID='{000244C8-0000-0000-C000-000000000046}';
	DIID_SlicerItem:TGUID='{000244C9-0000-0000-C000-000000000046}';
	DIID_SlicerItems:TGUID='{000244CA-0000-0000-C000-000000000046}';
	DIID_SlicerPivotTables:TGUID='{000244CB-0000-0000-C000-000000000046}';
	DIID_ProtectedViewWindows:TGUID='{000244CC-0000-0000-C000-000000000046}';
	DIID_ProtectedViewWindow:TGUID='{000244CD-0000-0000-C000-000000000046}';
	DIID_TableObject:TGUID='{000244CE-0000-0000-C000-000000000046}';
	DIID_PivotValueCell:TGUID='{000244CF-0000-0000-C000-000000000046}';
	DIID_QuickAnalysis:TGUID='{000244D0-0000-0000-C000-000000000046}';
	DIID_ModelConnection:TGUID='{000244D1-0000-0000-C000-000000000046}';
	DIID_WorksheetDataConnection:TGUID='{000244D2-0000-0000-C000-000000000046}';
	DIID_TextConnection:TGUID='{000244D3-0000-0000-C000-000000000046}';
	DIID_DataFeedConnection:TGUID='{000244D4-0000-0000-C000-000000000046}';
	DIID_ModelTableColumn:TGUID='{000244D5-0000-0000-C000-000000000046}';
	DIID_ModelTableColumns:TGUID='{000244D6-0000-0000-C000-000000000046}';
	DIID_ModelTable:TGUID='{000244D7-0000-0000-C000-000000000046}';
	DIID_ModelTables:TGUID='{000244D8-0000-0000-C000-000000000046}';
	DIID_ModelRelationship:TGUID='{000244D9-0000-0000-C000-000000000046}';
	DIID_ModelRelationships:TGUID='{000244DA-0000-0000-C000-000000000046}';
	DIID_Model:TGUID='{000244DB-0000-0000-C000-000000000046}';
	DIID_FullSeriesCollection:TGUID='{000244DC-0000-0000-C000-000000000046}';
	DIID_ChartCategory:TGUID='{000244DD-0000-0000-C000-000000000046}';
	DIID_CategoryCollection:TGUID='{000244DE-0000-0000-C000-000000000046}';
	DIID_TimelineState:TGUID='{000244DF-0000-0000-C000-000000000046}';
	DIID_TimelineViewState:TGUID='{000244E0-0000-0000-C000-000000000046}';
	DIID_ModelTableNames:TGUID='{000244E1-0000-0000-C000-000000000046}';
	DIID_ModelTableNameChange:TGUID='{000244E2-0000-0000-C000-000000000046}';
	DIID_ModelTableNameChanges:TGUID='{000244E3-0000-0000-C000-000000000046}';
	DIID_ModelChanges:TGUID='{000244E4-0000-0000-C000-000000000046}';
	DIID_ModelColumnName:TGUID='{000244E5-0000-0000-C000-000000000046}';
	DIID_ModelColumnNames:TGUID='{000244E6-0000-0000-C000-000000000046}';
	DIID_ModelColumnChange:TGUID='{000244E7-0000-0000-C000-000000000046}';
	DIID_ModelColumnChanges:TGUID='{000244E8-0000-0000-C000-000000000046}';
	DIID_ModelMeasureName:TGUID='{000244E9-0000-0000-C000-000000000046}';
	DIID_ModelMeasureNames:TGUID='{000244EA-0000-0000-C000-000000000046}';
	DIID_WorkbookQuery:TGUID='{000244EB-0000-0000-C000-000000000046}';
	DIID_Queries:TGUID='{000244EC-0000-0000-C000-000000000046}';
	DIID_ModelMeasure:TGUID='{000244ED-0000-0000-C000-000000000046}';
	DIID_ModelMeasures:TGUID='{000244EE-0000-0000-C000-000000000046}';
	DIID_ModelFormatGeneral:TGUID='{000244EF-0000-0000-C000-000000000046}';
	DIID_ModelFormatDate:TGUID='{000244F0-0000-0000-C000-000000000046}';
	DIID_ModelFormatDecimalNumber:TGUID='{000244F1-0000-0000-C000-000000000046}';
	DIID_ModelFormatWholeNumber:TGUID='{000244F2-0000-0000-C000-000000000046}';
	DIID_ModelFormatPercentageNumber:TGUID='{000244F3-0000-0000-C000-000000000046}';
	DIID_ModelFormatScientificNumber:TGUID='{000244F4-0000-0000-C000-000000000046}';
	DIID_ModelFormatCurrency:TGUID='{000244F5-0000-0000-C000-000000000046}';
	DIID_ModelFormatBoolean:TGUID='{000244F6-0000-0000-C000-000000000046}';
	DIID_PublishedDocs:TGUID='{000244F7-0000-0000-C000-000000000046}';
	DIID_PublishedDoc:TGUID='{000244F8-0000-0000-C000-000000000046}';
	DIID_SeriesGradientStopColorFormat:TGUID='{000244F9-0000-0000-C000-000000000046}';
	DIID_ChartSeriesGradientStopData:TGUID='{000244FA-0000-0000-C000-000000000046}';
	DIID_DefaultPivotTableLayoutOptions:TGUID='{000244FB-0000-0000-C000-000000000046}';
	DIID_CommentsThreaded:TGUID='{000244FC-0000-0000-C000-000000000046}';
	DIID_CommentThreaded:TGUID='{000244FD-0000-0000-C000-000000000046}';
	DIID_Author:TGUID='{000244FE-0000-0000-C000-000000000046}';
	DIID_NamedSheetViewCollection:TGUID='{00024501-0000-0000-C000-000000000046}';
	DIID_NamedSheetView:TGUID='{00024502-0000-0000-C000-000000000046}';
	IID_IDummy:TGUID='{0002442E-0001-0000-C000-000000000046}';
	IID_ICanvasShapes:TGUID='{0002444F-0001-0000-C000-000000000046}';
	CLASS_ExcelQueryTable:TGUID='{59191DA1-EA47-11CE-A51F-00AA0061507F}';
	CLASS_ExcelApplication:TGUID='{00024500-0000-0000-C000-000000000046}';
	CLASS_ExcelChart:TGUID='{00020821-0000-0000-C000-000000000046}';
	CLASS_ExcelWorksheet:TGUID='{00020820-0000-0000-C000-000000000046}';
	CLASS_ExcelGlobal:TGUID='{00020812-0000-0000-C000-000000000046}';
	CLASS_ExcelWorkbook:TGUID='{00020819-0000-0000-C000-000000000046}';
	CLASS_ExcelOLEObject:TGUID='{00020818-0000-0000-C000-000000000046}';

	// *********************************************************************//
	// Declaration of Enumerations defined in Type Library
	// *********************************************************************//
	// Constants for enum Constants
type
	Constants=TOleEnum;

const
	xlAll=$FFFFEFF8;
	xlAutomatic=$FFFFEFF7;
	xlBoth=$00000001;
	xlCenter=$FFFFEFF4;
	xlChecker=$00000009;
	xlCircle=$00000008;
	xlCorner=$00000002;
	xlCrissCross=$00000010;
	xlCross=$00000004;
	xlDiamond=$00000002;
	xlDistributed=$FFFFEFEB;
	xlDoubleAccounting=$00000005;
	xlFixedValue=$00000001;
	xlFormats=$FFFFEFE6;
	xlGray16=$00000011;
	xlGray8=$00000012;
	xlGrid=$0000000F;
	xlHigh=$FFFFEFE1;
	xlInside=$00000002;
	xlJustify=$FFFFEFDE;
	xlLightDown=$0000000D;
	xlLightHorizontal=$0000000B;
	xlLightUp=$0000000E;
	xlLightVertical=$0000000C;
	xlLow=$FFFFEFDA;
	xlManual=$FFFFEFD9;
	xlMinusValues=$00000003;
	xlModule=$FFFFEFD3;
	xlNextToAxis=$00000004;
	xlNone=$FFFFEFD2;
	xlNotes=$FFFFEFD0;
	xlOff=$FFFFEFCE;
	xlOn=$00000001;
	xlPercent=$00000002;
	xlPlus=$00000009;
	xlPlusValues=$00000002;
	xlSemiGray75=$0000000A;
	xlShowLabel=$00000004;
	xlShowLabelAndPercent=$00000005;
	xlShowPercent=$00000003;
	xlShowValue=$00000002;
	xlSimple=$FFFFEFC6;
	xlSingle=$00000002;
	xlSingleAccounting=$00000004;
	xlSolid=$00000001;
	xlSquare=$00000001;
	xlStar=$00000005;
	xlStError=$00000004;
	xlToolbarButton=$00000002;
	xlTriangle=$00000003;
	xlGray25=$FFFFEFE4;
	xlGray50=$FFFFEFE3;
	xlGray75=$FFFFEFE2;
	xlBottom=$FFFFEFF5;
	xlLeft=$FFFFEFDD;
	xlRight=$FFFFEFC8;
	xlTop=$FFFFEFC0;
	xl3DBar=$FFFFEFFD;
	xl3DSurface=$FFFFEFF9;
	xlBar=$00000002;
	xlColumn=$00000003;
	xlCombination=$FFFFEFF1;
	xlCustom=$FFFFEFEE;
	xlDefaultAutoFormat=$FFFFFFFF;
	xlMaximum=$00000002;
	xlMinimum=$00000004;
	xlOpaque=$00000003;
	xlTransparent=$00000002;
	xlBidi=$FFFFEC78;
	xlLatin=$FFFFEC77;
	xlContext=$FFFFEC76;
	xlLTR=$FFFFEC75;
	xlRTL=$FFFFEC74;
	xlFullScript=$00000001;
	xlPartialScript=$00000002;
	xlMixedScript=$00000003;
	xlMixedAuthorizedScript=$00000004;
	xlVisualCursor=$00000002;
	xlLogicalCursor=$00000001;
	xlSystem=$00000001;
	xlPartial=$00000003;
	xlHindiNumerals=$00000003;
	xlBidiCalendar=$00000003;
	xlGregorian=$00000002;
	xlComplete=$00000004;
	xlScale=$00000003;
	xlClosed=$00000003;
	xlColor1=$00000007;
	xlColor2=$00000008;
	xlColor3=$00000009;
	xlConstants=$00000002;
	xlContents=$00000002;
	xlBelow=$00000001;
	xlCascade=$00000007;
	xlCenterAcrossSelection=$00000007;
	xlChart4=$00000002;
	xlChartSeries=$00000011;
	xlChartShort=$00000006;
	xlChartTitles=$00000012;
	xlClassic1=$00000001;
	xlClassic2=$00000002;
	xlClassic3=$00000003;
	xl3DEffects1=$0000000D;
	xl3DEffects2=$0000000E;
	xlAbove=$00000000;
	xlAccounting1=$00000004;
	xlAccounting2=$00000005;
	xlAccounting3=$00000006;
	xlAccounting4=$00000011;
	xlAdd=$00000002;
	xlDebugCodePane=$0000000D;
	xlDesktop=$00000009;
	xlDirect=$00000001;
	xlDivide=$00000005;
	xlDoubleClosed=$00000005;
	xlDoubleOpen=$00000004;
	xlDoubleQuote=$00000001;
	xlEntireChart=$00000014;
	xlExcelMenus=$00000001;
	xlExtended=$00000003;
	xlFill=$00000005;
	xlFirst=$00000000;
	xlFloating=$00000005;
	xlFormula=$00000005;
	xlGeneral=$00000001;
	xlGridline=$00000016;
	xlIcons=$00000001;
	xlImmediatePane=$0000000C;
	xlInteger=$00000002;
	xlLast=$00000001;
	xlLastCell=$0000000B;
	xlList1=$0000000A;
	xlList2=$0000000B;
	xlList3=$0000000C;
	xlLocalFormat1=$0000000F;
	xlLocalFormat2=$00000010;
	xlLong=$00000003;
	xlLotusHelp=$00000002;
	xlMacrosheetCell=$00000007;
	xlMixed=$00000002;
	xlMultiply=$00000004;
	xlNarrow=$00000001;
	xlNoDocuments=$00000003;
	xlOpen=$00000002;
	xlOutside=$00000003;
	xlReference=$00000004;
	xlSemiautomatic=$00000002;
	xlShort=$00000001;
	xlSingleQuote=$00000002;
	xlStrict=$00000002;
	xlSubtract=$00000003;
	xlTextBox=$00000010;
	xlTiled=$00000001;
	xlTitleBar=$00000008;
	xlToolbar=$00000001;
	xlVisible=$0000000C;
	xlWatchPane=$0000000B;
	xlWide=$00000003;
	xlWorkbookTab=$00000006;
	xlWorksheet4=$00000001;
	xlWorksheetCell=$00000003;
	xlWorksheetShort=$00000005;
	xlAllExceptBorders=$00000007;
	xlLeftToRight=$00000002;
	xlTopToBottom=$00000001;
	xlVeryHidden=$00000002;
	xlDrawingObject=$0000000E;

	// Constants for enum XlCreator
type
	XlCreator=TOleEnum;

const
	xlCreatorCode=$5843454C;

	// Constants for enum XlChartGallery
type
	XlChartGallery=TOleEnum;

const
	xlBuiltIn=$00000015;
	xlUserDefined=$00000016;
	xlAnyGallery=$00000017;

	// Constants for enum XlColorIndex
type
	XlColorIndex=TOleEnum;

const
	xlColorIndexAutomatic=$FFFFEFF7;
	xlColorIndexNone=$FFFFEFD2;

	// Constants for enum XlEndStyleCap
type
	XlEndStyleCap=TOleEnum;

const
	xlCap=$00000001;
	xlNoCap=$00000002;

	// Constants for enum XlRowCol
type
	XlRowCol=TOleEnum;

const
	xlColumns=$00000002;
	xlRows=$00000001;

	// Constants for enum XlScaleType
type
	XlScaleType=TOleEnum;

const
	xlScaleLinear=$FFFFEFDC;
	xlScaleLogarithmic=$FFFFEFDB;

	// Constants for enum XlDataSeriesType
type
	XlDataSeriesType=TOleEnum;

const
	xlAutoFill=$00000004;
	xlChronological=$00000003;
	xlGrowth=$00000002;
	xlDataSeriesLinear=$FFFFEFDC;

	// Constants for enum XlAxisCrosses
type
	XlAxisCrosses=TOleEnum;

const
	xlAxisCrossesAutomatic=$FFFFEFF7;
	xlAxisCrossesCustom=$FFFFEFEE;
	xlAxisCrossesMaximum=$00000002;
	xlAxisCrossesMinimum=$00000004;

	// Constants for enum XlAxisGroup
type
	XlAxisGroup=TOleEnum;

const
	xlPrimary=$00000001;
	xlSecondary=$00000002;

	// Constants for enum XlBackground
type
	XlBackground=TOleEnum;

const
	xlBackgroundAutomatic=$FFFFEFF7;
	xlBackgroundOpaque=$00000003;
	xlBackgroundTransparent=$00000002;

	// Constants for enum XlWindowState
type
	XlWindowState=TOleEnum;

const
	xlMaximized=$FFFFEFD7;
	xlMinimized=$FFFFEFD4;
	xlNormal=$FFFFEFD1;

	// Constants for enum XlAxisType
type
	XlAxisType=TOleEnum;

const
	xlCategory=$00000001;
	xlSeriesAxis=$00000003;
	xlValue=$00000002;

	// Constants for enum XlArrowHeadLength
type
	XlArrowHeadLength=TOleEnum;

const
	xlArrowHeadLengthLong=$00000003;
	xlArrowHeadLengthMedium=$FFFFEFD6;
	xlArrowHeadLengthShort=$00000001;

	// Constants for enum XlVAlign
type
	XlVAlign=TOleEnum;

const
	xlVAlignBottom=$FFFFEFF5;
	xlVAlignCenter=$FFFFEFF4;
	xlVAlignDistributed=$FFFFEFEB;
	xlVAlignJustify=$FFFFEFDE;
	xlVAlignTop=$FFFFEFC0;

	// Constants for enum XlTickMark
type
	XlTickMark=TOleEnum;

const
	xlTickMarkCross=$00000004;
	xlTickMarkInside=$00000002;
	xlTickMarkNone=$FFFFEFD2;
	xlTickMarkOutside=$00000003;

	// Constants for enum XlErrorBarDirection
type
	XlErrorBarDirection=TOleEnum;

const
	xlX=$FFFFEFB8;
	xlY=$00000001;

	// Constants for enum XlErrorBarInclude
type
	XlErrorBarInclude=TOleEnum;

const
	xlErrorBarIncludeBoth=$00000001;
	xlErrorBarIncludeMinusValues=$00000003;
	xlErrorBarIncludeNone=$FFFFEFD2;
	xlErrorBarIncludePlusValues=$00000002;

	// Constants for enum XlDisplayBlanksAs
type
	XlDisplayBlanksAs=TOleEnum;

const
	xlInterpolated=$00000003;
	xlNotPlotted=$00000001;
	xlZero=$00000002;

	// Constants for enum XlArrowHeadStyle
type
	XlArrowHeadStyle=TOleEnum;

const
	xlArrowHeadStyleClosed=$00000003;
	xlArrowHeadStyleDoubleClosed=$00000005;
	xlArrowHeadStyleDoubleOpen=$00000004;
	xlArrowHeadStyleNone=$FFFFEFD2;
	xlArrowHeadStyleOpen=$00000002;

	// Constants for enum XlArrowHeadWidth
type
	XlArrowHeadWidth=TOleEnum;

const
	xlArrowHeadWidthMedium=$FFFFEFD6;
	xlArrowHeadWidthNarrow=$00000001;
	xlArrowHeadWidthWide=$00000003;

	// Constants for enum XlHAlign
type
	XlHAlign=TOleEnum;

const
	xlHAlignCenter=$FFFFEFF4;
	xlHAlignCenterAcrossSelection=$00000007;
	xlHAlignDistributed=$FFFFEFEB;
	xlHAlignFill=$00000005;
	xlHAlignGeneral=$00000001;
	xlHAlignJustify=$FFFFEFDE;
	xlHAlignLeft=$FFFFEFDD;
	xlHAlignRight=$FFFFEFC8;

	// Constants for enum XlTickLabelPosition
type
	XlTickLabelPosition=TOleEnum;

const
	xlTickLabelPositionHigh=$FFFFEFE1;
	xlTickLabelPositionLow=$FFFFEFDA;
	xlTickLabelPositionNextToAxis=$00000004;
	xlTickLabelPositionNone=$FFFFEFD2;

	// Constants for enum XlLegendPosition
type
	XlLegendPosition=TOleEnum;

const
	xlLegendPositionBottom=$FFFFEFF5;
	xlLegendPositionCorner=$00000002;
	xlLegendPositionLeft=$FFFFEFDD;
	xlLegendPositionRight=$FFFFEFC8;
	xlLegendPositionTop=$FFFFEFC0;
	xlLegendPositionCustom=$FFFFEFBF;

	// Constants for enum XlChartPictureType
type
	XlChartPictureType=TOleEnum;

const
	xlStackScale=$00000003;
	xlStack=$00000002;
	xlStretch=$00000001;

	// Constants for enum XlChartPicturePlacement
type
	XlChartPicturePlacement=TOleEnum;

const
	xlSides=$00000001;
	xlEnd=$00000002;
	xlEndSides=$00000003;
	xlFront=$00000004;
	xlFrontSides=$00000005;
	xlFrontEnd=$00000006;
	xlAllFaces=$00000007;

	// Constants for enum XlOrientation
type
	XlOrientation=TOleEnum;

const
	xlDownward=$FFFFEFB6;
	xlHorizontal=$FFFFEFE0;
	xlUpward=$FFFFEFB5;
	xlVertical=$FFFFEFBA;

	// Constants for enum XlTickLabelOrientation
type
	XlTickLabelOrientation=TOleEnum;

const
	xlTickLabelOrientationAutomatic=$FFFFEFF7;
	xlTickLabelOrientationDownward=$FFFFEFB6;
	xlTickLabelOrientationHorizontal=$FFFFEFE0;
	xlTickLabelOrientationUpward=$FFFFEFB5;
	xlTickLabelOrientationVertical=$FFFFEFBA;

	// Constants for enum XlBorderWeight
type
	XlBorderWeight=TOleEnum;

const
	xlHairline=$00000001;
	xlMedium=$FFFFEFD6;
	xlThick=$00000004;
	xlThin=$00000002;

	// Constants for enum XlDataSeriesDate
type
	XlDataSeriesDate=TOleEnum;

const
	xlDay=$00000001;
	xlMonth=$00000003;
	xlWeekday=$00000002;
	xlYear=$00000004;

	// Constants for enum XlUnderlineStyle
type
	XlUnderlineStyle=TOleEnum;

const
	xlUnderlineStyleDouble=$FFFFEFE9;
	xlUnderlineStyleDoubleAccounting=$00000005;
	xlUnderlineStyleNone=$FFFFEFD2;
	xlUnderlineStyleSingle=$00000002;
	xlUnderlineStyleSingleAccounting=$00000004;

	// Constants for enum XlErrorBarType
type
	XlErrorBarType=TOleEnum;

const
	xlErrorBarTypeCustom=$FFFFEFEE;
	xlErrorBarTypeFixedValue=$00000001;
	xlErrorBarTypePercent=$00000002;
	xlErrorBarTypeStDev=$FFFFEFC5;
	xlErrorBarTypeStError=$00000004;

	// Constants for enum XlTrendlineType
type
	XlTrendlineType=TOleEnum;

const
	xlExponential=$00000005;
	xlLinear=$FFFFEFDC;
	xlLogarithmic=$FFFFEFDB;
	xlMovingAvg=$00000006;
	xlPolynomial=$00000003;
	xlPower=$00000004;

	// Constants for enum XlLineStyle
type
	XlLineStyle=TOleEnum;

const
	xlContinuous=$00000001;
	xlDash=$FFFFEFED;
	xlDashDot=$00000004;
	xlDashDotDot=$00000005;
	xlDot=$FFFFEFEA;
	xlDouble=$FFFFEFE9;
	xlSlantDashDot=$0000000D;
	xlLineStyleNone=$FFFFEFD2;

	// Constants for enum XlDataLabelsType
type
	XlDataLabelsType=TOleEnum;

const
	xlDataLabelsShowNone=$FFFFEFD2;
	xlDataLabelsShowValue=$00000002;
	xlDataLabelsShowPercent=$00000003;
	xlDataLabelsShowLabel=$00000004;
	xlDataLabelsShowLabelAndPercent=$00000005;
	xlDataLabelsShowBubbleSizes=$00000006;

	// Constants for enum XlMarkerStyle
type
	XlMarkerStyle=TOleEnum;

const
	xlMarkerStyleAutomatic=$FFFFEFF7;
	xlMarkerStyleCircle=$00000008;
	xlMarkerStyleDash=$FFFFEFED;
	xlMarkerStyleDiamond=$00000002;
	xlMarkerStyleDot=$FFFFEFEA;
	xlMarkerStyleNone=$FFFFEFD2;
	xlMarkerStylePicture=$FFFFEFCD;
	xlMarkerStylePlus=$00000009;
	xlMarkerStyleSquare=$00000001;
	xlMarkerStyleStar=$00000005;
	xlMarkerStyleTriangle=$00000003;
	xlMarkerStyleX=$FFFFEFB8;

	// Constants for enum XlPictureConvertorType
type
	XlPictureConvertorType=TOleEnum;

const
	xlBMP=$00000001;
	xlCGM=$00000007;
	xlDRW=$00000004;
	xlDXF=$00000005;
	xlEPS=$00000008;
	xlHGL=$00000006;
	xlPCT=$0000000D;
	xlPCX=$0000000A;
	xlPIC=$0000000B;
	xlPLT=$0000000C;
	xlTIF=$00000009;
	xlWMF=$00000002;
	xlWPG=$00000003;

	// Constants for enum XlPattern
type
	XlPattern=TOleEnum;

const
	xlPatternAutomatic=$FFFFEFF7;
	xlPatternChecker=$00000009;
	xlPatternCrissCross=$00000010;
	xlPatternDown=$FFFFEFE7;
	xlPatternGray16=$00000011;
	xlPatternGray25=$FFFFEFE4;
	xlPatternGray50=$FFFFEFE3;
	xlPatternGray75=$FFFFEFE2;
	xlPatternGray8=$00000012;
	xlPatternGrid=$0000000F;
	xlPatternHorizontal=$FFFFEFE0;
	xlPatternLightDown=$0000000D;
	xlPatternLightHorizontal=$0000000B;
	xlPatternLightUp=$0000000E;
	xlPatternLightVertical=$0000000C;
	xlPatternNone=$FFFFEFD2;
	xlPatternSemiGray75=$0000000A;
	xlPatternSolid=$00000001;
	xlPatternUp=$FFFFEFBE;
	xlPatternVertical=$FFFFEFBA;
	xlPatternLinearGradient=$00000FA0;
	xlPatternRectangularGradient=$00000FA1;

	// Constants for enum XlChartSplitType
type
	XlChartSplitType=TOleEnum;

const
	xlSplitByPosition=$00000001;
	xlSplitByPercentValue=$00000003;
	xlSplitByCustomSplit=$00000004;
	xlSplitByValue=$00000002;

	// Constants for enum XlDisplayUnit
type
	XlDisplayUnit=TOleEnum;

const
	xlHundreds=$FFFFFFFE;
	xlThousands=$FFFFFFFD;
	xlTenThousands=$FFFFFFFC;
	xlHundredThousands=$FFFFFFFB;
	xlMillions=$FFFFFFFA;
	xlTenMillions=$FFFFFFF9;
	xlHundredMillions=$FFFFFFF8;
	xlThousandMillions=$FFFFFFF7;
	xlMillionMillions=$FFFFFFF6;

	// Constants for enum XlDataLabelPosition
type
	XlDataLabelPosition=TOleEnum;

const
	xlLabelPositionCenter=$FFFFEFF4;
	xlLabelPositionAbove=$00000000;
	xlLabelPositionBelow=$00000001;
	xlLabelPositionLeft=$FFFFEFDD;
	xlLabelPositionRight=$FFFFEFC8;
	xlLabelPositionOutsideEnd=$00000002;
	xlLabelPositionInsideEnd=$00000003;
	xlLabelPositionInsideBase=$00000004;
	xlLabelPositionBestFit=$00000005;
	xlLabelPositionMixed=$00000006;
	xlLabelPositionCustom=$00000007;

	// Constants for enum XlTimeUnit
type
	XlTimeUnit=TOleEnum;

const
	xlDays=$00000000;
	xlMonths=$00000001;
	xlYears=$00000002;

	// Constants for enum XlCategoryType
type
	XlCategoryType=TOleEnum;

const
	xlCategoryScale=$00000002;
	xlTimeScale=$00000003;
	xlAutomaticScale=$FFFFEFF7;

	// Constants for enum XlBarShape
type
	XlBarShape=TOleEnum;

const
	xlBox=$00000000;
	xlPyramidToPoint=$00000001;
	xlPyramidToMax=$00000002;
	xlCylinder=$00000003;
	xlConeToPoint=$00000004;
	xlConeToMax=$00000005;

	// Constants for enum XlChartType
type
	XlChartType=TOleEnum;

const
	xlColumnClustered=$00000033;
	xlColumnStacked=$00000034;
	xlColumnStacked100=$00000035;
	xl3DColumnClustered=$00000036;
	xl3DColumnStacked=$00000037;
	xl3DColumnStacked100=$00000038;
	xlBarClustered=$00000039;
	xlBarStacked=$0000003A;
	xlBarStacked100=$0000003B;
	xl3DBarClustered=$0000003C;
	xl3DBarStacked=$0000003D;
	xl3DBarStacked100=$0000003E;
	xlLineStacked=$0000003F;
	xlLineStacked100=$00000040;
	xlLineMarkers=$00000041;
	xlLineMarkersStacked=$00000042;
	xlLineMarkersStacked100=$00000043;
	xlPieOfPie=$00000044;
	xlPieExploded=$00000045;
	xl3DPieExploded=$00000046;
	xlBarOfPie=$00000047;
	xlXYScatterSmooth=$00000048;
	xlXYScatterSmoothNoMarkers=$00000049;
	xlXYScatterLines=$0000004A;
	xlXYScatterLinesNoMarkers=$0000004B;
	xlAreaStacked=$0000004C;
	xlAreaStacked100=$0000004D;
	xl3DAreaStacked=$0000004E;
	xl3DAreaStacked100=$0000004F;
	xlDoughnutExploded=$00000050;
	xlRadarMarkers=$00000051;
	xlRadarFilled=$00000052;
	xlSurface=$00000053;
	xlSurfaceWireframe=$00000054;
	xlSurfaceTopView=$00000055;
	xlSurfaceTopViewWireframe=$00000056;
	xlBubble=$0000000F;
	xlBubble3DEffect=$00000057;
	xlStockHLC=$00000058;
	xlStockOHLC=$00000059;
	xlStockVHLC=$0000005A;
	xlStockVOHLC=$0000005B;
	xlCylinderColClustered=$0000005C;
	xlCylinderColStacked=$0000005D;
	xlCylinderColStacked100=$0000005E;
	xlCylinderBarClustered=$0000005F;
	xlCylinderBarStacked=$00000060;
	xlCylinderBarStacked100=$00000061;
	xlCylinderCol=$00000062;
	xlConeColClustered=$00000063;
	xlConeColStacked=$00000064;
	xlConeColStacked100=$00000065;
	xlConeBarClustered=$00000066;
	xlConeBarStacked=$00000067;
	xlConeBarStacked100=$00000068;
	xlConeCol=$00000069;
	xlPyramidColClustered=$0000006A;
	xlPyramidColStacked=$0000006B;
	xlPyramidColStacked100=$0000006C;
	xlPyramidBarClustered=$0000006D;
	xlPyramidBarStacked=$0000006E;
	xlPyramidBarStacked100=$0000006F;
	xlPyramidCol=$00000070;
	xl3DColumn=$FFFFEFFC;
	xlLine=$00000004;
	xl3DLine=$FFFFEFFB;
	xl3DPie=$FFFFEFFA;
	xlPie=$00000005;
	xlXYScatter=$FFFFEFB7;
	xl3DArea=$FFFFEFFE;
	xlArea=$00000001;
	xlDoughnut=$FFFFEFE8;
	xlRadar=$FFFFEFC9;
	xlTreemap=$00000075;
	xlHistogram=$00000076;
	xlWaterfall=$00000077;
	xlSunburst=$00000078;
	xlBoxwhisker=$00000079;
	xlPareto=$0000007A;
	xlFunnel=$0000007B;
	xlRegionMap=$0000008C;

	// Constants for enum XlChartItem
type
	XlChartItem=TOleEnum;

const
	xlDataLabel=$00000000;
	xlChartArea=$00000002;
	xlSeries=$00000003;
	xlChartTitle=$00000004;
	xlWalls=$00000005;
	xlCorners=$00000006;
	xlDataTable=$00000007;
	xlTrendline=$00000008;
	xlErrorBars=$00000009;
	xlXErrorBars=$0000000A;
	xlYErrorBars=$0000000B;
	xlLegendEntry=$0000000C;
	xlLegendKey=$0000000D;
	xlShape=$0000000E;
	xlMajorGridlines=$0000000F;
	xlMinorGridlines=$00000010;
	xlAxisTitle=$00000011;
	xlUpBars=$00000012;
	xlPlotArea=$00000013;
	xlDownBars=$00000014;
	xlAxis=$00000015;
	xlSeriesLines=$00000016;
	xlFloor=$00000017;
	xlLegend=$00000018;
	xlHiLoLines=$00000019;
	xlDropLines=$0000001A;
	xlRadarAxisLabels=$0000001B;
	xlNothing=$0000001C;
	xlLeaderLines=$0000001D;
	xlDisplayUnitLabel=$0000001E;
	xlPivotChartFieldButton=$0000001F;
	xlPivotChartDropZone=$00000020;
	xlPivotChartExpandEntireFieldButton=$00000021;
	xlPivotChartCollapseEntireFieldButton=$00000022;

	// Constants for enum XlSizeRepresents
type
	XlSizeRepresents=TOleEnum;

const
	xlSizeIsWidth=$00000002;
	xlSizeIsArea=$00000001;

	// Constants for enum XlInsertShiftDirection
type
	XlInsertShiftDirection=TOleEnum;

const
	xlShiftDown=$FFFFEFE7;
	xlShiftToRight=$FFFFEFBF;

	// Constants for enum XlDeleteShiftDirection
type
	XlDeleteShiftDirection=TOleEnum;

const
	xlShiftToLeft=$FFFFEFC1;
	xlShiftUp=$FFFFEFBE;

	// Constants for enum XlDirection
type
	XlDirection=TOleEnum;

const
	xlDown=$FFFFEFE7;
	xlToLeft=$FFFFEFC1;
	xlToRight=$FFFFEFBF;
	xlUp=$FFFFEFBE;

	// Constants for enum XlConsolidationFunction
type
	XlConsolidationFunction=TOleEnum;

const
	xlAverage=$FFFFEFF6;
	xlCount=$FFFFEFF0;
	xlCountNums=$FFFFEFEF;
	xlMax=$FFFFEFD8;
	xlMin=$FFFFEFD5;
	xlProduct=$FFFFEFCB;
	xlStDev=$FFFFEFC5;
	xlStDevP=$FFFFEFC4;
	xlSum=$FFFFEFC3;
	xlVar=$FFFFEFBC;
	xlVarP=$FFFFEFBB;
	xlUnknown=$000003E8;
	xlDistinctCount=$0000000B;

	// Constants for enum XlSheetType
type
	XlSheetType=TOleEnum;

const
	xlChart=$FFFFEFF3;
	xlDialogSheet=$FFFFEFEC;
	xlExcel4IntlMacroSheet=$00000004;
	xlExcel4MacroSheet=$00000003;
	xlWorksheet=$FFFFEFB9;

	// Constants for enum XlLocationInTable
type
	XlLocationInTable=TOleEnum;

const
	xlColumnHeader=$FFFFEFF2;
	xlColumnItem=$00000005;
	xlDataHeader=$00000003;
	xlDataItem=$00000007;
	xlPageHeader=$00000002;
	xlPageItem=$00000006;
	xlRowHeader=$FFFFEFC7;
	xlRowItem=$00000004;
	xlTableBody=$00000008;

	// Constants for enum XlFindLookIn
type
	XlFindLookIn=TOleEnum;

const
	xlFormulas=$FFFFEFE5;
	xlComments=$FFFFEFD0;
	xlValues=$FFFFEFBD;
	xlCommentsThreaded=$FFFFEFA8;
	xlFormulas2=$FFFFEFA7;

	// Constants for enum XlWindowType
type
	XlWindowType=TOleEnum;

const
	xlChartAsWindow=$00000005;
	xlChartInPlace=$00000004;
	xlClipboard=$00000003;
	xlInfo=$FFFFEFDF;
	xlWorkbook=$00000001;

	// Constants for enum XlPivotFieldDataType
type
	XlPivotFieldDataType=TOleEnum;

const
	xlDate=$00000002;
	xlNumber=$FFFFEFCF;
	xlText=$FFFFEFC2;

	// Constants for enum XlCopyPictureFormat
type
	XlCopyPictureFormat=TOleEnum;

const
	xlBitmap=$00000002;
	xlPicture=$FFFFEFCD;

	// Constants for enum XlPivotTableSourceType
type
	XlPivotTableSourceType=TOleEnum;

const
	xlScenario=$00000004;
	xlConsolidation=$00000003;
	xlDatabase=$00000001;
	xlExternal=$00000002;
	xlPivotTable=$FFFFEFCC;

	// Constants for enum XlReferenceStyle
type
	XlReferenceStyle=TOleEnum;

const
	xlA1=$00000001;
	xlR1C1=$FFFFEFCA;

	// Constants for enum XlMSApplication
type
	XlMSApplication=TOleEnum;

const
	xlMicrosoftAccess=$00000004;
	xlMicrosoftFoxPro=$00000005;
	xlMicrosoftMail=$00000003;
	xlMicrosoftPowerPoint=$00000002;
	xlMicrosoftProject=$00000006;
	xlMicrosoftSchedulePlus=$00000007;
	xlMicrosoftWord=$00000001;

	// Constants for enum XlMouseButton
type
	XlMouseButton=TOleEnum;

const
	xlNoButton=$00000000;
	xlPrimaryButton=$00000001;
	xlSecondaryButton=$00000002;

	// Constants for enum XlCutCopyMode
type
	XlCutCopyMode=TOleEnum;

const
	xlCopy=$00000001;
	xlCut=$00000002;

	// Constants for enum XlFillWith
type
	XlFillWith=TOleEnum;

const
	xlFillWithAll=$FFFFEFF8;
	xlFillWithContents=$00000002;
	xlFillWithFormats=$FFFFEFE6;

	// Constants for enum XlFilterAction
type
	XlFilterAction=TOleEnum;

const
	xlFilterCopy=$00000002;
	xlFilterInPlace=$00000001;

	// Constants for enum XlOrder
type
	XlOrder=TOleEnum;

const
	xlDownThenOver=$00000001;
	xlOverThenDown=$00000002;

	// Constants for enum XlLinkType
type
	XlLinkType=TOleEnum;

const
	xlLinkTypeExcelLinks=$00000001;
	xlLinkTypeOLELinks=$00000002;

	// Constants for enum XlApplyNamesOrder
type
	XlApplyNamesOrder=TOleEnum;

const
	xlColumnThenRow=$00000002;
	xlRowThenColumn=$00000001;

	// Constants for enum XlEnableCancelKey
type
	XlEnableCancelKey=TOleEnum;

const
	xlDisabled=$00000000;
	xlErrorHandler=$00000002;
	xlInterrupt=$00000001;

	// Constants for enum XlPageBreak
type
	XlPageBreak=TOleEnum;

const
	xlPageBreakAutomatic=$FFFFEFF7;
	xlPageBreakManual=$FFFFEFD9;
	xlPageBreakNone=$FFFFEFD2;

	// Constants for enum XlOLEType
type
	XlOLEType=TOleEnum;

const
	xlOLEControl=$00000002;
	xlOLEEmbed=$00000001;
	xlOLELink=$00000000;

	// Constants for enum XlPageOrientation
type
	XlPageOrientation=TOleEnum;

const
	xlLandscape=$00000002;
	xlPortrait=$00000001;

	// Constants for enum XlLinkInfo
type
	XlLinkInfo=TOleEnum;

const
	xlEditionDate=$00000002;
	xlUpdateState=$00000001;
	xlLinkInfoStatus=$00000003;

	// Constants for enum XlCommandUnderlines
type
	XlCommandUnderlines=TOleEnum;

const
	xlCommandUnderlinesAutomatic=$FFFFEFF7;
	xlCommandUnderlinesOff=$FFFFEFCE;
	xlCommandUnderlinesOn=$00000001;

	// Constants for enum XlOLEVerb
type
	XlOLEVerb=TOleEnum;

const
	xlVerbOpen=$00000002;
	xlVerbPrimary=$00000001;

	// Constants for enum XlCalculation
type
	XlCalculation=TOleEnum;

const
	xlCalculationAutomatic=$FFFFEFF7;
	xlCalculationManual=$FFFFEFD9;
	xlCalculationSemiautomatic=$00000002;

	// Constants for enum XlFileAccess
type
	XlFileAccess=TOleEnum;

const
	xlReadOnly=$00000003;
	xlReadWrite=$00000002;

	// Constants for enum XlEditionType
type
	XlEditionType=TOleEnum;

const
	xlPublisher=$00000001;
	xlSubscriber=$00000002;

	// Constants for enum XlObjectSize
type
	XlObjectSize=TOleEnum;

const
	xlFitToPage=$00000002;
	xlFullPage=$00000003;
	xlScreenSize=$00000001;

	// Constants for enum XlLookAt
type
	XlLookAt=TOleEnum;

const
	xlPart=$00000002;
	xlWhole=$00000001;

	// Constants for enum XlMailSystem
type
	XlMailSystem=TOleEnum;

const
	xlMAPI=$00000001;
	xlNoMailSystem=$00000000;
	xlPowerTalk=$00000002;

	// Constants for enum XlLinkInfoType
type
	XlLinkInfoType=TOleEnum;

const
	xlLinkInfoOLELinks=$00000002;
	xlLinkInfoPublishers=$00000005;
	xlLinkInfoSubscribers=$00000006;

	// Constants for enum XlCVError
type
	XlCVError=TOleEnum;

const
	xlErrBlocked=$000007FF;
	xlErrCalc=$00000802;
	xlErrConnect=$000007FE;
	xlErrDiv0=$000007D7;
	xlErrField=$00000801;
	xlErrGettingData=$000007FB;
	xlErrNA=$000007FA;
	xlErrName=$000007ED;
	xlErrSpill=$000007FD;
	xlErrNull=$000007D0;
	xlErrNum=$000007F4;
	xlErrRef=$000007E7;
	xlErrUnknown=$00000800;
	xlErrValue=$000007DF;

	// Constants for enum XlEditionFormat
type
	XlEditionFormat=TOleEnum;

const
	xlBIFF=$00000002;
	xlPICT=$00000001;
	xlRTF=$00000004;
	xlVALU=$00000008;

	// Constants for enum XlLink
type
	XlLink=TOleEnum;

const
	xlExcelLinks=$00000001;
	xlOLELinks=$00000002;
	xlPublishers=$00000005;
	xlSubscribers=$00000006;

	// Constants for enum XlCellType
type
	XlCellType=TOleEnum;

const
	xlCellTypeBlanks=$00000004;
	xlCellTypeConstants=$00000002;
	xlCellTypeFormulas=$FFFFEFE5;
	xlCellTypeLastCell=$0000000B;
	xlCellTypeComments=$FFFFEFD0;
	xlCellTypeVisible=$0000000C;
	xlCellTypeAllFormatConditions=$FFFFEFB4;
	xlCellTypeSameFormatConditions=$FFFFEFB3;
	xlCellTypeAllValidation=$FFFFEFB2;
	xlCellTypeSameValidation=$FFFFEFB1;

	// Constants for enum XlArrangeStyle
type
	XlArrangeStyle=TOleEnum;

const
	xlArrangeStyleCascade=$00000007;
	xlArrangeStyleHorizontal=$FFFFEFE0;
	xlArrangeStyleTiled=$00000001;
	xlArrangeStyleVertical=$FFFFEFBA;

	// Constants for enum XlMousePointer
type
	XlMousePointer=TOleEnum;

const
	xlIBeam=$00000003;
	xlDefault=$FFFFEFD1;
	xlNorthwestArrow=$00000001;
	xlWait=$00000002;

	// Constants for enum XlEditionOptionsOption
type
	XlEditionOptionsOption=TOleEnum;

const
	xlAutomaticUpdate=$00000004;
	xlCancel=$00000001;
	xlChangeAttributes=$00000006;
	xlManualUpdate=$00000005;
	xlOpenSource=$00000003;
	xlSelect=$00000003;
	xlSendPublisher=$00000002;
	xlUpdateSubscriber=$00000002;

	// Constants for enum XlAutoFillType
type
	XlAutoFillType=TOleEnum;

const
	xlFillCopy=$00000001;
	xlFillDays=$00000005;
	xlFillDefault=$00000000;
	xlFillFormats=$00000003;
	xlFillMonths=$00000007;
	xlFillSeries=$00000002;
	xlFillValues=$00000004;
	xlFillWeekdays=$00000006;
	xlFillYears=$00000008;
	xlGrowthTrend=$0000000A;
	xlLinearTrend=$00000009;
	xlFlashFill=$0000000B;

	// Constants for enum XlAutoFilterOperator
type
	XlAutoFilterOperator=TOleEnum;

const
	xlAnd=$00000001;
	xlBottom10Items=$00000004;
	xlBottom10Percent=$00000006;
	xlOr=$00000002;
	xlTop10Items=$00000003;
	xlTop10Percent=$00000005;
	xlFilterValues=$00000007;
	xlFilterCellColor=$00000008;
	xlFilterFontColor=$00000009;
	xlFilterIcon=$0000000A;
	xlFilterDynamic=$0000000B;
	xlFilterNoFill=$0000000C;
	xlFilterAutomaticFontColor=$0000000D;
	xlFilterNoIcon=$0000000E;

	// Constants for enum XlClipboardFormat
type
	XlClipboardFormat=TOleEnum;

const
	xlClipboardFormatBIFF12=$0000003F;
	xlClipboardFormatBIFF=$00000008;
	xlClipboardFormatBIFF2=$00000012;
	xlClipboardFormatBIFF3=$00000014;
	xlClipboardFormatBIFF4=$0000001E;
	xlClipboardFormatBinary=$0000000F;
	xlClipboardFormatBitmap=$00000009;
	xlClipboardFormatCGM=$0000000D;
	xlClipboardFormatCSV=$00000005;
	xlClipboardFormatDIF=$00000004;
	xlClipboardFormatDspText=$0000000C;
	xlClipboardFormatEmbeddedObject=$00000015;
	xlClipboardFormatEmbedSource=$00000016;
	xlClipboardFormatLink=$0000000B;
	xlClipboardFormatLinkSource=$00000017;
	xlClipboardFormatLinkSourceDesc=$00000020;
	xlClipboardFormatMovie=$00000018;
	xlClipboardFormatNative=$0000000E;
	xlClipboardFormatObjectDesc=$0000001F;
	xlClipboardFormatObjectLink=$00000013;
	xlClipboardFormatOwnerLink=$00000011;
	xlClipboardFormatPICT=$00000002;
	xlClipboardFormatPrintPICT=$00000003;
	xlClipboardFormatRTF=$00000007;
	xlClipboardFormatScreenPICT=$0000001D;
	xlClipboardFormatStandardFont=$0000001C;
	xlClipboardFormatStandardScale=$0000001B;
	xlClipboardFormatSYLK=$00000006;
	xlClipboardFormatTable=$00000010;
	xlClipboardFormatText=$00000000;
	xlClipboardFormatToolFace=$00000019;
	xlClipboardFormatToolFacePICT=$0000001A;
	xlClipboardFormatVALU=$00000001;
	xlClipboardFormatWK1=$0000000A;

	// Constants for enum XlFileFormat
type
	XlFileFormat=TOleEnum;

const
	xlAddIn=$00000012;
	xlCSV=$00000006;
	xlCSVMac=$00000016;
	xlCSVMSDOS=$00000018;
	xlCSVWindows=$00000017;
	xlDBF2=$00000007;
	xlDBF3=$00000008;
	xlDBF4=$0000000B;
	xlDIF=$00000009;
	xlExcel2=$00000010;
	xlExcel2FarEast=$0000001B;
	xlExcel3=$0000001D;
	xlExcel4=$00000021;
	xlExcel5=$00000027;
	xlExcel7=$00000027;
	xlExcel9795=$0000002B;
	xlExcel4Workbook=$00000023;
	xlIntlAddIn=$0000001A;
	xlIntlMacro=$00000019;
	xlWorkbookNormal=$FFFFEFD1;
	xlSYLK=$00000002;
	xlTemplate=$00000011;
	xlCurrentPlatformText=$FFFFEFC2;
	xlTextMac=$00000013;
	xlTextMSDOS=$00000015;
	xlTextPrinter=$00000024;
	xlTextWindows=$00000014;
	xlWJ2WD1=$0000000E;
	xlWK1=$00000005;
	xlWK1ALL=$0000001F;
	xlWK1FMT=$0000001E;
	xlWK3=$0000000F;
	xlWK4=$00000026;
	xlWK3FM3=$00000020;
	xlWKS=$00000004;
	xlWorks2FarEast=$0000001C;
	xlWQ1=$00000022;
	xlWJ3=$00000028;
	xlWJ3FJ3=$00000029;
	xlUnicodeText=$0000002A;
	xlHtml=$0000002C;
	xlWebArchive=$0000002D;
	xlXMLSpreadsheet=$0000002E;
	xlExcel12=$00000032;
	xlOpenXMLWorkbook=$00000033;
	xlOpenXMLWorkbookMacroEnabled=$00000034;
	xlOpenXMLTemplateMacroEnabled=$00000035;
	xlTemplate8=$00000011;
	xlOpenXMLTemplate=$00000036;
	xlAddIn8=$00000012;
	xlOpenXMLAddIn=$00000037;
	xlExcel8=$00000038;
	xlOpenDocumentSpreadsheet=$0000003C;
	xlOpenXMLStrictWorkbook=$0000003D;
	xlCSVUTF8=$0000003E;
	xlWorkbookDefault=$00000033;

	// Constants for enum XlApplicationInternational
type
	XlApplicationInternational=TOleEnum;

const
	xl24HourClock=$00000021;
	xl4DigitYears=$0000002B;
	xlAlternateArraySeparator=$00000010;
	xlColumnSeparator=$0000000E;
	xlCountryCode=$00000001;
	xlCountrySetting=$00000002;
	xlCurrencyBefore=$00000025;
	xlCurrencyCode=$00000019;
	xlCurrencyDigits=$0000001B;
	xlCurrencyLeadingZeros=$00000028;
	xlCurrencyMinusSign=$00000026;
	xlCurrencyNegative=$0000001C;
	xlCurrencySpaceBefore=$00000024;
	xlCurrencyTrailingZeros=$00000027;
	xlDateOrder=$00000020;
	xlDateSeparator=$00000011;
	xlDayCode=$00000015;
	xlDayLeadingZero=$0000002A;
	xlDecimalSeparator=$00000003;
	xlGeneralFormatName=$0000001A;
	xlHourCode=$00000016;
	xlLeftBrace=$0000000C;
	xlLeftBracket=$0000000A;
	xlListSeparator=$00000005;
	xlLowerCaseColumnLetter=$00000009;
	xlLowerCaseRowLetter=$00000008;
	xlMDY=$0000002C;
	xlMetric=$00000023;
	xlMinuteCode=$00000017;
	xlMonthCode=$00000014;
	xlMonthLeadingZero=$00000029;
	xlMonthNameChars=$0000001E;
	xlNoncurrencyDigits=$0000001D;
	xlNonEnglishFunctions=$00000022;
	xlRightBrace=$0000000D;
	xlRightBracket=$0000000B;
	xlRowSeparator=$0000000F;
	xlSecondCode=$00000018;
	xlThousandsSeparator=$00000004;
	xlTimeLeadingZero=$0000002D;
	xlTimeSeparator=$00000012;
	xlUpperCaseColumnLetter=$00000007;
	xlUpperCaseRowLetter=$00000006;
	xlWeekdayNameChars=$0000001F;
	xlYearCode=$00000013;
	xlUICultureTag=$0000002E;

	// Constants for enum XlPageBreakExtent
type
	XlPageBreakExtent=TOleEnum;

const
	xlPageBreakFull=$00000001;
	xlPageBreakPartial=$00000002;

	// Constants for enum XlCellInsertionMode
type
	XlCellInsertionMode=TOleEnum;

const
	xlOverwriteCells=$00000000;
	xlInsertDeleteCells=$00000001;
	xlInsertEntireRows=$00000002;

	// Constants for enum XlFormulaLabel
type
	XlFormulaLabel=TOleEnum;

const
	xlNoLabels=$FFFFEFD2;
	xlRowLabels=$00000001;
	xlColumnLabels=$00000002;
	xlMixedLabels=$00000003;

	// Constants for enum XlHighlightChangesTime
type
	XlHighlightChangesTime=TOleEnum;

const
	xlSinceMyLastSave=$00000001;
	xlAllChanges=$00000002;
	xlNotYetReviewed=$00000003;

	// Constants for enum XlCommentDisplayMode
type
	XlCommentDisplayMode=TOleEnum;

const
	xlNoIndicator=$00000000;
	xlCommentIndicatorOnly=$FFFFFFFF;
	xlCommentAndIndicator=$00000001;

	// Constants for enum XlFormatConditionType
type
	XlFormatConditionType=TOleEnum;

const
	xlCellValue=$00000001;
	xlExpression=$00000002;
	xlColorScale=$00000003;
	xlDatabar=$00000004;
	xlTop10=$00000005;
	xlIconSets=$00000006;
	xlUniqueValues=$00000008;
	xlTextString=$00000009;
	xlBlanksCondition=$0000000A;
	xlTimePeriod=$0000000B;
	xlAboveAverageCondition=$0000000C;
	xlNoBlanksCondition=$0000000D;
	xlErrorsCondition=$00000010;
	xlNoErrorsCondition=$00000011;

	// Constants for enum XlFormatConditionOperator
type
	XlFormatConditionOperator=TOleEnum;

const
	xlBetween=$00000001;
	xlNotBetween=$00000002;
	xlEqual=$00000003;
	xlNotEqual=$00000004;
	xlGreater=$00000005;
	xlLess=$00000006;
	xlGreaterEqual=$00000007;
	xlLessEqual=$00000008;

	// Constants for enum XlEnableSelection
type
	XlEnableSelection=TOleEnum;

const
	xlNoRestrictions=$00000000;
	xlUnlockedCells=$00000001;
	xlNoSelection=$FFFFEFD2;

	// Constants for enum XlDVType
type
	XlDVType=TOleEnum;

const
	xlValidateInputOnly=$00000000;
	xlValidateWholeNumber=$00000001;
	xlValidateDecimal=$00000002;
	xlValidateList=$00000003;
	xlValidateDate=$00000004;
	xlValidateTime=$00000005;
	xlValidateTextLength=$00000006;
	xlValidateCustom=$00000007;

	// Constants for enum XlIMEMode
type
	XlIMEMode=TOleEnum;

const
	xlIMEModeNoControl=$00000000;
	xlIMEModeOn=$00000001;
	xlIMEModeOff=$00000002;
	xlIMEModeDisable=$00000003;
	xlIMEModeHiragana=$00000004;
	xlIMEModeKatakana=$00000005;
	xlIMEModeKatakanaHalf=$00000006;
	xlIMEModeAlphaFull=$00000007;
	xlIMEModeAlpha=$00000008;
	xlIMEModeHangulFull=$00000009;
	xlIMEModeHangul=$0000000A;

	// Constants for enum XlDVAlertStyle
type
	XlDVAlertStyle=TOleEnum;

const
	xlValidAlertStop=$00000001;
	xlValidAlertWarning=$00000002;
	xlValidAlertInformation=$00000003;

	// Constants for enum XlChartLocation
type
	XlChartLocation=TOleEnum;

const
	xlLocationAsNewSheet=$00000001;
	xlLocationAsObject=$00000002;
	xlLocationAutomatic=$00000003;

	// Constants for enum XlPaperSize
type
	XlPaperSize=TOleEnum;

const
	xlPaper10x14=$00000010;
	xlPaper11x17=$00000011;
	xlPaperA3=$00000008;
	xlPaperA4=$00000009;
	xlPaperA4Small=$0000000A;
	xlPaperA5=$0000000B;
	xlPaperB4=$0000000C;
	xlPaperB5=$0000000D;
	xlPaperCsheet=$00000018;
	xlPaperDsheet=$00000019;
	xlPaperEnvelope10=$00000014;
	xlPaperEnvelope11=$00000015;
	xlPaperEnvelope12=$00000016;
	xlPaperEnvelope14=$00000017;
	xlPaperEnvelope9=$00000013;
	xlPaperEnvelopeB4=$00000021;
	xlPaperEnvelopeB5=$00000022;
	xlPaperEnvelopeB6=$00000023;
	xlPaperEnvelopeC3=$0000001D;
	xlPaperEnvelopeC4=$0000001E;
	xlPaperEnvelopeC5=$0000001C;
	xlPaperEnvelopeC6=$0000001F;
	xlPaperEnvelopeC65=$00000020;
	xlPaperEnvelopeDL=$0000001B;
	xlPaperEnvelopeItaly=$00000024;
	xlPaperEnvelopeMonarch=$00000025;
	xlPaperEnvelopePersonal=$00000026;
	xlPaperEsheet=$0000001A;
	xlPaperExecutive=$00000007;
	xlPaperFanfoldLegalGerman=$00000029;
	xlPaperFanfoldStdGerman=$00000028;
	xlPaperFanfoldUS=$00000027;
	xlPaperFolio=$0000000E;
	xlPaperLedger=$00000004;
	xlPaperLegal=$00000005;
	xlPaperLetter=$00000001;
	xlPaperLetterSmall=$00000002;
	xlPaperNote=$00000012;
	xlPaperQuarto=$0000000F;
	xlPaperStatement=$00000006;
	xlPaperTabloid=$00000003;
	xlPaperUser=$00000100;

	// Constants for enum XlPasteSpecialOperation
type
	XlPasteSpecialOperation=TOleEnum;

const
	xlPasteSpecialOperationAdd=$00000002;
	xlPasteSpecialOperationDivide=$00000005;
	xlPasteSpecialOperationMultiply=$00000004;
	xlPasteSpecialOperationNone=$FFFFEFD2;
	xlPasteSpecialOperationSubtract=$00000003;

	// Constants for enum XlPasteType
type
	XlPasteType=TOleEnum;

const
	xlPasteAll=$FFFFEFF8;
	xlPasteAllUsingSourceTheme=$0000000D;
	xlPasteAllMergingConditionalFormats=$0000000E;
	xlPasteAllExceptBorders=$00000007;
	xlPasteFormats=$FFFFEFE6;
	xlPasteFormulas=$FFFFEFE5;
	xlPasteComments=$FFFFEFD0;
	xlPasteValues=$FFFFEFBD;
	xlPasteColumnWidths=$00000008;
	xlPasteValidation=$00000006;
	xlPasteFormulasAndNumberFormats=$0000000B;
	xlPasteValuesAndNumberFormats=$0000000C;

	// Constants for enum XlPhoneticCharacterType
type
	XlPhoneticCharacterType=TOleEnum;

const
	xlKatakanaHalf=$00000000;
	xlKatakana=$00000001;
	xlHiragana=$00000002;
	xlNoConversion=$00000003;

	// Constants for enum XlPhoneticAlignment
type
	XlPhoneticAlignment=TOleEnum;

const
	xlPhoneticAlignNoControl=$00000000;
	xlPhoneticAlignLeft=$00000001;
	xlPhoneticAlignCenter=$00000002;
	xlPhoneticAlignDistributed=$00000003;

	// Constants for enum XlPictureAppearance
type
	XlPictureAppearance=TOleEnum;

const
	xlPrinter=$00000002;
	xlScreen=$00000001;

	// Constants for enum XlPivotFieldOrientation
type
	XlPivotFieldOrientation=TOleEnum;

const
	xlColumnField=$00000002;
	xlDataField=$00000004;
	xlHidden=$00000000;
	xlPageField=$00000003;
	xlRowField=$00000001;

	// Constants for enum XlPivotFieldCalculation
type
	XlPivotFieldCalculation=TOleEnum;

const
	xlDifferenceFrom=$00000002;
	xlIndex=$00000009;
	xlNoAdditionalCalculation=$FFFFEFD1;
	xlPercentDifferenceFrom=$00000004;
	xlPercentOf=$00000003;
	xlPercentOfColumn=$00000007;
	xlPercentOfRow=$00000006;
	xlPercentOfTotal=$00000008;
	xlRunningTotal=$00000005;
	xlPercentOfParentRow=$0000000A;
	xlPercentOfParentColumn=$0000000B;
	xlPercentOfParent=$0000000C;
	xlPercentRunningTotal=$0000000D;
	xlRankAscending=$0000000E;
	xlRankDecending=$0000000F;

	// Constants for enum XlPlacement
type
	XlPlacement=TOleEnum;

const
	xlFreeFloating=$00000003;
	xlMove=$00000002;
	xlMoveAndSize=$00000001;

	// Constants for enum XlPlatform
type
	XlPlatform=TOleEnum;

const
	xlMacintosh=$00000001;
	xlMSDOS=$00000003;
	xlWindows=$00000002;

	// Constants for enum XlPrintLocation
type
	XlPrintLocation=TOleEnum;

const
	xlPrintSheetEnd=$00000001;
	xlPrintInPlace=$00000010;
	xlPrintNoComments=$FFFFEFD2;

	// Constants for enum XlPriority
type
	XlPriority=TOleEnum;

const
	xlPriorityHigh=$FFFFEFE1;
	xlPriorityLow=$FFFFEFDA;
	xlPriorityNormal=$FFFFEFD1;

	// Constants for enum XlPTSelectionMode
type
	XlPTSelectionMode=TOleEnum;

const
	xlLabelOnly=$00000001;
	xlDataAndLabel=$00000000;
	xlDataOnly=$00000002;
	xlOrigin=$00000003;
	xlButton=$0000000F;
	xlBlanks=$00000004;
	xlFirstRow=$00000100;

	// Constants for enum XlRangeAutoFormat
type
	XlRangeAutoFormat=TOleEnum;

const
	xlRangeAutoFormat3DEffects1=$0000000D;
	xlRangeAutoFormat3DEffects2=$0000000E;
	xlRangeAutoFormatAccounting1=$00000004;
	xlRangeAutoFormatAccounting2=$00000005;
	xlRangeAutoFormatAccounting3=$00000006;
	xlRangeAutoFormatAccounting4=$00000011;
	xlRangeAutoFormatClassic1=$00000001;
	xlRangeAutoFormatClassic2=$00000002;
	xlRangeAutoFormatClassic3=$00000003;
	xlRangeAutoFormatColor1=$00000007;
	xlRangeAutoFormatColor2=$00000008;
	xlRangeAutoFormatColor3=$00000009;
	xlRangeAutoFormatList1=$0000000A;
	xlRangeAutoFormatList2=$0000000B;
	xlRangeAutoFormatList3=$0000000C;
	xlRangeAutoFormatLocalFormat1=$0000000F;
	xlRangeAutoFormatLocalFormat2=$00000010;
	xlRangeAutoFormatLocalFormat3=$00000013;
	xlRangeAutoFormatLocalFormat4=$00000014;
	xlRangeAutoFormatReport1=$00000015;
	xlRangeAutoFormatReport2=$00000016;
	xlRangeAutoFormatReport3=$00000017;
	xlRangeAutoFormatReport4=$00000018;
	xlRangeAutoFormatReport5=$00000019;
	xlRangeAutoFormatReport6=$0000001A;
	xlRangeAutoFormatReport7=$0000001B;
	xlRangeAutoFormatReport8=$0000001C;
	xlRangeAutoFormatReport9=$0000001D;
	xlRangeAutoFormatReport10=$0000001E;
	xlRangeAutoFormatClassicPivotTable=$0000001F;
	xlRangeAutoFormatTable1=$00000020;
	xlRangeAutoFormatTable2=$00000021;
	xlRangeAutoFormatTable3=$00000022;
	xlRangeAutoFormatTable4=$00000023;
	xlRangeAutoFormatTable5=$00000024;
	xlRangeAutoFormatTable6=$00000025;
	xlRangeAutoFormatTable7=$00000026;
	xlRangeAutoFormatTable8=$00000027;
	xlRangeAutoFormatTable9=$00000028;
	xlRangeAutoFormatTable10=$00000029;
	xlRangeAutoFormatPTNone=$0000002A;
	xlRangeAutoFormatNone=$FFFFEFD2;
	xlRangeAutoFormatSimple=$FFFFEFC6;

	// Constants for enum XlReferenceType
type
	XlReferenceType=TOleEnum;

const
	xlAbsolute=$00000001;
	xlAbsRowRelColumn=$00000002;
	xlRelative=$00000004;
	xlRelRowAbsColumn=$00000003;

	// Constants for enum XlLayoutFormType
type
	XlLayoutFormType=TOleEnum;

const
	xlTabular=$00000000;
	xlOutline=$00000001;

	// Constants for enum XlRoutingSlipDelivery
type
	XlRoutingSlipDelivery=TOleEnum;

const
	xlAllAtOnce=$00000002;
	xlOneAfterAnother=$00000001;

	// Constants for enum XlRoutingSlipStatus
type
	XlRoutingSlipStatus=TOleEnum;

const
	xlNotYetRouted=$00000000;
	xlRoutingComplete=$00000002;
	xlRoutingInProgress=$00000001;

	// Constants for enum XlRunAutoMacro
type
	XlRunAutoMacro=TOleEnum;

const
	xlAutoActivate=$00000003;
	xlAutoClose=$00000002;
	xlAutoDeactivate=$00000004;
	xlAutoOpen=$00000001;

	// Constants for enum XlSaveAction
type
	XlSaveAction=TOleEnum;

const
	xlDoNotSaveChanges=$00000002;
	xlSaveChanges=$00000001;

	// Constants for enum XlSaveAsAccessMode
type
	XlSaveAsAccessMode=TOleEnum;

const
	xlExclusive=$00000003;
	xlNoChange=$00000001;
	xlShared=$00000002;

	// Constants for enum XlSaveConflictResolution
type
	XlSaveConflictResolution=TOleEnum;

const
	xlLocalSessionChanges=$00000002;
	xlOtherSessionChanges=$00000003;
	xlUserResolution=$00000001;

	// Constants for enum XlSearchDirection
type
	XlSearchDirection=TOleEnum;

const
	xlNext=$00000001;
	xlPrevious=$00000002;

	// Constants for enum XlSearchOrder
type
	XlSearchOrder=TOleEnum;

const
	xlByColumns=$00000002;
	xlByRows=$00000001;

	// Constants for enum XlSheetVisibility
type
	XlSheetVisibility=TOleEnum;

const
	xlSheetVisible=$FFFFFFFF;
	xlSheetHidden=$00000000;
	xlSheetVeryHidden=$00000002;

	// Constants for enum XlSortMethod
type
	XlSortMethod=TOleEnum;

const
	xlPinYin=$00000001;
	xlStroke=$00000002;

	// Constants for enum XlSortMethodOld
type
	XlSortMethodOld=TOleEnum;

const
	xlCodePage=$00000002;
	xlSyllabary=$00000001;

	// Constants for enum XlSortOrder
type
	XlSortOrder=TOleEnum;

const
	xlAscending=$00000001;
	xlDescending=$00000002;

	// Constants for enum XlSortOrientation
type
	XlSortOrientation=TOleEnum;

const
	xlSortRows=$00000002;
	xlSortColumns=$00000001;

	// Constants for enum XlSortType
type
	XlSortType=TOleEnum;

const
	xlSortLabels=$00000002;
	xlSortValues=$00000001;

	// Constants for enum XlSpecialCellsValue
type
	XlSpecialCellsValue=TOleEnum;

const
	xlErrors=$00000010;
	xlLogical=$00000004;
	xlNumbers=$00000001;
	xlTextValues=$00000002;

	// Constants for enum XlSubscribeToFormat
type
	XlSubscribeToFormat=TOleEnum;

const
	xlSubscribeToPicture=$FFFFEFCD;
	xlSubscribeToText=$FFFFEFC2;

	// Constants for enum XlSummaryRow
type
	XlSummaryRow=TOleEnum;

const
	xlSummaryAbove=$00000000;
	xlSummaryBelow=$00000001;

	// Constants for enum XlSummaryColumn
type
	XlSummaryColumn=TOleEnum;

const
	xlSummaryOnLeft=$FFFFEFDD;
	xlSummaryOnRight=$FFFFEFC8;

	// Constants for enum XlSummaryReportType
type
	XlSummaryReportType=TOleEnum;

const
	xlSummaryPivotTable=$FFFFEFCC;
	xlStandardSummary=$00000001;

	// Constants for enum XlTabPosition
type
	XlTabPosition=TOleEnum;

const
	xlTabPositionFirst=$00000000;
	xlTabPositionLast=$00000001;

	// Constants for enum XlTextParsingType
type
	XlTextParsingType=TOleEnum;

const
	xlDelimited=$00000001;
	xlFixedWidth=$00000002;

	// Constants for enum XlTextQualifier
type
	XlTextQualifier=TOleEnum;

const
	xlTextQualifierDoubleQuote=$00000001;
	xlTextQualifierNone=$FFFFEFD2;
	xlTextQualifierSingleQuote=$00000002;

	// Constants for enum XlWBATemplate
type
	XlWBATemplate=TOleEnum;

const
	xlWBATChart=$FFFFEFF3;
	xlWBATExcel4IntlMacroSheet=$00000004;
	xlWBATExcel4MacroSheet=$00000003;
	xlWBATWorksheet=$FFFFEFB9;

	// Constants for enum XlWindowView
type
	XlWindowView=TOleEnum;

const
	xlNormalView=$00000001;
	xlPageBreakPreview=$00000002;
	xlPageLayoutView=$00000003;

	// Constants for enum XlXLMMacroType
type
	XlXLMMacroType=TOleEnum;

const
	xlCommand=$00000002;
	xlFunction=$00000001;
	xlNotXLM=$00000003;

	// Constants for enum XlYesNoGuess
type
	XlYesNoGuess=TOleEnum;

const
	xlGuess=$00000000;
	xlNo=$00000002;
	xlYes=$00000001;

	// Constants for enum XlBordersIndex
type
	XlBordersIndex=TOleEnum;

const
	xlInsideHorizontal=$0000000C;
	xlInsideVertical=$0000000B;
	xlDiagonalDown=$00000005;
	xlDiagonalUp=$00000006;
	xlEdgeBottom=$00000009;
	xlEdgeLeft=$00000007;
	xlEdgeRight=$0000000A;
	xlEdgeTop=$00000008;

	// Constants for enum XlToolbarProtection
type
	XlToolbarProtection=TOleEnum;

const
	xlNoButtonChanges=$00000001;
	xlNoChanges=$00000004;
	xlNoDockingChanges=$00000003;
	xlToolbarProtectionNone=$FFFFEFD1;
	xlNoShapeChanges=$00000002;

	// Constants for enum XlBuiltInDialog
type
	XlBuiltInDialog=TOleEnum;

const
	xlDialogOpen=$00000001;
	xlDialogOpenLinks=$00000002;
	xlDialogSaveAs=$00000005;
	xlDialogFileDelete=$00000006;
	xlDialogPageSetup=$00000007;
	xlDialogPrint=$00000008;
	xlDialogPrinterSetup=$00000009;
	xlDialogArrangeAll=$0000000C;
	xlDialogWindowSize=$0000000D;
	xlDialogWindowMove=$0000000E;
	xlDialogRun=$00000011;
	xlDialogSetPrintTitles=$00000017;
	xlDialogFont=$0000001A;
	xlDialogDisplay=$0000001B;
	xlDialogProtectDocument=$0000001C;
	xlDialogCalculation=$00000020;
	xlDialogExtract=$00000023;
	xlDialogDataDelete=$00000024;
	xlDialogSort=$00000027;
	xlDialogDataSeries=$00000028;
	xlDialogTable=$00000029;
	xlDialogFormatNumber=$0000002A;
	xlDialogAlignment=$0000002B;
	xlDialogStyle=$0000002C;
	xlDialogBorder=$0000002D;
	xlDialogCellProtection=$0000002E;
	xlDialogColumnWidth=$0000002F;
	xlDialogClear=$00000034;
	xlDialogPasteSpecial=$00000035;
	xlDialogEditDelete=$00000036;
	xlDialogInsert=$00000037;
	xlDialogPasteNames=$0000003A;
	xlDialogDefineName=$0000003D;
	xlDialogCreateNames=$0000003E;
	xlDialogFormulaGoto=$0000003F;
	xlDialogFormulaFind=$00000040;
	xlDialogGalleryArea=$00000043;
	xlDialogGalleryBar=$00000044;
	xlDialogGalleryColumn=$00000045;
	xlDialogGalleryLine=$00000046;
	xlDialogGalleryPie=$00000047;
	xlDialogGalleryScatter=$00000048;
	xlDialogCombination=$00000049;
	xlDialogGridlines=$0000004C;
	xlDialogAxes=$0000004E;
	xlDialogAttachText=$00000050;
	xlDialogPatterns=$00000054;
	xlDialogMainChart=$00000055;
	xlDialogOverlay=$00000056;
	xlDialogScale=$00000057;
	xlDialogFormatLegend=$00000058;
	xlDialogFormatText=$00000059;
	xlDialogParse=$0000005B;
	xlDialogUnhide=$0000005E;
	xlDialogWorkspace=$0000005F;
	xlDialogActivate=$00000067;
	xlDialogCopyPicture=$0000006C;
	xlDialogDeleteName=$0000006E;
	xlDialogDeleteFormat=$0000006F;
	xlDialogNew=$00000077;
	xlDialogRowHeight=$0000007F;
	xlDialogFormatMove=$00000080;
	xlDialogFormatSize=$00000081;
	xlDialogFormulaReplace=$00000082;
	xlDialogSelectSpecial=$00000084;
	xlDialogApplyNames=$00000085;
	xlDialogReplaceFont=$00000086;
	xlDialogSplit=$00000089;
	xlDialogOutline=$0000008E;
	xlDialogSaveWorkbook=$00000091;
	xlDialogCopyChart=$00000093;
	xlDialogFormatFont=$00000096;
	xlDialogNote=$0000009A;
	xlDialogSetUpdateStatus=$0000009F;
	xlDialogColorPalette=$000000A1;
	xlDialogChangeLink=$000000A6;
	xlDialogAppMove=$000000AA;
	xlDialogAppSize=$000000AB;
	xlDialogMainChartType=$000000B9;
	xlDialogOverlayChartType=$000000BA;
	xlDialogOpenMail=$000000BC;
	xlDialogSendMail=$000000BD;
	xlDialogStandardFont=$000000BE;
	xlDialogConsolidate=$000000BF;
	xlDialogSortSpecial=$000000C0;
	xlDialogGallery3dArea=$000000C1;
	xlDialogGallery3dColumn=$000000C2;
	xlDialogGallery3dLine=$000000C3;
	xlDialogGallery3dPie=$000000C4;
	xlDialogView3d=$000000C5;
	xlDialogGoalSeek=$000000C6;
	xlDialogWorkgroup=$000000C7;
	xlDialogFillGroup=$000000C8;
	xlDialogUpdateLink=$000000C9;
	xlDialogPromote=$000000CA;
	xlDialogDemote=$000000CB;
	xlDialogShowDetail=$000000CC;
	xlDialogObjectProperties=$000000CF;
	xlDialogSaveNewObject=$000000D0;
	xlDialogApplyStyle=$000000D4;
	xlDialogAssignToObject=$000000D5;
	xlDialogObjectProtection=$000000D6;
	xlDialogCreatePublisher=$000000D9;
	xlDialogSubscribeTo=$000000DA;
	xlDialogShowToolbar=$000000DC;
	xlDialogPrintPreview=$000000DE;
	xlDialogEditColor=$000000DF;
	xlDialogFormatMain=$000000E1;
	xlDialogFormatOverlay=$000000E2;
	xlDialogEditSeries=$000000E4;
	xlDialogDefineStyle=$000000E5;
	xlDialogGalleryRadar=$000000F9;
	xlDialogEditionOptions=$000000FB;
	xlDialogZoom=$00000100;
	xlDialogInsertObject=$00000103;
	xlDialogSize=$00000105;
	xlDialogMove=$00000106;
	xlDialogFormatAuto=$0000010D;
	xlDialogGallery3dBar=$00000110;
	xlDialogGallery3dSurface=$00000111;
	xlDialogCustomizeToolbar=$00000114;
	xlDialogWorkbookAdd=$00000119;
	xlDialogWorkbookMove=$0000011A;
	xlDialogWorkbookCopy=$0000011B;
	xlDialogWorkbookOptions=$0000011C;
	xlDialogSaveWorkspace=$0000011D;
	xlDialogChartWizard=$00000120;
	xlDialogAssignToTool=$00000125;
	xlDialogPlacement=$0000012C;
	xlDialogFillWorkgroup=$0000012D;
	xlDialogWorkbookNew=$0000012E;
	xlDialogScenarioCells=$00000131;
	xlDialogScenarioAdd=$00000133;
	xlDialogScenarioEdit=$00000134;
	xlDialogScenarioSummary=$00000137;
	xlDialogPivotTableWizard=$00000138;
	xlDialogPivotFieldProperties=$00000139;
	xlDialogOptionsCalculation=$0000013E;
	xlDialogOptionsEdit=$0000013F;
	xlDialogOptionsView=$00000140;
	xlDialogAddinManager=$00000141;
	xlDialogMenuEditor=$00000142;
	xlDialogAttachToolbars=$00000143;
	xlDialogOptionsChart=$00000145;
	xlDialogVbaInsertFile=$00000148;
	xlDialogVbaProcedureDefinition=$0000014A;
	xlDialogRoutingSlip=$00000150;
	xlDialogMailLogon=$00000153;
	xlDialogInsertPicture=$00000156;
	xlDialogGalleryDoughnut=$00000158;
	xlDialogChartTrend=$0000015E;
	xlDialogWorkbookInsert=$00000162;
	xlDialogOptionsTransition=$00000163;
	xlDialogOptionsGeneral=$00000164;
	xlDialogFilterAdvanced=$00000172;
	xlDialogMailNextLetter=$0000017A;
	xlDialogDataLabel=$0000017B;
	xlDialogInsertTitle=$0000017C;
	xlDialogFontProperties=$0000017D;
	xlDialogMacroOptions=$0000017E;
	xlDialogWorkbookUnhide=$00000180;
	xlDialogWorkbookName=$00000182;
	xlDialogGalleryCustom=$00000184;
	xlDialogAddChartAutoformat=$00000186;
	xlDialogChartAddData=$00000188;
	xlDialogTabOrder=$0000018A;
	xlDialogSubtotalCreate=$0000018E;
	xlDialogWorkbookTabSplit=$0000019F;
	xlDialogWorkbookProtect=$000001A1;
	xlDialogScrollbarProperties=$000001A4;
	xlDialogPivotShowPages=$000001A5;
	xlDialogTextToColumns=$000001A6;
	xlDialogFormatCharttype=$000001A7;
	xlDialogPivotFieldGroup=$000001B1;
	xlDialogPivotFieldUngroup=$000001B2;
	xlDialogCheckboxProperties=$000001B3;
	xlDialogLabelProperties=$000001B4;
	xlDialogListboxProperties=$000001B5;
	xlDialogEditboxProperties=$000001B6;
	xlDialogOpenText=$000001B9;
	xlDialogPushbuttonProperties=$000001BD;
	xlDialogFilter=$000001BF;
	xlDialogFunctionWizard=$000001C2;
	xlDialogSaveCopyAs=$000001C8;
	xlDialogOptionsListsAdd=$000001CA;
	xlDialogSeriesAxes=$000001CC;
	xlDialogSeriesX=$000001CD;
	xlDialogSeriesY=$000001CE;
	xlDialogErrorbarX=$000001CF;
	xlDialogErrorbarY=$000001D0;
	xlDialogFormatChart=$000001D1;
	xlDialogSeriesOrder=$000001D2;
	xlDialogMailEditMailer=$000001D6;
	xlDialogStandardWidth=$000001D8;
	xlDialogScenarioMerge=$000001D9;
	xlDialogProperties=$000001DA;
	xlDialogSummaryInfo=$000001DA;
	xlDialogFindFile=$000001DB;
	xlDialogActiveCellFont=$000001DC;
	xlDialogVbaMakeAddin=$000001DE;
	xlDialogFileSharing=$000001E1;
	xlDialogAutoCorrect=$000001E5;
	xlDialogCustomViews=$000001ED;
	xlDialogInsertNameLabel=$000001F0;
	xlDialogSeriesShape=$000001F8;
	xlDialogChartOptionsDataLabels=$000001F9;
	xlDialogChartOptionsDataTable=$000001FA;
	xlDialogSetBackgroundPicture=$000001FD;
	xlDialogDataValidation=$0000020D;
	xlDialogChartType=$0000020E;
	xlDialogChartLocation=$0000020F;
	_xlDialogPhonetic=$0000021A;
	xlDialogChartSourceData=$0000021C;
	_xlDialogChartSourceData=$0000021D;
	xlDialogSeriesOptions=$0000022D;
	xlDialogPivotTableOptions=$00000237;
	xlDialogPivotSolveOrder=$00000238;
	xlDialogPivotCalculatedField=$0000023A;
	xlDialogPivotCalculatedItem=$0000023C;
	xlDialogConditionalFormatting=$00000247;
	xlDialogInsertHyperlink=$00000254;
	xlDialogProtectSharing=$0000026C;
	xlDialogOptionsME=$00000287;
	xlDialogPublishAsWebPage=$0000028D;
	xlDialogPhonetic=$00000290;
	xlDialogNewWebQuery=$0000029B;
	xlDialogImportTextFile=$0000029A;
	xlDialogExternalDataProperties=$00000212;
	xlDialogWebOptionsGeneral=$000002AB;
	xlDialogWebOptionsFiles=$000002AC;
	xlDialogWebOptionsPictures=$000002AD;
	xlDialogWebOptionsEncoding=$000002AE;
	xlDialogWebOptionsFonts=$000002AF;
	xlDialogPivotClientServerSet=$000002B1;
	xlDialogPropertyFields=$000002F2;
	xlDialogSearch=$000002DB;
	xlDialogEvaluateFormula=$000002C5;
	xlDialogDataLabelMultiple=$000002D3;
	xlDialogChartOptionsDataLabelMultiple=$000002D4;
	xlDialogErrorChecking=$000002DC;
	xlDialogWebOptionsBrowsers=$00000305;
	xlDialogCreateList=$0000031C;
	xlDialogPermission=$00000340;
	xlDialogMyPermission=$00000342;
	xlDialogDocumentInspector=$0000035E;
	xlDialogNameManager=$000003D1;
	xlDialogNewName=$000003D2;
	xlDialogSparklineInsertLine=$0000046D;
	xlDialogSparklineInsertColumn=$0000046E;
	xlDialogSparklineInsertWinLoss=$0000046F;
	xlDialogSlicerSettings=$0000049B;
	xlDialogSlicerCreation=$0000049E;
	xlDialogSlicerPivotTableConnections=$000004A0;
	xlDialogPivotTableSlicerConnections=$0000049F;
	xlDialogPivotTableWhatIfAnalysisSettings=$00000481;
	xlDialogSetManager=$00000455;
	xlDialogSetMDXEditor=$000004B8;
	xlDialogSetTupleEditorOnRows=$00000453;
	xlDialogSetTupleEditorOnColumns=$00000454;
	xlDialogManageRelationships=$000004F7;
	xlDialogCreateRelationship=$000004F8;
	xlDialogRecommendedPivotTables=$000004EA;
	xlDialogForecastETS=$00000514;
	xlDialogPivotDefaultLayout=$00000550;

	// Constants for enum XlParameterType
type
	XlParameterType=TOleEnum;

const
	xlPrompt=$00000000;
	xlConstant=$00000001;
	xlRange=$00000002;

	// Constants for enum XlParameterDataType
type
	XlParameterDataType=TOleEnum;

const
	xlParamTypeUnknown=$00000000;
	xlParamTypeChar=$00000001;
	xlParamTypeNumeric=$00000002;
	xlParamTypeDecimal=$00000003;
	xlParamTypeInteger=$00000004;
	xlParamTypeSmallInt=$00000005;
	xlParamTypeFloat=$00000006;
	xlParamTypeReal=$00000007;
	xlParamTypeDouble=$00000008;
	xlParamTypeVarChar=$0000000C;
	xlParamTypeDate=$00000009;
	xlParamTypeTime=$0000000A;
	xlParamTypeTimestamp=$0000000B;
	xlParamTypeLongVarChar=$FFFFFFFF;
	xlParamTypeBinary=$FFFFFFFE;
	xlParamTypeVarBinary=$FFFFFFFD;
	xlParamTypeLongVarBinary=$FFFFFFFC;
	xlParamTypeBigInt=$FFFFFFFB;
	xlParamTypeTinyInt=$FFFFFFFA;
	xlParamTypeBit=$FFFFFFF9;
	xlParamTypeWChar=$FFFFFFF8;

	// Constants for enum XlFormControl
type
	XlFormControl=TOleEnum;

const
	xlButtonControl=$00000000;
	xlCheckBox=$00000001;
	xlDropDown=$00000002;
	xlEditBox=$00000003;
	xlGroupBox=$00000004;
	xlLabel=$00000005;
	xlListBox=$00000006;
	xlOptionButton=$00000007;
	xlScrollBar=$00000008;
	xlSpinner=$00000009;

	// Constants for enum XlSourceType
type
	XlSourceType=TOleEnum;

const
	xlSourceWorkbook=$00000000;
	xlSourceSheet=$00000001;
	xlSourcePrintArea=$00000002;
	xlSourceAutoFilter=$00000003;
	xlSourceRange=$00000004;
	xlSourceChart=$00000005;
	xlSourcePivotTable=$00000006;
	xlSourceQuery=$00000007;

	// Constants for enum XlHtmlType
type
	XlHtmlType=TOleEnum;

const
	xlHtmlStatic=$00000000;
	xlHtmlCalc=$00000001;
	xlHtmlList=$00000002;
	xlHtmlChart=$00000003;

	// Constants for enum XlPivotFormatType
type
	XlPivotFormatType=TOleEnum;

const
	xlReport1=$00000000;
	xlReport2=$00000001;
	xlReport3=$00000002;
	xlReport4=$00000003;
	xlReport5=$00000004;
	xlReport6=$00000005;
	xlReport7=$00000006;
	xlReport8=$00000007;
	xlReport9=$00000008;
	xlReport10=$00000009;
	xlTable1=$0000000A;
	xlTable2=$0000000B;
	xlTable3=$0000000C;
	xlTable4=$0000000D;
	xlTable5=$0000000E;
	xlTable6=$0000000F;
	xlTable7=$00000010;
	xlTable8=$00000011;
	xlTable9=$00000012;
	xlTable10=$00000013;
	xlPTClassic=$00000014;
	xlPTNone=$00000015;

	// Constants for enum XlCmdType
type
	XlCmdType=TOleEnum;

const
	xlCmdCube=$00000001;
	xlCmdSql=$00000002;
	xlCmdTable=$00000003;
	xlCmdDefault=$00000004;
	xlCmdList=$00000005;
	xlCmdTableCollection=$00000006;
	xlCmdExcel=$00000007;
	xlCmdDAX=$00000008;

	// Constants for enum XlColumnDataType
type
	XlColumnDataType=TOleEnum;

const
	xlGeneralFormat=$00000001;
	xlTextFormat=$00000002;
	xlMDYFormat=$00000003;
	xlDMYFormat=$00000004;
	xlYMDFormat=$00000005;
	xlMYDFormat=$00000006;
	xlDYMFormat=$00000007;
	xlYDMFormat=$00000008;
	xlSkipColumn=$00000009;
	xlEMDFormat=$0000000A;

	// Constants for enum XlQueryType
type
	XlQueryType=TOleEnum;

const
	xlODBCQuery=$00000001;
	xlDAORecordset=$00000002;
	xlWebQuery=$00000004;
	xlOLEDBQuery=$00000005;
	xlTextImport=$00000006;
	xlADORecordset=$00000007;

	// Constants for enum XlWebSelectionType
type
	XlWebSelectionType=TOleEnum;

const
	xlEntirePage=$00000001;
	xlAllTables=$00000002;
	xlSpecifiedTables=$00000003;

	// Constants for enum XlCubeFieldType
type
	XlCubeFieldType=TOleEnum;

const
	xlHierarchy=$00000001;
	xlMeasure=$00000002;
	xlSet=$00000003;

	// Constants for enum XlWebFormatting
type
	XlWebFormatting=TOleEnum;

const
	xlWebFormattingAll=$00000001;
	xlWebFormattingRTF=$00000002;
	xlWebFormattingNone=$00000003;

	// Constants for enum XlDisplayDrawingObjects
type
	XlDisplayDrawingObjects=TOleEnum;

const
	xlDisplayShapes=$FFFFEFF8;
	xlHide=$00000003;
	xlPlaceholders=$00000002;

	// Constants for enum XlSubtototalLocationType
type
	XlSubtototalLocationType=TOleEnum;

const
	xlAtTop=$00000001;
	xlAtBottom=$00000002;

	// Constants for enum XlPivotTableVersionList
type
	XlPivotTableVersionList=TOleEnum;

const
	xlPivotTableVersion2000=$00000000;
	xlPivotTableVersion10=$00000001;
	xlPivotTableVersion11=$00000002;
	xlPivotTableVersion12=$00000003;
	xlPivotTableVersion14=$00000004;
	xlPivotTableVersion15=$00000005;
	xlPivotTableVersionCurrent=$FFFFFFFF;

	// Constants for enum XlPrintErrors
type
	XlPrintErrors=TOleEnum;

const
	xlPrintErrorsDisplayed=$00000000;
	xlPrintErrorsBlank=$00000001;
	xlPrintErrorsDash=$00000002;
	xlPrintErrorsNA=$00000003;

	// Constants for enum XlPivotCellType
type
	XlPivotCellType=TOleEnum;

const
	xlPivotCellValue=$00000000;
	xlPivotCellPivotItem=$00000001;
	xlPivotCellSubtotal=$00000002;
	xlPivotCellGrandTotal=$00000003;
	xlPivotCellDataField=$00000004;
	xlPivotCellPivotField=$00000005;
	xlPivotCellPageFieldItem=$00000006;
	xlPivotCellCustomSubtotal=$00000007;
	xlPivotCellDataPivotField=$00000008;
	xlPivotCellBlankCell=$00000009;

	// Constants for enum XlPivotTableMissingItems
type
	XlPivotTableMissingItems=TOleEnum;

const
	xlMissingItemsDefault=$FFFFFFFF;
	xlMissingItemsNone=$00000000;
	xlMissingItemsMax=$00007EF4;
	xlMissingItemsMax2=$00100000;

	// Constants for enum XlCalculationState
type
	XlCalculationState=TOleEnum;

const
	xlDone=$00000000;
	xlCalculating=$00000001;
	xlPending=$00000002;

	// Constants for enum XlCalculationInterruptKey
type
	XlCalculationInterruptKey=TOleEnum;

const
	xlNoKey=$00000000;
	xlEscKey=$00000001;
	xlAnyKey=$00000002;

	// Constants for enum XlSortDataOption
type
	XlSortDataOption=TOleEnum;

const
	xlSortNormal=$00000000;
	xlSortTextAsNumbers=$00000001;

	// Constants for enum XlUpdateLinks
type
	XlUpdateLinks=TOleEnum;

const
	xlUpdateLinksUserSetting=$00000001;
	xlUpdateLinksNever=$00000002;
	xlUpdateLinksAlways=$00000003;

	// Constants for enum XlLinkStatus
type
	XlLinkStatus=TOleEnum;

const
	xlLinkStatusOK=$00000000;
	xlLinkStatusMissingFile=$00000001;
	xlLinkStatusMissingSheet=$00000002;
	xlLinkStatusOld=$00000003;
	xlLinkStatusSourceNotCalculated=$00000004;
	xlLinkStatusIndeterminate=$00000005;
	xlLinkStatusNotStarted=$00000006;
	xlLinkStatusInvalidName=$00000007;
	xlLinkStatusSourceNotOpen=$00000008;
	xlLinkStatusSourceOpen=$00000009;
	xlLinkStatusCopiedValues=$0000000A;

	// Constants for enum XlSearchWithin
type
	XlSearchWithin=TOleEnum;

const
	xlWithinSheet=$00000001;
	xlWithinWorkbook=$00000002;

	// Constants for enum XlCorruptLoad
type
	XlCorruptLoad=TOleEnum;

const
	xlNormalLoad=$00000000;
	xlRepairFile=$00000001;
	xlExtractData=$00000002;

	// Constants for enum XlRobustConnect
type
	XlRobustConnect=TOleEnum;

const
	xlAsRequired=$00000000;
	xlAlways=$00000001;
	xlNever=$00000002;

	// Constants for enum XlErrorChecks
type
	XlErrorChecks=TOleEnum;

const
	xlEvaluateToError=$00000001;
	xlTextDate=$00000002;
	xlNumberAsText=$00000003;
	xlInconsistentFormula=$00000004;
	xlOmittedCells=$00000005;
	xlUnlockedFormulaCells=$00000006;
	xlEmptyCellReferences=$00000007;
	xlListDataValidation=$00000008;
	xlInconsistentListFormula=$00000009;
	xlMisleadingFormat=$0000000A;

	// Constants for enum XlDataLabelSeparator
type
	XlDataLabelSeparator=TOleEnum;

const
	xlDataLabelSeparatorDefault=$00000001;

	// Constants for enum XlSmartTagDisplayMode
type
	XlSmartTagDisplayMode=TOleEnum;

const
	xlIndicatorAndButton=$00000000;
	xlDisplayNone=$00000001;
	xlButtonOnly=$00000002;

	// Constants for enum XlRangeValueDataType
type
	XlRangeValueDataType=TOleEnum;

const
	xlRangeValueDefault=$0000000A;
	xlRangeValueXMLSpreadsheet=$0000000B;
	xlRangeValueMSPersistXML=$0000000C;

	// Constants for enum XlSpeakDirection
type
	XlSpeakDirection=TOleEnum;

const
	xlSpeakByRows=$00000000;
	xlSpeakByColumns=$00000001;

	// Constants for enum XlInsertFormatOrigin
type
	XlInsertFormatOrigin=TOleEnum;

const
	xlFormatFromLeftOrAbove=$00000000;
	xlFormatFromRightOrBelow=$00000001;

	// Constants for enum XlArabicModes
type
	XlArabicModes=TOleEnum;

const
	xlArabicNone=$00000000;
	xlArabicStrictAlefHamza=$00000001;
	xlArabicStrictFinalYaa=$00000002;
	xlArabicBothStrict=$00000003;

	// Constants for enum XlImportDataAs
type
	XlImportDataAs=TOleEnum;

const
	xlQueryTable=$00000000;
	xlPivotTableReport=$00000001;
	xlTable=$00000002;

	// Constants for enum XlCalculatedMemberType
type
	XlCalculatedMemberType=TOleEnum;

const
	xlCalculatedMember=$00000000;
	xlCalculatedSet=$00000001;
	xlCalculatedMeasure=$00000002;

	// Constants for enum XlHebrewModes
type
	XlHebrewModes=TOleEnum;

const
	xlHebrewFullScript=$00000000;
	xlHebrewPartialScript=$00000001;
	xlHebrewMixedScript=$00000002;
	xlHebrewMixedAuthorizedScript=$00000003;

	// Constants for enum XlListObjectSourceType
type
	XlListObjectSourceType=TOleEnum;

const
	xlSrcExternal=$00000000;
	xlSrcRange=$00000001;
	xlSrcXml=$00000002;
	xlSrcQuery=$00000003;
	xlSrcModel=$00000004;

	// Constants for enum XlTextVisualLayoutType
type
	XlTextVisualLayoutType=TOleEnum;

const
	xlTextVisualLTR=$00000001;
	xlTextVisualRTL=$00000002;

	// Constants for enum XlListDataType
type
	XlListDataType=TOleEnum;

const
	xlListDataTypeNone=$00000000;
	xlListDataTypeText=$00000001;
	xlListDataTypeMultiLineText=$00000002;
	xlListDataTypeNumber=$00000003;
	xlListDataTypeCurrency=$00000004;
	xlListDataTypeDateTime=$00000005;
	xlListDataTypeChoice=$00000006;
	xlListDataTypeChoiceMulti=$00000007;
	xlListDataTypeListLookup=$00000008;
	xlListDataTypeCheckbox=$00000009;
	xlListDataTypeHyperLink=$0000000A;
	xlListDataTypeCounter=$0000000B;
	xlListDataTypeMultiLineRichText=$0000000C;

	// Constants for enum XlTotalsCalculation
type
	XlTotalsCalculation=TOleEnum;

const
	xlTotalsCalculationNone=$00000000;
	xlTotalsCalculationSum=$00000001;
	xlTotalsCalculationAverage=$00000002;
	xlTotalsCalculationCount=$00000003;
	xlTotalsCalculationCountNums=$00000004;
	xlTotalsCalculationMin=$00000005;
	xlTotalsCalculationMax=$00000006;
	xlTotalsCalculationStdDev=$00000007;
	xlTotalsCalculationVar=$00000008;
	xlTotalsCalculationCustom=$00000009;

	// Constants for enum XlXmlLoadOption
type
	XlXmlLoadOption=TOleEnum;

const
	xlXmlLoadPromptUser=$00000000;
	xlXmlLoadOpenXml=$00000001;
	xlXmlLoadImportToList=$00000002;
	xlXmlLoadMapXml=$00000003;

	// Constants for enum XlSmartTagControlType
type
	XlSmartTagControlType=TOleEnum;

const
	xlSmartTagControlSmartTag=$00000001;
	xlSmartTagControlLink=$00000002;
	xlSmartTagControlHelp=$00000003;
	xlSmartTagControlHelpURL=$00000004;
	xlSmartTagControlSeparator=$00000005;
	xlSmartTagControlButton=$00000006;
	xlSmartTagControlLabel=$00000007;
	xlSmartTagControlImage=$00000008;
	xlSmartTagControlCheckbox=$00000009;
	xlSmartTagControlTextbox=$0000000A;
	xlSmartTagControlListbox=$0000000B;
	xlSmartTagControlCombo=$0000000C;
	xlSmartTagControlActiveX=$0000000D;
	xlSmartTagControlRadioGroup=$0000000E;

	// Constants for enum XlListConflict
type
	XlListConflict=TOleEnum;

const
	xlListConflictDialog=$00000000;
	xlListConflictRetryAllConflicts=$00000001;
	xlListConflictDiscardAllConflicts=$00000002;
	xlListConflictError=$00000003;

	// Constants for enum XlXmlExportResult
type
	XlXmlExportResult=TOleEnum;

const
	xlXmlExportSuccess=$00000000;
	xlXmlExportValidationFailed=$00000001;

	// Constants for enum XlXmlImportResult
type
	XlXmlImportResult=TOleEnum;

const
	xlXmlImportSuccess=$00000000;
	xlXmlImportElementsTruncated=$00000001;
	xlXmlImportValidationFailed=$00000002;

	// Constants for enum XlRemoveDocInfoType
type
	XlRemoveDocInfoType=TOleEnum;

const
	xlRDIComments=$00000001;
	xlRDIRemovePersonalInformation=$00000004;
	xlRDIEmailHeader=$00000005;
	xlRDIRoutingSlip=$00000006;
	xlRDISendForReview=$00000007;
	xlRDIDocumentProperties=$00000008;
	xlRDIDocumentWorkspace=$0000000A;
	xlRDIInkAnnotations=$0000000B;
	xlRDIScenarioComments=$0000000C;
	xlRDIPublishInfo=$0000000D;
	xlRDIDocumentServerProperties=$0000000E;
	xlRDIDocumentManagementPolicy=$0000000F;
	xlRDIContentType=$00000010;
	xlRDIDefinedNameComments=$00000012;
	xlRDIInactiveDataConnections=$00000013;
	xlRDIPrinterPath=$00000014;
	xlRDIInlineWebExtensions=$00000015;
	xlRDITaskpaneWebExtensions=$00000016;
	xlRDIExcelDataModel=$00000017;
	xlRDIAll=$00000063;

	// Constants for enum XlRgbColor
type
	XlRgbColor=TOleEnum;

const
	rgbAliceBlue=$00FFF8F0;
	rgbAntiqueWhite=$00D7EBFA;
	rgbAqua=$00FFFF00;
	rgbAquamarine=$00D4FF7F;
	rgbAzure=$00FFFFF0;
	rgbBeige=$00DCF5F5;
	rgbBisque=$00C4E4FF;
	rgbBlack=$00000000;
	rgbBlanchedAlmond=$00CDEBFF;
	rgbBlue=$00FF0000;
	rgbBlueViolet=$00E22B8A;
	rgbBrown=$002A2AA5;
	rgbBurlyWood=$0087B8DE;
	rgbCadetBlue=$00A09E5F;
	rgbChartreuse=$0000FF7F;
	rgbCoral=$00507FFF;
	rgbCornflowerBlue=$00ED9564;
	rgbCornsilk=$00DCF8FF;
	rgbCrimson=$003C14DC;
	rgbDarkBlue=$008B0000;
	rgbDarkCyan=$008B8B00;
	rgbDarkGoldenrod=$000B86B8;
	rgbDarkGreen=$00006400;
	rgbDarkGray=$00A9A9A9;
	rgbDarkGrey=$00A9A9A9;
	rgbDarkKhaki=$006BB7BD;
	rgbDarkMagenta=$008B008B;
	rgbDarkOliveGreen=$002F6B55;
	rgbDarkOrange=$00008CFF;
	rgbDarkOrchid=$00CC3299;
	rgbDarkRed=$0000008B;
	rgbDarkSalmon=$007A96E9;
	rgbDarkSeaGreen=$008FBC8F;
	rgbDarkSlateBlue=$008B3D48;
	rgbDarkSlateGray=$004F4F2F;
	rgbDarkSlateGrey=$004F4F2F;
	rgbDarkTurquoise=$00D1CE00;
	rgbDarkViolet=$00D30094;
	rgbDeepPink=$009314FF;
	rgbDeepSkyBlue=$00FFBF00;
	rgbDimGray=$00696969;
	rgbDimGrey=$00696969;
	rgbDodgerBlue=$00FF901E;
	rgbFireBrick=$002222B2;
	rgbFloralWhite=$00F0FAFF;
	rgbForestGreen=$00228B22;
	rgbFuchsia=$00FF00FF;
	rgbGainsboro=$00DCDCDC;
	rgbGhostWhite=$00FFF8F8;
	rgbGold=$0000D7FF;
	rgbGoldenrod=$0020A5DA;
	rgbGray=$00808080;
	rgbGreen=$00008000;
	rgbGrey=$00808080;
	rgbGreenYellow=$002FFFAD;
	rgbHoneydew=$00F0FFF0;
	rgbHotPink=$00B469FF;
	rgbIndianRed=$005C5CCD;
	rgbIndigo=$0082004B;
	rgbIvory=$00F0FFFF;
	rgbKhaki=$008CE6F0;
	rgbLavender=$00FAE6E6;
	rgbLavenderBlush=$00F5F0FF;
	rgbLawnGreen=$0000FC7C;
	rgbLemonChiffon=$00CDFAFF;
	rgbLightBlue=$00E6D8AD;
	rgbLightCoral=$008080F0;
	rgbLightCyan=$008B8B00;
	rgbLightGoldenrodYellow=$00D2FAFA;
	rgbLightGray=$00D3D3D3;
	rgbLightGreen=$0090EE90;
	rgbLightGrey=$00D3D3D3;
	rgbLightPink=$00C1B6FF;
	rgbLightSalmon=$007AA0FF;
	rgbLightSeaGreen=$00AAB220;
	rgbLightSkyBlue=$00FACE87;
	rgbLightSlateGray=$00998877;
	rgbLightSlateGrey=$00998877;
	rgbLightSteelBlue=$00DEC4B0;
	rgbLightYellow=$00E0FFFF;
	rgbLime=$0000FF00;
	rgbLimeGreen=$0032CD32;
	rgbLinen=$00E6F0FA;
	rgbMaroon=$00000080;
	rgbMediumAquamarine=$00AAFF66;
	rgbMediumBlue=$00CD0000;
	rgbMediumOrchid=$00D355BA;
	rgbMediumPurple=$00DB7093;
	rgbMediumSeaGreen=$0071B33C;
	rgbMediumSlateBlue=$00EE687B;
	rgbMediumSpringGreen=$009AFA00;
	rgbMediumTurquoise=$00CCD148;
	rgbMediumVioletRed=$008515C7;
	rgbMidnightBlue=$00701919;
	rgbMintCream=$00FAFFF5;
	rgbMistyRose=$00E1E4FF;
	rgbMoccasin=$00B5E4FF;
	rgbNavajoWhite=$00ADDEFF;
	rgbNavy=$00800000;
	rgbNavyBlue=$00800000;
	rgbOldLace=$00E6F5FD;
	rgbOlive=$00008080;
	rgbOliveDrab=$00238E6B;
	rgbOrange=$0000A5FF;
	rgbOrangeRed=$000045FF;
	rgbOrchid=$00D670DA;
	rgbPaleGoldenrod=$006BE8EE;
	rgbPaleGreen=$0098FB98;
	rgbPaleTurquoise=$00EEEEAF;
	rgbPaleVioletRed=$009370DB;
	rgbPapayaWhip=$00D5EFFF;
	rgbPeachPuff=$00B9DAFF;
	rgbPeru=$003F85CD;
	rgbPink=$00CBC0FF;
	rgbPlum=$00DDA0DD;
	rgbPowderBlue=$00E6E0B0;
	rgbPurple=$00800080;
	rgbRed=$000000FF;
	rgbRosyBrown=$008F8FBC;
	rgbRoyalBlue=$00E16941;
	rgbSalmon=$007280FA;
	rgbSandyBrown=$0060A4F4;
	rgbSeaGreen=$00578B2E;
	rgbSeashell=$00EEF5FF;
	rgbSienna=$002D52A0;
	rgbSilver=$00C0C0C0;
	rgbSkyBlue=$00EBCE87;
	rgbSlateBlue=$00CD5A6A;
	rgbSlateGray=$00908070;
	rgbSlateGrey=$00908070;
	rgbSnow=$00FAFAFF;
	rgbSpringGreen=$007FFF00;
	rgbSteelBlue=$00B48246;
	rgbTan=$008CB4D2;
	rgbTeal=$00808000;
	rgbThistle=$00D8BFD8;
	rgbTomato=$004763FF;
	rgbTurquoise=$00D0E040;
	rgbYellow=$0000FFFF;
	rgbYellowGreen=$0032CD9A;
	rgbViolet=$00EE82EE;
	rgbWheat=$00B3DEF5;
	rgbWhite=$00FFFFFF;
	rgbWhiteSmoke=$00F5F5F5;

	// Constants for enum XlStdColorScale
type
	XlStdColorScale=TOleEnum;

const
	xlColorScaleRYG=$00000001;
	xlColorScaleGYR=$00000002;
	xlColorScaleBlackWhite=$00000003;
	xlColorScaleWhiteBlack=$00000004;

	// Constants for enum XlConditionValueTypes
type
	XlConditionValueTypes=TOleEnum;

const
	xlConditionValueNone=$FFFFFFFF;
	xlConditionValueNumber=$00000000;
	xlConditionValueLowestValue=$00000001;
	xlConditionValueHighestValue=$00000002;
	xlConditionValuePercent=$00000003;
	xlConditionValueFormula=$00000004;
	xlConditionValuePercentile=$00000005;
	xlConditionValueAutomaticMin=$00000006;
	xlConditionValueAutomaticMax=$00000007;

	// Constants for enum XlFormatFilterTypes
type
	XlFormatFilterTypes=TOleEnum;

const
	xlFilterBottom=$00000000;
	xlFilterTop=$00000001;
	xlFilterBottomPercent=$00000002;
	xlFilterTopPercent=$00000003;

	// Constants for enum XlContainsOperator
type
	XlContainsOperator=TOleEnum;

const
	xlContains=$00000000;
	xlDoesNotContain=$00000001;
	xlBeginsWith=$00000002;
	xlEndsWith=$00000003;

	// Constants for enum XlAboveBelow
type
	XlAboveBelow=TOleEnum;

const
	xlAboveAverage=$00000000;
	xlBelowAverage=$00000001;
	xlEqualAboveAverage=$00000002;
	xlEqualBelowAverage=$00000003;
	xlAboveStdDev=$00000004;
	xlBelowStdDev=$00000005;

	// Constants for enum XlLookFor
type
	XlLookFor=TOleEnum;

const
	xlLookForBlanks=$00000000;
	xlLookForErrors=$00000001;
	xlLookForFormulas=$00000002;

	// Constants for enum XlTimePeriods
type
	XlTimePeriods=TOleEnum;

const
	xlToday=$00000000;
	xlYesterday=$00000001;
	xlLast7Days=$00000002;
	xlThisWeek=$00000003;
	xlLastWeek=$00000004;
	xlLastMonth=$00000005;
	xlTomorrow=$00000006;
	xlNextWeek=$00000007;
	xlNextMonth=$00000008;
	xlThisMonth=$00000009;

	// Constants for enum XlDupeUnique
type
	XlDupeUnique=TOleEnum;

const
	xlUnique=$00000000;
	xlDuplicate=$00000001;

	// Constants for enum XlTopBottom
type
	XlTopBottom=TOleEnum;

const
	xlTop10Top=$00000001;
	xlTop10Bottom=$00000000;

	// Constants for enum XlIconSet
type
	XlIconSet=TOleEnum;

const
	xlCustomSet=$FFFFFFFF;
	xl3Arrows=$00000001;
	xl3ArrowsGray=$00000002;
	xl3Flags=$00000003;
	xl3TrafficLights1=$00000004;
	xl3TrafficLights2=$00000005;
	xl3Signs=$00000006;
	xl3Symbols=$00000007;
	xl3Symbols2=$00000008;
	xl4Arrows=$00000009;
	xl4ArrowsGray=$0000000A;
	xl4RedToBlack=$0000000B;
	xl4CRV=$0000000C;
	xl4TrafficLights=$0000000D;
	xl5Arrows=$0000000E;
	xl5ArrowsGray=$0000000F;
	xl5CRV=$00000010;
	xl5Quarters=$00000011;
	xl3Stars=$00000012;
	xl3Triangles=$00000013;
	xl5Boxes=$00000014;

	// Constants for enum XlThemeFont
type
	XlThemeFont=TOleEnum;

const
	xlThemeFontNone=$00000000;
	xlThemeFontMajor=$00000001;
	xlThemeFontMinor=$00000002;

	// Constants for enum XlPivotLineType
type
	XlPivotLineType=TOleEnum;

const
	xlPivotLineRegular=$00000000;
	xlPivotLineSubtotal=$00000001;
	xlPivotLineGrandTotal=$00000002;
	xlPivotLineBlank=$00000003;

	// Constants for enum XlCheckInVersionType
type
	XlCheckInVersionType=TOleEnum;

const
	xlCheckInMinorVersion=$00000000;
	xlCheckInMajorVersion=$00000001;
	xlCheckInOverwriteVersion=$00000002;

	// Constants for enum XlPropertyDisplayedIn
type
	XlPropertyDisplayedIn=TOleEnum;

const
	xlDisplayPropertyInPivotTable=$00000001;
	xlDisplayPropertyInTooltip=$00000002;
	xlDisplayPropertyInPivotTableAndTooltip=$00000003;

	// Constants for enum XlConnectionType
type
	XlConnectionType=TOleEnum;

const
	xlConnectionTypeOLEDB=$00000001;
	xlConnectionTypeODBC=$00000002;
	xlConnectionTypeXMLMAP=$00000003;
	xlConnectionTypeTEXT=$00000004;
	xlConnectionTypeWEB=$00000005;
	xlConnectionTypeDATAFEED=$00000006;
	xlConnectionTypeMODEL=$00000007;
	xlConnectionTypeWORKSHEET=$00000008;
	xlConnectionTypeNOSOURCE=$00000009;

	// Constants for enum XlActionType
type
	XlActionType=TOleEnum;

const
	xlActionTypeUrl=$00000001;
	xlActionTypeRowset=$00000010;
	xlActionTypeReport=$00000080;
	xlActionTypeDrillthrough=$00000100;

	// Constants for enum XlLayoutRowType
type
	XlLayoutRowType=TOleEnum;

const
	xlCompactRow=$00000000;
	xlTabularRow=$00000001;
	xlOutlineRow=$00000002;

	// Constants for enum XlMeasurementUnits
type
	XlMeasurementUnits=TOleEnum;

const
	xlInches=$00000000;
	xlCentimeters=$00000001;
	xlMillimeters=$00000002;

	// Constants for enum XlPivotFilterType
type
	XlPivotFilterType=TOleEnum;

const
	xlTopCount=$00000001;
	xlBottomCount=$00000002;
	xlTopPercent=$00000003;
	xlBottomPercent=$00000004;
	xlTopSum=$00000005;
	xlBottomSum=$00000006;
	xlValueEquals=$00000007;
	xlValueDoesNotEqual=$00000008;
	xlValueIsGreaterThan=$00000009;
	xlValueIsGreaterThanOrEqualTo=$0000000A;
	xlValueIsLessThan=$0000000B;
	xlValueIsLessThanOrEqualTo=$0000000C;
	xlValueIsBetween=$0000000D;
	xlValueIsNotBetween=$0000000E;
	xlCaptionEquals=$0000000F;
	xlCaptionDoesNotEqual=$00000010;
	xlCaptionBeginsWith=$00000011;
	xlCaptionDoesNotBeginWith=$00000012;
	xlCaptionEndsWith=$00000013;
	xlCaptionDoesNotEndWith=$00000014;
	xlCaptionContains=$00000015;
	xlCaptionDoesNotContain=$00000016;
	xlCaptionIsGreaterThan=$00000017;
	xlCaptionIsGreaterThanOrEqualTo=$00000018;
	xlCaptionIsLessThan=$00000019;
	xlCaptionIsLessThanOrEqualTo=$0000001A;
	xlCaptionIsBetween=$0000001B;
	xlCaptionIsNotBetween=$0000001C;
	xlSpecificDate=$0000001D;
	xlNotSpecificDate=$0000001E;
	xlBefore=$0000001F;
	xlBeforeOrEqualTo=$00000020;
	xlAfter=$00000021;
	xlAfterOrEqualTo=$00000022;
	xlDateBetween=$00000023;
	xlDateNotBetween=$00000024;
	xlDateTomorrow=$00000025;
	xlDateToday=$00000026;
	xlDateYesterday=$00000027;
	xlDateNextWeek=$00000028;
	xlDateThisWeek=$00000029;
	xlDateLastWeek=$0000002A;
	xlDateNextMonth=$0000002B;
	xlDateThisMonth=$0000002C;
	xlDateLastMonth=$0000002D;
	xlDateNextQuarter=$0000002E;
	xlDateThisQuarter=$0000002F;
	xlDateLastQuarter=$00000030;
	xlDateNextYear=$00000031;
	xlDateThisYear=$00000032;
	xlDateLastYear=$00000033;
	xlYearToDate=$00000034;
	xlAllDatesInPeriodQuarter1=$00000035;
	xlAllDatesInPeriodQuarter2=$00000036;
	xlAllDatesInPeriodQuarter3=$00000037;
	xlAllDatesInPeriodQuarter4=$00000038;
	xlAllDatesInPeriodJanuary=$00000039;
	xlAllDatesInPeriodFebruary=$0000003A;
	xlAllDatesInPeriodMarch=$0000003B;
	xlAllDatesInPeriodApril=$0000003C;
	xlAllDatesInPeriodMay=$0000003D;
	xlAllDatesInPeriodJune=$0000003E;
	xlAllDatesInPeriodJuly=$0000003F;
	xlAllDatesInPeriodAugust=$00000040;
	xlAllDatesInPeriodSeptember=$00000041;
	xlAllDatesInPeriodOctober=$00000042;
	xlAllDatesInPeriodNovember=$00000043;
	xlAllDatesInPeriodDecember=$00000044;

	// Constants for enum XlCredentialsMethod
type
	XlCredentialsMethod=TOleEnum;

const
	xlCredentialsMethodIntegrated=$00000000;
	xlCredentialsMethodNone=$00000001;
	xlCredentialsMethodStored=$00000002;

	// Constants for enum XlCubeFieldSubType
type
	XlCubeFieldSubType=TOleEnum;

const
	xlCubeHierarchy=$00000001;
	xlCubeMeasure=$00000002;
	xlCubeSet=$00000003;
	xlCubeAttribute=$00000004;
	xlCubeCalculatedMeasure=$00000005;
	xlCubeKPIValue=$00000006;
	xlCubeKPIGoal=$00000007;
	xlCubeKPIStatus=$00000008;
	xlCubeKPITrend=$00000009;
	xlCubeKPIWeight=$0000000A;
	xlCubeImplicitMeasure=$0000000B;

	// Constants for enum XlSortOn
type
	XlSortOn=TOleEnum;

const
	xlSortOnValues=$00000000;
	xlSortOnCellColor=$00000001;
	xlSortOnFontColor=$00000002;
	xlSortOnIcon=$00000003;

	// Constants for enum XlDynamicFilterCriteria
type
	XlDynamicFilterCriteria=TOleEnum;

const
	xlFilterToday=$00000001;
	xlFilterYesterday=$00000002;
	xlFilterTomorrow=$00000003;
	xlFilterThisWeek=$00000004;
	xlFilterLastWeek=$00000005;
	xlFilterNextWeek=$00000006;
	xlFilterThisMonth=$00000007;
	xlFilterLastMonth=$00000008;
	xlFilterNextMonth=$00000009;
	xlFilterThisQuarter=$0000000A;
	xlFilterLastQuarter=$0000000B;
	xlFilterNextQuarter=$0000000C;
	xlFilterThisYear=$0000000D;
	xlFilterLastYear=$0000000E;
	xlFilterNextYear=$0000000F;
	xlFilterYearToDate=$00000010;
	xlFilterAllDatesInPeriodQuarter1=$00000011;
	xlFilterAllDatesInPeriodQuarter2=$00000012;
	xlFilterAllDatesInPeriodQuarter3=$00000013;
	xlFilterAllDatesInPeriodQuarter4=$00000014;
	xlFilterAllDatesInPeriodJanuary=$00000015;
	xlFilterAllDatesInPeriodFebruray=$00000016;
	xlFilterAllDatesInPeriodMarch=$00000017;
	xlFilterAllDatesInPeriodApril=$00000018;
	xlFilterAllDatesInPeriodMay=$00000019;
	xlFilterAllDatesInPeriodJune=$0000001A;
	xlFilterAllDatesInPeriodJuly=$0000001B;
	xlFilterAllDatesInPeriodAugust=$0000001C;
	xlFilterAllDatesInPeriodSeptember=$0000001D;
	xlFilterAllDatesInPeriodOctober=$0000001E;
	xlFilterAllDatesInPeriodNovember=$0000001F;
	xlFilterAllDatesInPeriodDecember=$00000020;
	xlFilterAboveAverage=$00000021;
	xlFilterBelowAverage=$00000022;

	// Constants for enum XlFilterAllDatesInPeriod
type
	XlFilterAllDatesInPeriod=TOleEnum;

const
	xlFilterAllDatesInPeriodYear=$00000000;
	xlFilterAllDatesInPeriodMonth=$00000001;
	xlFilterAllDatesInPeriodDay=$00000002;
	xlFilterAllDatesInPeriodHour=$00000003;
	xlFilterAllDatesInPeriodMinute=$00000004;
	xlFilterAllDatesInPeriodSecond=$00000005;

	// Constants for enum XlTableStyleElementType
type
	XlTableStyleElementType=TOleEnum;

const
	xlWholeTable=$00000000;
	xlHeaderRow=$00000001;
	xlTotalRow=$00000002;
	xlGrandTotalRow=$00000002;
	xlFirstColumn=$00000003;
	xlLastColumn=$00000004;
	xlGrandTotalColumn=$00000004;
	xlRowStripe1=$00000005;
	xlRowStripe2=$00000006;
	xlColumnStripe1=$00000007;
	xlColumnStripe2=$00000008;
	xlFirstHeaderCell=$00000009;
	xlLastHeaderCell=$0000000A;
	xlFirstTotalCell=$0000000B;
	xlLastTotalCell=$0000000C;
	xlSubtotalColumn1=$0000000D;
	xlSubtotalColumn2=$0000000E;
	xlSubtotalColumn3=$0000000F;
	xlSubtotalRow1=$00000010;
	xlSubtotalRow2=$00000011;
	xlSubtotalRow3=$00000012;
	xlBlankRow=$00000013;
	xlColumnSubheading1=$00000014;
	xlColumnSubheading2=$00000015;
	xlColumnSubheading3=$00000016;
	xlRowSubheading1=$00000017;
	xlRowSubheading2=$00000018;
	xlRowSubheading3=$00000019;
	xlPageFieldLabels=$0000001A;
	xlPageFieldValues=$0000001B;
	xlSlicerUnselectedItemWithData=$0000001C;
	xlSlicerUnselectedItemWithNoData=$0000001D;
	xlSlicerSelectedItemWithData=$0000001E;
	xlSlicerSelectedItemWithNoData=$0000001F;
	xlSlicerHoveredUnselectedItemWithData=$00000020;
	xlSlicerHoveredSelectedItemWithData=$00000021;
	xlSlicerHoveredUnselectedItemWithNoData=$00000022;
	xlSlicerHoveredSelectedItemWithNoData=$00000023;
	xlTimelineSelectionLabel=$00000024;
	xlTimelineTimeLevel=$00000025;
	xlTimelinePeriodLabels1=$00000026;
	xlTimelinePeriodLabels2=$00000027;
	xlTimelineSelectedTimeBlock=$00000028;
	xlTimelineUnselectedTimeBlock=$00000029;
	xlTimelineSelectedTimeBlockSpace=$0000002A;

	// Constants for enum XlPivotConditionScope
type
	XlPivotConditionScope=TOleEnum;

const
	xlSelectionScope=$00000000;
	xlFieldsScope=$00000001;
	xlDataFieldScope=$00000002;

	// Constants for enum XlCalcFor
type
	XlCalcFor=TOleEnum;

const
	xlAllValues=$00000000;
	xlRowGroups=$00000001;
	xlColGroups=$00000002;

	// Constants for enum XlThemeColor
type
	XlThemeColor=TOleEnum;

const
	xlThemeColorDark1=$00000001;
	xlThemeColorLight1=$00000002;
	xlThemeColorDark2=$00000003;
	xlThemeColorLight2=$00000004;
	xlThemeColorAccent1=$00000005;
	xlThemeColorAccent2=$00000006;
	xlThemeColorAccent3=$00000007;
	xlThemeColorAccent4=$00000008;
	xlThemeColorAccent5=$00000009;
	xlThemeColorAccent6=$0000000A;
	xlThemeColorHyperlink=$0000000B;
	xlThemeColorFollowedHyperlink=$0000000C;

	// Constants for enum XlFixedFormatType
type
	XlFixedFormatType=TOleEnum;

const
	xlTypePDF=$00000000;
	xlTypeXPS=$00000001;

	// Constants for enum XlFixedFormatQuality
type
	XlFixedFormatQuality=TOleEnum;

const
	xlQualityStandard=$00000000;
	xlQualityMinimum=$00000001;

	// Constants for enum XlChartElementPosition
type
	XlChartElementPosition=TOleEnum;

const
	xlChartElementPositionAutomatic=$FFFFEFF7;
	xlChartElementPositionCustom=$FFFFEFEE;

	// Constants for enum XlGenerateTableRefs
type
	XlGenerateTableRefs=TOleEnum;

const
	xlGenerateTableRefA1=$00000000;
	xlGenerateTableRefStruct=$00000001;

	// Constants for enum XlGradientFillType
type
	XlGradientFillType=TOleEnum;

const
	xlGradientFillLinear=$00000000;
	xlGradientFillPath=$00000001;

	// Constants for enum XlThreadMode
type
	XlThreadMode=TOleEnum;

const
	xlThreadModeAutomatic=$00000000;
	xlThreadModeManual=$00000001;

	// Constants for enum XlOartHorizontalOverflow
type
	XlOartHorizontalOverflow=TOleEnum;

const
	xlOartHorizontalOverflowOverflow=$00000000;
	xlOartHorizontalOverflowClip=$00000001;

	// Constants for enum XlOartVerticalOverflow
type
	XlOartVerticalOverflow=TOleEnum;

const
	xlOartVerticalOverflowOverflow=$00000000;
	xlOartVerticalOverflowClip=$00000001;
	xlOartVerticalOverflowEllipsis=$00000002;

	// Constants for enum XlSparkScale
type
	XlSparkScale=TOleEnum;

const
	xlSparkScaleGroup=$00000001;
	xlSparkScaleSingle=$00000002;
	xlSparkScaleCustom=$00000003;

	// Constants for enum XlSparkType
type
	XlSparkType=TOleEnum;

const
	xlSparkLine=$00000001;
	xlSparkColumn=$00000002;
	xlSparkColumnStacked100=$00000003;

	// Constants for enum XlSparklineRowCol
type
	XlSparklineRowCol=TOleEnum;

const
	xlSparklineNonSquare=$00000000;
	xlSparklineRowsSquare=$00000001;
	xlSparklineColumnsSquare=$00000002;

	// Constants for enum XlDataBarFillType
type
	XlDataBarFillType=TOleEnum;

const
	xlDataBarFillSolid=$00000000;
	xlDataBarFillGradient=$00000001;

	// Constants for enum XlDataBarBorderType
type
	XlDataBarBorderType=TOleEnum;

const
	xlDataBarBorderNone=$00000000;
	xlDataBarBorderSolid=$00000001;

	// Constants for enum XlDataBarAxisPosition
type
	XlDataBarAxisPosition=TOleEnum;

const
	xlDataBarAxisAutomatic=$00000000;
	xlDataBarAxisMidpoint=$00000001;
	xlDataBarAxisNone=$00000002;

	// Constants for enum XlDataBarNegativeColorType
type
	XlDataBarNegativeColorType=TOleEnum;

const
	xlDataBarColor=$00000000;
	xlDataBarSameAsPositive=$00000001;

	// Constants for enum XlAllocation
type
	XlAllocation=TOleEnum;

const
	xlManualAllocation=$00000001;
	xlAutomaticAllocation=$00000002;

	// Constants for enum XlAllocationValue
type
	XlAllocationValue=TOleEnum;

const
	xlAllocateValue=$00000001;
	xlAllocateIncrement=$00000002;

	// Constants for enum XlAllocationMethod
type
	XlAllocationMethod=TOleEnum;

const
	xlEqualAllocation=$00000001;
	xlWeightedAllocation=$00000002;

	// Constants for enum XlCellChangedState
type
	XlCellChangedState=TOleEnum;

const
	xlCellNotChanged=$00000001;
	xlCellChanged=$00000002;
	xlCellChangeApplied=$00000003;

	// Constants for enum XlPivotFieldRepeatLabels
type
	XlPivotFieldRepeatLabels=TOleEnum;

const
	xlDoNotRepeatLabels=$00000001;
	xlRepeatLabels=$00000002;

	// Constants for enum XlPieSliceIndex
type
	XlPieSliceIndex=TOleEnum;

const
	xlOuterCounterClockwisePoint=$00000001;
	xlOuterCenterPoint=$00000002;
	xlOuterClockwisePoint=$00000003;
	xlMidClockwiseRadiusPoint=$00000004;
	xlCenterPoint=$00000005;
	xlMidCounterClockwiseRadiusPoint=$00000006;
	xlInnerClockwisePoint=$00000007;
	xlInnerCenterPoint=$00000008;
	xlInnerCounterClockwisePoint=$00000009;

	// Constants for enum XlSpanishModes
type
	XlSpanishModes=TOleEnum;

const
	xlSpanishTuteoOnly=$00000000;
	xlSpanishTuteoAndVoseo=$00000001;
	xlSpanishVoseoOnly=$00000002;

	// Constants for enum XlSlicerCrossFilterType
type
	XlSlicerCrossFilterType=TOleEnum;

const
	xlSlicerNoCrossFilter=$00000001;
	xlSlicerCrossFilterShowItemsWithDataAtTop=$00000002;
	xlSlicerCrossFilterShowItemsWithNoData=$00000003;
	xlSlicerCrossFilterHideButtonsWithNoData=$00000004;

	// Constants for enum XlSlicerSort
type
	XlSlicerSort=TOleEnum;

const
	xlSlicerSortDataSourceOrder=$00000001;
	xlSlicerSortAscending=$00000002;
	xlSlicerSortDescending=$00000003;

	// Constants for enum XlIcon
type
	XlIcon=TOleEnum;

const
	xlIconNoCellIcon=$FFFFFFFF;
	xlIconGreenUpArrow=$00000001;
	xlIconYellowSideArrow=$00000002;
	xlIconRedDownArrow=$00000003;
	xlIconGrayUpArrow=$00000004;
	xlIconGraySideArrow=$00000005;
	xlIconGrayDownArrow=$00000006;
	xlIconGreenFlag=$00000007;
	xlIconYellowFlag=$00000008;
	xlIconRedFlag=$00000009;
	xlIconGreenCircle=$0000000A;
	xlIconYellowCircle=$0000000B;
	xlIconRedCircleWithBorder=$0000000C;
	xlIconBlackCircleWithBorder=$0000000D;
	xlIconGreenTrafficLight=$0000000E;
	xlIconYellowTrafficLight=$0000000F;
	xlIconRedTrafficLight=$00000010;
	xlIconYellowTriangle=$00000011;
	xlIconRedDiamond=$00000012;
	xlIconGreenCheckSymbol=$00000013;
	xlIconYellowExclamationSymbol=$00000014;
	xlIconRedCrossSymbol=$00000015;
	xlIconGreenCheck=$00000016;
	xlIconYellowExclamation=$00000017;
	xlIconRedCross=$00000018;
	xlIconYellowUpInclineArrow=$00000019;
	xlIconYellowDownInclineArrow=$0000001A;
	xlIconGrayUpInclineArrow=$0000001B;
	xlIconGrayDownInclineArrow=$0000001C;
	xlIconRedCircle=$0000001D;
	xlIconPinkCircle=$0000001E;
	xlIconGrayCircle=$0000001F;
	xlIconBlackCircle=$00000020;
	xlIconCircleWithOneWhiteQuarter=$00000021;
	xlIconCircleWithTwoWhiteQuarters=$00000022;
	xlIconCircleWithThreeWhiteQuarters=$00000023;
	xlIconWhiteCircleAllWhiteQuarters=$00000024;
	xlIcon0Bars=$00000025;
	xlIcon1Bar=$00000026;
	xlIcon2Bars=$00000027;
	xlIcon3Bars=$00000028;
	xlIcon4Bars=$00000029;
	xlIconGoldStar=$0000002A;
	xlIconHalfGoldStar=$0000002B;
	xlIconSilverStar=$0000002C;
	xlIconGreenUpTriangle=$0000002D;
	xlIconYellowDash=$0000002E;
	xlIconRedDownTriangle=$0000002F;
	xlIcon4FilledBoxes=$00000030;
	xlIcon3FilledBoxes=$00000031;
	xlIcon2FilledBoxes=$00000032;
	xlIcon1FilledBox=$00000033;
	xlIcon0FilledBoxes=$00000034;

	// Constants for enum XlProtectedViewCloseReason
type
	XlProtectedViewCloseReason=TOleEnum;

const
	xlProtectedViewCloseNormal=$00000000;
	xlProtectedViewCloseEdit=$00000001;
	xlProtectedViewCloseForced=$00000002;

	// Constants for enum XlProtectedViewWindowState
type
	XlProtectedViewWindowState=TOleEnum;

const
	xlProtectedViewWindowNormal=$00000000;
	xlProtectedViewWindowMinimized=$00000001;
	xlProtectedViewWindowMaximized=$00000002;

	// Constants for enum XlFileValidationPivotMode
type
	XlFileValidationPivotMode=TOleEnum;

const
	xlFileValidationPivotDefault=$00000000;
	xlFileValidationPivotRun=$00000001;
	xlFileValidationPivotSkip=$00000002;

	// Constants for enum XlPieSliceLocation
type
	XlPieSliceLocation=TOleEnum;

const
	xlHorizontalCoordinate=$00000001;
	xlVerticalCoordinate=$00000002;

	// Constants for enum XlPortugueseReform
type
	XlPortugueseReform=TOleEnum;

const
	xlPortuguesePreReform=$00000001;
	xlPortuguesePostReform=$00000002;
	xlPortugueseBoth=$00000003;

	// Constants for enum XlQuickAnalysisMode
type
	XlQuickAnalysisMode=TOleEnum;

const
	xlLensOnly=$00000000;
	xlFormatConditions=$00000001;
	xlRecommendedCharts=$00000002;
	xlTotals=$00000003;
	xlTables=$00000004;
	xlSparklines=$00000005;

	// Constants for enum XlSlicerCacheType
type
	XlSlicerCacheType=TOleEnum;

const
	xlSlicer=$00000001;
	xlTimeline=$00000002;

	// Constants for enum XlCategoryLabelLevel
type
	XlCategoryLabelLevel=TOleEnum;

const
	xlCategoryLabelLevelNone=$FFFFFFFD;
	xlCategoryLabelLevelCustom=$FFFFFFFE;
	xlCategoryLabelLevelAll=$FFFFFFFF;

	// Constants for enum XlSeriesNameLevel
type
	XlSeriesNameLevel=TOleEnum;

const
	xlSeriesNameLevelNone=$FFFFFFFD;
	xlSeriesNameLevelCustom=$FFFFFFFE;
	xlSeriesNameLevelAll=$FFFFFFFF;

	// Constants for enum XlCalcMemNumberFormatType
type
	XlCalcMemNumberFormatType=TOleEnum;

const
	xlNumberFormatTypeDefault=$00000000;
	xlNumberFormatTypeNumber=$00000001;
	xlNumberFormatTypePercent=$00000002;

	// Constants for enum XlTimelineLevel
type
	XlTimelineLevel=TOleEnum;

const
	xlTimelineLevelYears=$00000000;
	xlTimelineLevelQuarters=$00000001;
	xlTimelineLevelMonths=$00000002;
	xlTimelineLevelDays=$00000003;

	// Constants for enum XlFilterStatus
type
	XlFilterStatus=TOleEnum;

const
	xlFilterStatusOK=$00000000;
	xlFilterStatusDateWrongOrder=$00000001;
	xlFilterStatusDateHasTime=$00000002;
	xlFilterStatusInvalidDate=$00000003;

	// Constants for enum XlModelChangeSource
type
	XlModelChangeSource=TOleEnum;

const
	xlChangeByExcel=$00000000;
	xlChangeByPowerPivotAddIn=$00000001;

	// Constants for enum XlParentDataLabelOptions
type
	XlParentDataLabelOptions=TOleEnum;

const
	xlParentDataLabelOptionsNone=$00000000;
	xlParentDataLabelOptionsBanner=$00000001;
	xlParentDataLabelOptionsOverlapping=$00000002;

	// Constants for enum XlBinsType
type
	XlBinsType=TOleEnum;

const
	xlBinsTypeAutomatic=$00000000;
	xlBinsTypeCategorical=$00000001;
	xlBinsTypeManual=$00000002;
	xlBinsTypeBinSize=$00000003;
	xlBinsTypeBinCount=$00000004;

	// Constants for enum XlForecastDataCompletion
type
	XlForecastDataCompletion=TOleEnum;

const
	xlForecastDataCompletionZeros=$00000000;
	xlForecastDataCompletionInterpolate=$00000001;

	// Constants for enum XlForecastAggregation
type
	XlForecastAggregation=TOleEnum;

const
	xlForecastAggregationAverage=$00000001;
	xlForecastAggregationCount=$00000002;
	xlForecastAggregationCountA=$00000003;
	xlForecastAggregationMax=$00000004;
	xlForecastAggregationMedian=$00000005;
	xlForecastAggregationMin=$00000006;
	xlForecastAggregationSum=$00000007;

	// Constants for enum XlForecastChartType
type
	XlForecastChartType=TOleEnum;

const
	xlForecastChartTypeLine=$00000000;
	xlForecastChartTypeColumn=$00000001;

	// Constants for enum XlPublishToDocsDisclosureScope
type
	XlPublishToDocsDisclosureScope=TOleEnum;

const
	msoPublic=$00000000;
	msoLimited=$00000001;
	msoOrganization=$00000002;
	msoNoOverwrite=$00000003;

	// Constants for enum XlCategorySortOrder
type
	XlCategorySortOrder=TOleEnum;

const
	xlIndexAscending=$00000000;
	xlIndexDescending=$00000001;
	xlCategoryAscending=$00000002;
	xlCategoryDescending=$00000003;

	// Constants for enum XlValueSortOrder
type
	XlValueSortOrder=TOleEnum;

const
	xlValueNone=$00000000;
	xlValueAscending=$00000001;
	xlValueDescending=$00000002;

	// Constants for enum XlGeoProjectionType
type
	XlGeoProjectionType=TOleEnum;

const
	xlGeoProjectionTypeAutomatic=$00000000;
	xlGeoProjectionTypeMercator=$00000001;
	xlGeoProjectionTypeMiller=$00000002;
	xlGeoProjectionTypeAlbers=$00000003;
	xlGeoProjectionTypeRobinson=$00000004;

	// Constants for enum XlGeoMappingLevel
type
	XlGeoMappingLevel=TOleEnum;

const
	xlGeoMappingLevelAutomatic=$00000000;
	xlGeoMappingLevelDataOnly=$00000001;
	xlGeoMappingLevelPostalCode=$00000002;
	xlGeoMappingLevelCounty=$00000003;
	xlGeoMappingLevelState=$00000004;
	xlGeoMappingLevelCountryRegion=$00000005;
	xlGeoMappingLevelCountryRegionList=$00000006;
	xlGeoMappingLevelWorld=$00000007;

	// Constants for enum XlRegionLabelOptions
type
	XlRegionLabelOptions=TOleEnum;

const
	xlRegionLabelOptionsNone=$00000000;
	xlRegionLabelOptionsBestFitOnly=$00000001;
	xlRegionLabelOptionsShowAll=$00000002;

	// Constants for enum XlPublishToPBIPublishType
type
	XlPublishToPBIPublishType=TOleEnum;

const
	msoPBIExport=$00000000;
	msoPBIUpload=$00000001;

	// Constants for enum XlPublishToPBINameConflictAction
type
	XlPublishToPBINameConflictAction=TOleEnum;

const
	msoPBIIgnore=$00000000;
	msoPBIAbort=$00000001;
	msoPBIOverwrite=$00000002;

	// Constants for enum XlSeriesColorGradientStyle
type
	XlSeriesColorGradientStyle=TOleEnum;

const
	xlSeriesColorGradientStyleSequential=$00000000;
	xlSeriesColorGradientStyleDiverging=$00000001;

	// Constants for enum XlGradientStopPositionType
type
	XlGradientStopPositionType=TOleEnum;

const
	xlGradientStopPositionTypeExtremeValue=$00000000;
	xlGradientStopPositionTypeNumber=$00000001;
	xlGradientStopPositionTypePercent=$00000002;

	// Constants for enum XlLinkedDataTypeState
type
	XlLinkedDataTypeState=TOleEnum;

const
	xlLinkedDataTypeStateNone=$00000000;
	xlLinkedDataTypeStateValidLinkedData=$00000001;
	xlLinkedDataTypeStateDisambiguationNeeded=$00000002;
	xlLinkedDataTypeStateBrokenLinkedData=$00000003;
	xlLinkedDataTypeStateFetchingData=$00000004;

	// Constants for enum XlFormulaVersion
type
	XlFormulaVersion=TOleEnum;

const
	xlReplaceFormula=$00000000;
	xlReplaceFormula2=$00000001;

type

	// *********************************************************************//
	// Forward declaration of types defined in TypeLibrary
	// *********************************************************************//
	Adjustments=interface;
	AdjustmentsDisp=dispinterface;
	CalloutFormat=interface;
	CalloutFormatDisp=dispinterface;
	ColorFormat=interface;
	ColorFormatDisp=dispinterface;
	LineFormat=interface;
	LineFormatDisp=dispinterface;
	ShapeNode=interface;
	ShapeNodeDisp=dispinterface;
	ShapeNodes=interface;
	ShapeNodesDisp=dispinterface;
	PictureFormat=interface;
	PictureFormatDisp=dispinterface;
	ShadowFormat=interface;
	ShadowFormatDisp=dispinterface;
	TextEffectFormat=interface;
	TextEffectFormatDisp=dispinterface;
	ThreeDFormat=interface;
	ThreeDFormatDisp=dispinterface;
	FillFormat=interface;
	FillFormatDisp=dispinterface;
	DiagramNodes=interface;
	DiagramNodesDisp=dispinterface;
	DiagramNodeChildren=interface;
	DiagramNodeChildrenDisp=dispinterface;
	DiagramNode=interface;
	DiagramNodeDisp=dispinterface;
	IRTDUpdateEvent=interface;
	IRTDUpdateEventDisp=dispinterface;
	IRtdServer=interface;
	IRtdServerDisp=dispinterface;
	TextFrame2=interface;
	TextFrame2Disp=dispinterface;
	Model3DFormat=interface;
	Model3DFormatDisp=dispinterface;
	ExcelIFont=interface;
	IWindow=interface;
	IWindows=interface;
	IAppEvents=interface;
	_Application=interface;
	_ApplicationDisp=dispinterface;
	IWorksheetFunction=interface;
	IRange=interface;
	IChartEvents=interface;
	_Chart=interface;
	_ChartDisp=dispinterface;
	Sheets=interface;
	SheetsDisp=dispinterface;
	IVPageBreak=interface;
	IHPageBreak=interface;
	IHPageBreaks=interface;
	IVPageBreaks=interface;
	IRecentFile=interface;
	IRecentFiles=interface;
	IDocEvents=interface;
	_Worksheet=interface;
	_WorksheetDisp=dispinterface;
	IStyle=interface;
	IStyles=interface;
	IBorders=interface;
	_Global=interface;
	_GlobalDisp=dispinterface;
	IAddIn=interface;
	IAddIns=interface;
	IToolbar=interface;
	IToolbars=interface;
	IToolbarButton=interface;
	IToolbarButtons=interface;
	IAreas=interface;
	IWorkbookEvents=interface;
	_Workbook=interface;
	_WorkbookDisp=dispinterface;
	Workbooks=interface;
	WorkbooksDisp=dispinterface;
	IMenuBars=interface;
	IMenuBar=interface;
	IMenus=interface;
	IMenu=interface;
	IMenuItems=interface;
	IMenuItem=interface;
	ICharts=interface;
	IDrawingObjects=interface;
	IPivotCache=interface;
	IPivotCaches=interface;
	IPivotFormula=interface;
	IPivotFormulas=interface;
	IPivotTable=interface;
	IPivotTables=interface;
	IPivotField=interface;
	IPivotFields=interface;
	ICalculatedFields=interface;
	IPivotItem=interface;
	IPivotItems=interface;
	ICalculatedItems=interface;
	ICharacters=interface;
	IDialogs=interface;
	IDialog=interface;
	ISoundNote=interface;
	IButton=interface;
	IButtons=interface;
	ICheckBox=interface;
	ICheckBoxes=interface;
	IOptionButton=interface;
	IOptionButtons=interface;
	IEditBox=interface;
	IEditBoxes=interface;
	IScrollBar=interface;
	IScrollBars=interface;
	IListBox=interface;
	IListBoxes=interface;
	IGroupBox=interface;
	IGroupBoxes=interface;
	IDropDown=interface;
	IDropDowns=interface;
	ISpinner=interface;
	ISpinners=interface;
	IDialogFrame=interface;
	ILabel=interface;
	ILabels=interface;
	IPanes=interface;
	IPane=interface;
	IScenarios=interface;
	IScenario=interface;
	IGroupObject=interface;
	IGroupObjects=interface;
	ILine=interface;
	ILines=interface;
	IRectangle=interface;
	IRectangles=interface;
	IOval=interface;
	IOvals=interface;
	IArc=interface;
	IArcs=interface;
	IOLEObjectEvents=interface;
	_IOLEObject=interface;
	IOLEObjects=interface;
	ITextBox=interface;
	ITextBoxes=interface;
	IPicture=interface;
	IPictures=interface;
	IDrawing=interface;
	IDrawings=interface;
	IRoutingSlip=interface;
	IOutline=interface;
	IModule=interface;
	IModules=interface;
	IDialogSheet=interface;
	IDialogSheets=interface;
	IWorksheets=interface;
	IPageSetup=interface;
	INames=interface;
	IName=interface;
	IChartObject=interface;
	IChartObjects=interface;
	IMailer=interface;
	ICustomViews=interface;
	ICustomView=interface;
	IFormatConditions=interface;
	IFormatCondition=interface;
	IComments=interface;
	IComment=interface;
	IRefreshEvents=interface;
	_IQueryTable=interface;
	IQueryTables=interface;
	IParameter=interface;
	IParameters=interface;
	IODBCError=interface;
	IODBCErrors=interface;
	IValidation=interface;
	IHyperlinks=interface;
	IHyperlink=interface;
	IAutoFilter=interface;
	IFilters=interface;
	IFilter=interface;
	IAutoCorrect=interface;
	IBorder=interface;
	IInterior=interface;
	IChartFillFormat=interface;
	IChartColorFormat=interface;
	IAxis=interface;
	IChartTitle=interface;
	IAxisTitle=interface;
	IChartGroup=interface;
	IChartGroups=interface;
	IAxes=interface;
	IPoints=interface;
	IPoint=interface;
	ISeries=interface;
	ISeriesCollection=interface;
	IDataLabel=interface;
	IDataLabels=interface;
	ILegendEntry=interface;
	ILegendEntries=interface;
	ILegendKey=interface;
	ITrendlines=interface;
	ITrendline=interface;
	ICorners=interface;
	ISeriesLines=interface;
	IHiLoLines=interface;
	IGridlines=interface;
	IDropLines=interface;
	ILeaderLines=interface;
	IUpBars=interface;
	IDownBars=interface;
	IFloor=interface;
	IWalls=interface;
	ITickLabels=interface;
	IPlotArea=interface;
	IChartArea=interface;
	ILegend=interface;
	IErrorBars=interface;
	IDataTable=interface;
	IPhonetic=interface;
	IShape=interface;
	IShapes=interface;
	IShapeRange=interface;
	IGroupShapes=interface;
	ITextFrame=interface;
	IConnectorFormat=interface;
	IFreeformBuilder=interface;
	IControlFormat=interface;
	IOLEFormat=interface;
	ILinkFormat=interface;
	IPublishObjects=interface;
	PublishObject=interface;
	PublishObjectDisp=dispinterface;
	IOLEDBError=interface;
	IOLEDBErrors=interface;
	IPhonetics=interface;
	DefaultWebOptions=interface;
	DefaultWebOptionsDisp=dispinterface;
	WebOptions=interface;
	WebOptionsDisp=dispinterface;
	IPivotLayout=interface;
	TreeviewControl=interface;
	TreeviewControlDisp=dispinterface;
	CubeField=interface;
	CubeFieldDisp=dispinterface;
	CubeFields=interface;
	CubeFieldsDisp=dispinterface;
	IDisplayUnitLabel=interface;
	ICellFormat=interface;
	IUsedObjects=interface;
	ICustomProperties=interface;
	ICustomProperty=interface;
	ICalculatedMembers=interface;
	ICalculatedMember=interface;
	IWatches=interface;
	IWatch=interface;
	IPivotCell=interface;
	IGraphic=interface;
	IAutoRecover=interface;
	IErrorCheckingOptions=interface;
	IErrors=interface;
	IError=interface;
	ISmartTagAction=interface;
	ISmartTagActions=interface;
	ISmartTag=interface;
	ISmartTags=interface;
	ISmartTagRecognizer=interface;
	ISmartTagRecognizers=interface;
	ISmartTagOptions=interface;
	ISpellingOptions=interface;
	ISpeech=interface;
	IProtection=interface;
	IPivotItemList=interface;
	ITab=interface;
	IAllowEditRanges=interface;
	IAllowEditRange=interface;
	IUserAccessList=interface;
	IUserAccess=interface;
	IRTD=interface;
	IDiagram=interface;
	IListObjects=interface;
	IListObject=interface;
	IListColumns=interface;
	IListColumn=interface;
	IListRows=interface;
	IListRow=interface;
	IXmlNamespace=interface;
	IXmlNamespaces=interface;
	IXmlDataBinding=interface;
	IXmlSchema=interface;
	IXmlSchemas=interface;
	IXmlMap=interface;
	IXmlMaps=interface;
	IListDataFormat=interface;
	IXPath=interface;
	IPivotLineCells=interface;
	IPivotLine=interface;
	IPivotLines=interface;
	IPivotAxis=interface;
	IPivotFilter=interface;
	IPivotFilters=interface;
	IWorkbookConnection=interface;
	IConnections=interface;
	IWorksheetView=interface;
	IChartView=interface;
	IModuleView=interface;
	IDialogSheetView=interface;
	ISheetViews=interface;
	IOLEDBConnection=interface;
	IODBCConnection=interface;
	IAction=interface;
	IActions=interface;
	IFormatColor=interface;
	IConditionValue=interface;
	IColorScale=interface;
	IColorScaleCriteria=interface;
	IColorScaleCriterion=interface;
	IDatabar=interface;
	IIconSetCondition=interface;
	IIconCriteria=interface;
	IIconCriterion=interface;
	IIcon=interface;
	IIconSet=interface;
	IIconSets=interface;
	ITop10=interface;
	IAboveAverage=interface;
	IUniqueValues=interface;
	IRanges=interface;
	IHeaderFooter=interface;
	IPage=interface;
	IPages=interface;
	IServerViewableItems=interface;
	ITableStyleElement=interface;
	ITableStyleElements=interface;
	ITableStyle=interface;
	ITableStyles=interface;
	ISortField=interface;
	ISortFields=interface;
	ISort=interface;
	IResearch=interface;
	IColorStop=interface;
	IColorStops=interface;
	ILinearGradient=interface;
	IRectangularGradient=interface;
	IMultiThreadedCalculation=interface;
	IChartFormat=interface;
	IFileExportConverter=interface;
	IFileExportConverters=interface;
	IAddIns2=interface;
	ISparklineGroups=interface;
	ISparklineGroup=interface;
	ISparkPoints=interface;
	ISparkline=interface;
	ISparkAxes=interface;
	ISparkHorizontalAxis=interface;
	ISparkVerticalAxis=interface;
	ISparkColor=interface;
	IDataBarBorder=interface;
	INegativeBarFormat=interface;
	IValueChange=interface;
	IPivotTableChangeList=interface;
	IDisplayFormat=interface;
	ISlicerCaches=interface;
	ISlicerCache=interface;
	ISlicerCacheLevels=interface;
	ISlicerCacheLevel=interface;
	ISlicers=interface;
	ISlicer=interface;
	ISlicerItem=interface;
	ISlicerItems=interface;
	ISlicerPivotTables=interface;
	IProtectedViewWindows=interface;
	IProtectedViewWindow=interface;
	ITableObject=interface;
	IPivotValueCell=interface;
	IQuickAnalysis=interface;
	IModelConnection=interface;
	IWorksheetDataConnection=interface;
	ITextConnection=interface;
	IDataFeedConnection=interface;
	IModelTableColumn=interface;
	IModelTableColumns=interface;
	IModelTable=interface;
	IModelTables=interface;
	IModelRelationship=interface;
	IModelRelationships=interface;
	IModel=interface;
	IFullSeriesCollection=interface;
	IChartCategory=interface;
	ICategoryCollection=interface;
	ITimelineState=interface;
	ITimelineViewState=interface;
	IModelTableNames=interface;
	IModelTableNameChange=interface;
	IModelTableNameChanges=interface;
	IModelChanges=interface;
	IModelColumnName=interface;
	IModelColumnNames=interface;
	IModelColumnChange=interface;
	IModelColumnChanges=interface;
	IModelMeasureName=interface;
	IModelMeasureNames=interface;
	IWorkbookQuery=interface;
	IQueries=interface;
	IModelMeasure=interface;
	IModelMeasures=interface;
	IModelFormatGeneral=interface;
	IModelFormatDate=interface;
	IModelFormatDecimalNumber=interface;
	IModelFormatWholeNumber=interface;
	IModelFormatPercentageNumber=interface;
	IModelFormatScientificNumber=interface;
	IModelFormatCurrency=interface;
	IModelFormatBoolean=interface;
	IPublishedDocs=interface;
	IPublishedDoc=interface;
	ISeriesGradientStopColorFormat=interface;
	IChartSeriesGradientStopData=interface;
	IDefaultPivotTableLayoutOptions=interface;
	ICommentsThreaded=interface;
	ICommentThreaded=interface;
	IAuthor=interface;
	INamedSheetViewCollection=interface;
	INamedSheetView=interface;
	Font=dispinterface;
	Window=dispinterface;
	Windows=dispinterface;
	AppEvents=dispinterface;
	WorksheetFunction=dispinterface;
	ExcelRange=dispinterface;
	ChartEvents=dispinterface;
	VPageBreak=dispinterface;
	HPageBreak=dispinterface;
	HPageBreaks=dispinterface;
	VPageBreaks=dispinterface;
	RecentFile=dispinterface;
	RecentFiles=dispinterface;
	DocEvents=dispinterface;
	Style=dispinterface;
	Styles=dispinterface;
	Borders=dispinterface;
	AddIn=dispinterface;
	AddIns=dispinterface;
	Toolbar=dispinterface;
	Toolbars=dispinterface;
	ToolbarButton=dispinterface;
	ToolbarButtons=dispinterface;
	Areas=dispinterface;
	WorkbookEvents=dispinterface;
	MenuBars=dispinterface;
	MenuBar=dispinterface;
	Menus=dispinterface;
	Menu=dispinterface;
	MenuItems=dispinterface;
	MenuItem=dispinterface;
	Charts=dispinterface;
	DrawingObjects=dispinterface;
	PivotCache=dispinterface;
	PivotCaches=dispinterface;
	PivotFormula=dispinterface;
	PivotFormulas=dispinterface;
	PivotTable=dispinterface;
	PivotTables=dispinterface;
	PivotField=dispinterface;
	PivotFields=dispinterface;
	CalculatedFields=dispinterface;
	PivotItem=dispinterface;
	PivotItems=dispinterface;
	CalculatedItems=dispinterface;
	Characters=dispinterface;
	Dialogs=dispinterface;
	Dialog=dispinterface;
	SoundNote=dispinterface;
	Button=dispinterface;
	Buttons=dispinterface;
	CheckBox=dispinterface;
	CheckBoxes=dispinterface;
	OptionButton=dispinterface;
	OptionButtons=dispinterface;
	EditBox=dispinterface;
	EditBoxes=dispinterface;
	ScrollBar=dispinterface;
	ScrollBars=dispinterface;
	ListBox=dispinterface;
	ListBoxes=dispinterface;
	GroupBox=dispinterface;
	GroupBoxes=dispinterface;
	DropDown=dispinterface;
	DropDowns=dispinterface;
	Spinner=dispinterface;
	Spinners=dispinterface;
	DialogFrame=dispinterface;
	Label_=dispinterface;
	Labels=dispinterface;
	Panes=dispinterface;
	Pane=dispinterface;
	Scenarios=dispinterface;
	Scenario=dispinterface;
	GroupObject=dispinterface;
	GroupObjects=dispinterface;
	Line=dispinterface;
	Lines=dispinterface;
	Rectangle=dispinterface;
	Rectangles=dispinterface;
	Oval=dispinterface;
	Ovals=dispinterface;
	Arc=dispinterface;
	Arcs=dispinterface;
	OLEObjectEvents=dispinterface;
	_OLEObject=dispinterface;
	OLEObjects=dispinterface;
	TextBox=dispinterface;
	TextBoxes=dispinterface;
	Picture=dispinterface;
	Pictures=dispinterface;
	Drawing=dispinterface;
	Drawings=dispinterface;
	RoutingSlip=dispinterface;
	Outline=dispinterface;
	Module=dispinterface;
	Modules=dispinterface;
	DialogSheet=dispinterface;
	DialogSheets=dispinterface;
	Worksheets=dispinterface;
	PageSetup=dispinterface;
	Names=dispinterface;
	Name=dispinterface;
	ChartObject=dispinterface;
	ChartObjects=dispinterface;
	Mailer=dispinterface;
	CustomViews=dispinterface;
	CustomView=dispinterface;
	FormatConditions=dispinterface;
	FormatCondition=dispinterface;
	Comments=dispinterface;
	Comment=dispinterface;
	RefreshEvents=dispinterface;
	_QueryTable=dispinterface;
	QueryTables=dispinterface;
	Parameter=dispinterface;
	Parameters=dispinterface;
	ODBCError=dispinterface;
	ODBCErrors=dispinterface;
	Validation=dispinterface;
	Hyperlinks=dispinterface;
	Hyperlink=dispinterface;
	AutoFilter=dispinterface;
	Filters=dispinterface;
	Filter=dispinterface;
	AutoCorrect=dispinterface;
	Border=dispinterface;
	Interior=dispinterface;
	ChartFillFormat=dispinterface;
	ChartColorFormat=dispinterface;
	Axis=dispinterface;
	ChartTitle=dispinterface;
	AxisTitle=dispinterface;
	ChartGroup=dispinterface;
	ChartGroups=dispinterface;
	Axes=dispinterface;
	Points=dispinterface;
	Point=dispinterface;
	Series=dispinterface;
	SeriesCollection=dispinterface;
	DataLabel=dispinterface;
	DataLabels=dispinterface;
	LegendEntry=dispinterface;
	LegendEntries=dispinterface;
	LegendKey=dispinterface;
	Trendlines=dispinterface;
	Trendline=dispinterface;
	Corners=dispinterface;
	SeriesLines=dispinterface;
	HiLoLines=dispinterface;
	Gridlines=dispinterface;
	DropLines=dispinterface;
	LeaderLines=dispinterface;
	UpBars=dispinterface;
	DownBars=dispinterface;
	Floor=dispinterface;
	Walls=dispinterface;
	TickLabels=dispinterface;
	PlotArea=dispinterface;
	ChartArea=dispinterface;
	Legend=dispinterface;
	ErrorBars=dispinterface;
	DataTable=dispinterface;
	Phonetic=dispinterface;
	Shape=dispinterface;
	Shapes=dispinterface;
	ShapeRange=dispinterface;
	GroupShapes=dispinterface;
	TextFrame=dispinterface;
	ConnectorFormat=dispinterface;
	FreeformBuilder=dispinterface;
	ControlFormat=dispinterface;
	OLEFormat=dispinterface;
	LinkFormat=dispinterface;
	PublishObjects=dispinterface;
	OLEDBError=dispinterface;
	OLEDBErrors=dispinterface;
	Phonetics=dispinterface;
	PivotLayout=dispinterface;
	DisplayUnitLabel=dispinterface;
	CellFormat=dispinterface;
	UsedObjects=dispinterface;
	CustomProperties=dispinterface;
	CustomProperty=dispinterface;
	CalculatedMembers=dispinterface;
	CalculatedMember=dispinterface;
	Watches=dispinterface;
	Watch=dispinterface;
	PivotCell=dispinterface;
	Graphic=dispinterface;
	AutoRecover=dispinterface;
	ErrorCheckingOptions=dispinterface;
	Errors=dispinterface;
	Error=dispinterface;
	SmartTagAction=dispinterface;
	SmartTagActions=dispinterface;
	SmartTag=dispinterface;
	SmartTags=dispinterface;
	SmartTagRecognizer=dispinterface;
	SmartTagRecognizers=dispinterface;
	SmartTagOptions=dispinterface;
	SpellingOptions=dispinterface;
	Speech=dispinterface;
	Protection=dispinterface;
	PivotItemList=dispinterface;
	Tab=dispinterface;
	AllowEditRanges=dispinterface;
	AllowEditRange=dispinterface;
	UserAccessList=dispinterface;
	UserAccess=dispinterface;
	RTD=dispinterface;
	Diagram=dispinterface;
	ListObjects=dispinterface;
	ListObject=dispinterface;
	ListColumns=dispinterface;
	ListColumn=dispinterface;
	ListRows=dispinterface;
	ListRow=dispinterface;
	XmlNamespace=dispinterface;
	XmlNamespaces=dispinterface;
	XmlDataBinding=dispinterface;
	XmlSchema=dispinterface;
	XmlSchemas=dispinterface;
	XmlMap=dispinterface;
	XmlMaps=dispinterface;
	ListDataFormat=dispinterface;
	XPath=dispinterface;
	PivotLineCells=dispinterface;
	PivotLine=dispinterface;
	PivotLines=dispinterface;
	PivotAxis=dispinterface;
	PivotFilter=dispinterface;
	PivotFilters=dispinterface;
	WorkbookConnection=dispinterface;
	Connections=dispinterface;
	WorksheetView=dispinterface;
	ChartView=dispinterface;
	ModuleView=dispinterface;
	DialogSheetView=dispinterface;
	SheetViews=dispinterface;
	OLEDBConnection=dispinterface;
	ODBCConnection=dispinterface;
	Action=dispinterface;
	Actions=dispinterface;
	FormatColor=dispinterface;
	ConditionValue=dispinterface;
	ColorScale=dispinterface;
	ColorScaleCriteria=dispinterface;
	ColorScaleCriterion=dispinterface;
	Databar=dispinterface;
	IconSetCondition=dispinterface;
	IconCriteria=dispinterface;
	IconCriterion=dispinterface;
	Icon=dispinterface;
	IconSet=dispinterface;
	IconSets=dispinterface;
	Top10=dispinterface;
	AboveAverage=dispinterface;
	UniqueValues=dispinterface;
	Ranges=dispinterface;
	HeaderFooter=dispinterface;
	Page=dispinterface;
	Pages=dispinterface;
	ServerViewableItems=dispinterface;
	TableStyleElement=dispinterface;
	TableStyleElements=dispinterface;
	TableStyle=dispinterface;
	TableStyles=dispinterface;
	SortField=dispinterface;
	SortFields=dispinterface;
	Sort=dispinterface;
	Research=dispinterface;
	ColorStop=dispinterface;
	ColorStops=dispinterface;
	LinearGradient=dispinterface;
	RectangularGradient=dispinterface;
	MultiThreadedCalculation=dispinterface;
	ChartFormat=dispinterface;
	FileExportConverter=dispinterface;
	FileExportConverters=dispinterface;
	AddIns2=dispinterface;
	SparklineGroups=dispinterface;
	SparklineGroup=dispinterface;
	SparkPoints=dispinterface;
	Sparkline=dispinterface;
	SparkAxes=dispinterface;
	SparkHorizontalAxis=dispinterface;
	SparkVerticalAxis=dispinterface;
	SparkColor=dispinterface;
	DataBarBorder=dispinterface;
	NegativeBarFormat=dispinterface;
	ValueChange=dispinterface;
	PivotTableChangeList=dispinterface;
	DisplayFormat=dispinterface;
	SlicerCaches=dispinterface;
	SlicerCache=dispinterface;
	SlicerCacheLevels=dispinterface;
	SlicerCacheLevel=dispinterface;
	Slicers=dispinterface;
	Slicer=dispinterface;
	SlicerItem=dispinterface;
	SlicerItems=dispinterface;
	SlicerPivotTables=dispinterface;
	ProtectedViewWindows=dispinterface;
	ProtectedViewWindow=dispinterface;
	TableObject=dispinterface;
	PivotValueCell=dispinterface;
	QuickAnalysis=dispinterface;
	ModelConnection=dispinterface;
	WorksheetDataConnection=dispinterface;
	TextConnection=dispinterface;
	DataFeedConnection=dispinterface;
	ModelTableColumn=dispinterface;
	ModelTableColumns=dispinterface;
	ModelTable=dispinterface;
	ModelTables=dispinterface;
	ModelRelationship=dispinterface;
	ModelRelationships=dispinterface;
	Model=dispinterface;
	FullSeriesCollection=dispinterface;
	ChartCategory=dispinterface;
	CategoryCollection=dispinterface;
	TimelineState=dispinterface;
	TimelineViewState=dispinterface;
	ModelTableNames=dispinterface;
	ModelTableNameChange=dispinterface;
	ModelTableNameChanges=dispinterface;
	ModelChanges=dispinterface;
	ModelColumnName=dispinterface;
	ModelColumnNames=dispinterface;
	ModelColumnChange=dispinterface;
	ModelColumnChanges=dispinterface;
	ModelMeasureName=dispinterface;
	ModelMeasureNames=dispinterface;
	WorkbookQuery=dispinterface;
	Queries=dispinterface;
	ModelMeasure=dispinterface;
	ModelMeasures=dispinterface;
	ModelFormatGeneral=dispinterface;
	ModelFormatDate=dispinterface;
	ModelFormatDecimalNumber=dispinterface;
	ModelFormatWholeNumber=dispinterface;
	ModelFormatPercentageNumber=dispinterface;
	ModelFormatScientificNumber=dispinterface;
	ModelFormatCurrency=dispinterface;
	ModelFormatBoolean=dispinterface;
	PublishedDocs=dispinterface;
	PublishedDoc=dispinterface;
	SeriesGradientStopColorFormat=dispinterface;
	ChartSeriesGradientStopData=dispinterface;
	DefaultPivotTableLayoutOptions=dispinterface;
	CommentsThreaded=dispinterface;
	CommentThreaded=dispinterface;
	Author=dispinterface;
	NamedSheetViewCollection=dispinterface;
	NamedSheetView=dispinterface;
	IDummy=interface;
	ICanvasShapes=interface;

	// *********************************************************************//
	// Declaration of CoClasses defined in Type Library
	// (NOTE: Here we map each CoClass to its Default Interface)
	// *********************************************************************//
	ExcelQueryTable=_QueryTable;
	ExcelApplication=_Application;
	ExcelChart=_Chart;
	ExcelWorksheet=_Worksheet;
	ExcelGlobal=_Global;
	ExcelWorkbook=_Workbook;
	ExcelOLEObject=_OLEObject;

	// *********************************************************************//
	// Declaration of structures, unions and aliases.
	// *********************************************************************//
	PPSafeArray1=^PSafeArray; { * }
	PWideString1=^WideString; { * }
	PInteger1=^Integer; { * }
	PUserType1=^TGUID; { * }
	PShortint1=^Shortint; { * }
	PPShortint1=^PShortint1; { * }
	PUserType2=^DISPPARAMS; { * }

	// *********************************************************************//
	// Interface: Adjustments
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0310-0000-0000-C000-000000000046}
	// *********************************************************************//
	Adjustments=interface(_IMsoDispObj)
		['{000C0310-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_Count:SYSINT;safecall;
		function Get_Item(Index:SYSINT):Single;safecall;
		procedure Set_Item(Index:SYSINT;Val:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property Count:SYSINT read Get_Count;
		property Item[Index:SYSINT]:Single read Get_Item write Set_Item;default;
	end;

	// *********************************************************************//
	// DispIntf:  AdjustmentsDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0310-0000-0000-C000-000000000046}
	// *********************************************************************//
	AdjustmentsDisp=dispinterface
		['{000C0310-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property Count:SYSINT readonly dispid 2;
		property Item[Index:SYSINT]:Single dispid 0;default;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: CalloutFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0311-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalloutFormat=interface(_IMsoDispObj)
		['{000C0311-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure AutomaticLength;safecall;
		procedure CustomDrop(Drop:Single);safecall;
		procedure CustomLength(Length:Single);safecall;
		procedure PresetDrop(DropType:MsoCalloutDropType);safecall;
		function Get_Accent:MsoTriState;safecall;
		procedure Set_Accent(Accent:MsoTriState);safecall;
		function Get_Angle:MsoCalloutAngleType;safecall;
		procedure Set_Angle(Angle:MsoCalloutAngleType);safecall;
		function Get_AutoAttach:MsoTriState;safecall;
		procedure Set_AutoAttach(AutoAttach:MsoTriState);safecall;
		function Get_AutoLength:MsoTriState;safecall;
		function Get_Border:MsoTriState;safecall;
		procedure Set_Border(Border:MsoTriState);safecall;
		function Get_Drop:Single;safecall;
		function Get_DropType:MsoCalloutDropType;safecall;
		function Get_Gap:Single;safecall;
		procedure Set_Gap(Gap:Single);safecall;
		function Get_Length:Single;safecall;
		function Get_type_:MsoCalloutType;safecall;
		procedure Set_type_(Type_:MsoCalloutType);safecall;
		property Parent:IDispatch read Get_Parent;
		property Accent:MsoTriState read Get_Accent write Set_Accent;
		property Angle:MsoCalloutAngleType read Get_Angle write Set_Angle;
		property AutoAttach:MsoTriState read Get_AutoAttach write Set_AutoAttach;
		property AutoLength:MsoTriState read Get_AutoLength;
		property Border:MsoTriState read Get_Border write Set_Border;
		property Drop:Single read Get_Drop;
		property DropType:MsoCalloutDropType read Get_DropType;
		property Gap:Single read Get_Gap write Set_Gap;
		property Length:Single read Get_Length;
		property Type_:MsoCalloutType read Get_type_ write Set_type_;
	end;

	// *********************************************************************//
	// DispIntf:  CalloutFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0311-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalloutFormatDisp=dispinterface
		['{000C0311-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure AutomaticLength;dispid 10;
		procedure CustomDrop(Drop:Single);dispid 11;
		procedure CustomLength(Length:Single);dispid 12;
		procedure PresetDrop(DropType:MsoCalloutDropType);dispid 13;
		property Accent:MsoTriState dispid 100;
		property Angle:MsoCalloutAngleType dispid 101;
		property AutoAttach:MsoTriState dispid 102;
		property AutoLength:MsoTriState readonly dispid 103;
		property Border:MsoTriState dispid 104;
		property Drop:Single readonly dispid 105;
		property DropType:MsoCalloutDropType readonly dispid 106;
		property Gap:Single dispid 107;
		property Length:Single readonly dispid 108;
		property Type_:MsoCalloutType dispid 109;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ColorFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0312-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorFormat=interface(_IMsoDispObj)
		['{000C0312-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_RGB:MsoRGBType;safecall;
		procedure Set_RGB(RGB:MsoRGBType);safecall;
		function Get_SchemeColor:SYSINT;safecall;
		procedure Set_SchemeColor(SchemeColor:SYSINT);safecall;
		function Get_type_:MsoColorType;safecall;
		function Get_TintAndShade:Single;safecall;
		procedure Set_TintAndShade(pValue:Single);safecall;
		function Get_ObjectThemeColor:MsoThemeColorIndex;safecall;
		procedure Set_ObjectThemeColor(ObjectThemeColor:MsoThemeColorIndex);safecall;
		function Get_Brightness:Single;safecall;
		procedure Set_Brightness(pValue:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property RGB:MsoRGBType read Get_RGB write Set_RGB;
		property SchemeColor:SYSINT read Get_SchemeColor write Set_SchemeColor;
		property Type_:MsoColorType read Get_type_;
		property TintAndShade:Single read Get_TintAndShade write Set_TintAndShade;
		property ObjectThemeColor:MsoThemeColorIndex read Get_ObjectThemeColor write Set_ObjectThemeColor;
		property Brightness:Single read Get_Brightness write Set_Brightness;
	end;

	// *********************************************************************//
	// DispIntf:  ColorFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0312-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorFormatDisp=dispinterface
		['{000C0312-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property RGB:MsoRGBType dispid 0;
		property SchemeColor:SYSINT dispid 100;
		property Type_:MsoColorType readonly dispid 101;
		property TintAndShade:Single dispid 102;
		property ObjectThemeColor:MsoThemeColorIndex dispid 104;
		property Brightness:Single dispid 105;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: LineFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0317-0000-0000-C000-000000000046}
	// *********************************************************************//
	LineFormat=interface(_IMsoDispObj)
		['{000C0317-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_BackColor:ColorFormat;safecall;
		procedure Set_BackColor(const BackColor:ColorFormat);safecall;
		function Get_BeginArrowheadLength:MsoArrowheadLength;safecall;
		procedure Set_BeginArrowheadLength(BeginArrowheadLength:MsoArrowheadLength);safecall;
		function Get_BeginArrowheadStyle:MsoArrowheadStyle;safecall;
		procedure Set_BeginArrowheadStyle(BeginArrowheadStyle:MsoArrowheadStyle);safecall;
		function Get_BeginArrowheadWidth:MsoArrowheadWidth;safecall;
		procedure Set_BeginArrowheadWidth(BeginArrowheadWidth:MsoArrowheadWidth);safecall;
		function Get_DashStyle:MsoLineDashStyle;safecall;
		procedure Set_DashStyle(DashStyle:MsoLineDashStyle);safecall;
		function Get_EndArrowheadLength:MsoArrowheadLength;safecall;
		procedure Set_EndArrowheadLength(EndArrowheadLength:MsoArrowheadLength);safecall;
		function Get_EndArrowheadStyle:MsoArrowheadStyle;safecall;
		procedure Set_EndArrowheadStyle(EndArrowheadStyle:MsoArrowheadStyle);safecall;
		function Get_EndArrowheadWidth:MsoArrowheadWidth;safecall;
		procedure Set_EndArrowheadWidth(EndArrowheadWidth:MsoArrowheadWidth);safecall;
		function Get_ForeColor:ColorFormat;safecall;
		procedure Set_ForeColor(const ForeColor:ColorFormat);safecall;
		function Get_Pattern:MsoPatternType;safecall;
		procedure Set_Pattern(Pattern:MsoPatternType);safecall;
		function Get_Style:MsoLineStyle;safecall;
		procedure Set_Style(Style:MsoLineStyle);safecall;
		function Get_Transparency:Single;safecall;
		procedure Set_Transparency(Transparency:Single);safecall;
		function Get_Visible:MsoTriState;safecall;
		procedure Set_Visible(Visible:MsoTriState);safecall;
		function Get_Weight:Single;safecall;
		procedure Set_Weight(Weight:Single);safecall;
		function Get_InsetPen:MsoTriState;safecall;
		procedure Set_InsetPen(InsetPen:MsoTriState);safecall;
		property Parent:IDispatch read Get_Parent;
		property BackColor:ColorFormat read Get_BackColor write Set_BackColor;
		property BeginArrowheadLength:MsoArrowheadLength read Get_BeginArrowheadLength write Set_BeginArrowheadLength;
		property BeginArrowheadStyle:MsoArrowheadStyle read Get_BeginArrowheadStyle write Set_BeginArrowheadStyle;
		property BeginArrowheadWidth:MsoArrowheadWidth read Get_BeginArrowheadWidth write Set_BeginArrowheadWidth;
		property DashStyle:MsoLineDashStyle read Get_DashStyle write Set_DashStyle;
		property EndArrowheadLength:MsoArrowheadLength read Get_EndArrowheadLength write Set_EndArrowheadLength;
		property EndArrowheadStyle:MsoArrowheadStyle read Get_EndArrowheadStyle write Set_EndArrowheadStyle;
		property EndArrowheadWidth:MsoArrowheadWidth read Get_EndArrowheadWidth write Set_EndArrowheadWidth;
		property ForeColor:ColorFormat read Get_ForeColor write Set_ForeColor;
		property Pattern:MsoPatternType read Get_Pattern write Set_Pattern;
		property Style:MsoLineStyle read Get_Style write Set_Style;
		property Transparency:Single read Get_Transparency write Set_Transparency;
		property Visible:MsoTriState read Get_Visible write Set_Visible;
		property Weight:Single read Get_Weight write Set_Weight;
		property InsetPen:MsoTriState read Get_InsetPen write Set_InsetPen;
	end;

	// *********************************************************************//
	// DispIntf:  LineFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0317-0000-0000-C000-000000000046}
	// *********************************************************************//
	LineFormatDisp=dispinterface
		['{000C0317-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property BackColor:ColorFormat dispid 100;
		property BeginArrowheadLength:MsoArrowheadLength dispid 101;
		property BeginArrowheadStyle:MsoArrowheadStyle dispid 102;
		property BeginArrowheadWidth:MsoArrowheadWidth dispid 103;
		property DashStyle:MsoLineDashStyle dispid 104;
		property EndArrowheadLength:MsoArrowheadLength dispid 105;
		property EndArrowheadStyle:MsoArrowheadStyle dispid 106;
		property EndArrowheadWidth:MsoArrowheadWidth dispid 107;
		property ForeColor:ColorFormat dispid 108;
		property Pattern:MsoPatternType dispid 109;
		property Style:MsoLineStyle dispid 110;
		property Transparency:Single dispid 111;
		property Visible:MsoTriState dispid 112;
		property Weight:Single dispid 113;
		property InsetPen:MsoTriState dispid 114;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ShapeNode
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0318-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShapeNode=interface(_IMsoDispObj)
		['{000C0318-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_EditingType:MsoEditingType;safecall;
		function Get_Points:OleVariant;safecall;
		function Get_SegmentType:MsoSegmentType;safecall;
		property Parent:IDispatch read Get_Parent;
		property EditingType:MsoEditingType read Get_EditingType;
		property Points:OleVariant read Get_Points;
		property SegmentType:MsoSegmentType read Get_SegmentType;
	end;

	// *********************************************************************//
	// DispIntf:  ShapeNodeDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0318-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShapeNodeDisp=dispinterface
		['{000C0318-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property EditingType:MsoEditingType readonly dispid 100;
		property Points:OleVariant readonly dispid 101;
		property SegmentType:MsoSegmentType readonly dispid 102;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ShapeNodes
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0319-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShapeNodes=interface(_IMsoDispObj)
		['{000C0319-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_Count:SYSINT;safecall;
		function Item(Index:OleVariant):ShapeNode;safecall;
		function Get__NewEnum:IUnknown;safecall;
		procedure Delete(Index:SYSINT);safecall;
		procedure Insert(Index:SYSINT;SegmentType:MsoSegmentType;EditingType:MsoEditingType;X1:Single;Y1:Single;X2:Single;
			Y2:Single;X3:Single;Y3:Single);safecall;
		procedure SetEditingType(Index:SYSINT;EditingType:MsoEditingType);safecall;
		procedure SetPosition(Index:SYSINT;X1:Single;Y1:Single);safecall;
		procedure SetSegmentType(Index:SYSINT;SegmentType:MsoSegmentType);safecall;
		property Parent:IDispatch read Get_Parent;
		property Count:SYSINT read Get_Count;
		property _NewEnum:IUnknown read Get__NewEnum;
	end;

	// *********************************************************************//
	// DispIntf:  ShapeNodesDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0319-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShapeNodesDisp=dispinterface
		['{000C0319-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property Count:SYSINT readonly dispid 2;
		function Item(Index:OleVariant):ShapeNode;dispid 0;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Delete(Index:SYSINT);dispid 11;
		procedure Insert(Index:SYSINT;SegmentType:MsoSegmentType;EditingType:MsoEditingType;X1:Single;Y1:Single;X2:Single;
			Y2:Single;X3:Single;Y3:Single);dispid 12;
		procedure SetEditingType(Index:SYSINT;EditingType:MsoEditingType);dispid 13;
		procedure SetPosition(Index:SYSINT;X1:Single;Y1:Single);dispid 14;
		procedure SetSegmentType(Index:SYSINT;SegmentType:MsoSegmentType);dispid 15;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: PictureFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031A-0000-0000-C000-000000000046}
	// *********************************************************************//
	PictureFormat=interface(_IMsoDispObj)
		['{000C031A-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure IncrementBrightness(Increment:Single);safecall;
		procedure IncrementContrast(Increment:Single);safecall;
		function Get_Brightness:Single;safecall;
		procedure Set_Brightness(Brightness:Single);safecall;
		function Get_ColorType:MsoPictureColorType;safecall;
		procedure Set_ColorType(ColorType:MsoPictureColorType);safecall;
		function Get_Contrast:Single;safecall;
		procedure Set_Contrast(Contrast:Single);safecall;
		function Get_CropBottom:Single;safecall;
		procedure Set_CropBottom(CropBottom:Single);safecall;
		function Get_CropLeft:Single;safecall;
		procedure Set_CropLeft(CropLeft:Single);safecall;
		function Get_CropRight:Single;safecall;
		procedure Set_CropRight(CropRight:Single);safecall;
		function Get_CropTop:Single;safecall;
		procedure Set_CropTop(CropTop:Single);safecall;
		function Get_TransparencyColor:MsoRGBType;safecall;
		procedure Set_TransparencyColor(TransparencyColor:MsoRGBType);safecall;
		function Get_TransparentBackground:MsoTriState;safecall;
		procedure Set_TransparentBackground(TransparentBackground:MsoTriState);safecall;
		function Get_Crop:Crop;safecall;
		property Parent:IDispatch read Get_Parent;
		property Brightness:Single read Get_Brightness write Set_Brightness;
		property ColorType:MsoPictureColorType read Get_ColorType write Set_ColorType;
		property Contrast:Single read Get_Contrast write Set_Contrast;
		property CropBottom:Single read Get_CropBottom write Set_CropBottom;
		property CropLeft:Single read Get_CropLeft write Set_CropLeft;
		property CropRight:Single read Get_CropRight write Set_CropRight;
		property CropTop:Single read Get_CropTop write Set_CropTop;
		property TransparencyColor:MsoRGBType read Get_TransparencyColor write Set_TransparencyColor;
		property TransparentBackground:MsoTriState read Get_TransparentBackground write Set_TransparentBackground;
		property Crop:Crop read Get_Crop;
	end;

	// *********************************************************************//
	// DispIntf:  PictureFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031A-0000-0000-C000-000000000046}
	// *********************************************************************//
	PictureFormatDisp=dispinterface
		['{000C031A-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure IncrementBrightness(Increment:Single);dispid 10;
		procedure IncrementContrast(Increment:Single);dispid 11;
		property Brightness:Single dispid 100;
		property ColorType:MsoPictureColorType dispid 101;
		property Contrast:Single dispid 102;
		property CropBottom:Single dispid 103;
		property CropLeft:Single dispid 104;
		property CropRight:Single dispid 105;
		property CropTop:Single dispid 106;
		property TransparencyColor:MsoRGBType dispid 107;
		property TransparentBackground:MsoTriState dispid 108;
		property Crop:Crop readonly dispid 109;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ShadowFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031B-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShadowFormat=interface(_IMsoDispObj)
		['{000C031B-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure IncrementOffsetX(Increment:Single);safecall;
		procedure IncrementOffsetY(Increment:Single);safecall;
		function Get_ForeColor:ColorFormat;safecall;
		procedure Set_ForeColor(const ForeColor:ColorFormat);safecall;
		function Get_Obscured:MsoTriState;safecall;
		procedure Set_Obscured(Obscured:MsoTriState);safecall;
		function Get_OffsetX:Single;safecall;
		procedure Set_OffsetX(OffsetX:Single);safecall;
		function Get_OffsetY:Single;safecall;
		procedure Set_OffsetY(OffsetY:Single);safecall;
		function Get_Transparency:Single;safecall;
		procedure Set_Transparency(Transparency:Single);safecall;
		function Get_type_:MsoShadowType;safecall;
		procedure Set_type_(Type_:MsoShadowType);safecall;
		function Get_Visible:MsoTriState;safecall;
		procedure Set_Visible(Visible:MsoTriState);safecall;
		function Get_Style:MsoShadowStyle;safecall;
		procedure Set_Style(ShadowStyle:MsoShadowStyle);safecall;
		function Get_Blur:Single;safecall;
		procedure Set_Blur(Blur:Single);safecall;
		function Get_Size:Single;safecall;
		procedure Set_Size(Size:Single);safecall;
		function Get_RotateWithShape:MsoTriState;safecall;
		procedure Set_RotateWithShape(RotateWithShape:MsoTriState);safecall;
		property Parent:IDispatch read Get_Parent;
		property ForeColor:ColorFormat read Get_ForeColor write Set_ForeColor;
		property Obscured:MsoTriState read Get_Obscured write Set_Obscured;
		property OffsetX:Single read Get_OffsetX write Set_OffsetX;
		property OffsetY:Single read Get_OffsetY write Set_OffsetY;
		property Transparency:Single read Get_Transparency write Set_Transparency;
		property Type_:MsoShadowType read Get_type_ write Set_type_;
		property Visible:MsoTriState read Get_Visible write Set_Visible;
		property Style:MsoShadowStyle read Get_Style write Set_Style;
		property Blur:Single read Get_Blur write Set_Blur;
		property Size:Single read Get_Size write Set_Size;
		property RotateWithShape:MsoTriState read Get_RotateWithShape write Set_RotateWithShape;
	end;

	// *********************************************************************//
	// DispIntf:  ShadowFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031B-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShadowFormatDisp=dispinterface
		['{000C031B-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure IncrementOffsetX(Increment:Single);dispid 10;
		procedure IncrementOffsetY(Increment:Single);dispid 11;
		property ForeColor:ColorFormat dispid 100;
		property Obscured:MsoTriState dispid 101;
		property OffsetX:Single dispid 102;
		property OffsetY:Single dispid 103;
		property Transparency:Single dispid 104;
		property Type_:MsoShadowType dispid 105;
		property Visible:MsoTriState dispid 106;
		property Style:MsoShadowStyle dispid 107;
		property Blur:Single dispid 108;
		property Size:Single dispid 109;
		property RotateWithShape:MsoTriState dispid 110;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: TextEffectFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031F-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextEffectFormat=interface(_IMsoDispObj)
		['{000C031F-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure ToggleVerticalText;safecall;
		function Get_Alignment:MsoTextEffectAlignment;safecall;
		procedure Set_Alignment(Alignment:MsoTextEffectAlignment);safecall;
		function Get_FontBold:MsoTriState;safecall;
		procedure Set_FontBold(FontBold:MsoTriState);safecall;
		function Get_FontItalic:MsoTriState;safecall;
		procedure Set_FontItalic(FontItalic:MsoTriState);safecall;
		function Get_FontName:WideString;safecall;
		procedure Set_FontName(const FontName:WideString);safecall;
		function Get_FontSize:Single;safecall;
		procedure Set_FontSize(FontSize:Single);safecall;
		function Get_KernedPairs:MsoTriState;safecall;
		procedure Set_KernedPairs(KernedPairs:MsoTriState);safecall;
		function Get_NormalizedHeight:MsoTriState;safecall;
		procedure Set_NormalizedHeight(NormalizedHeight:MsoTriState);safecall;
		function Get_PresetShape:MsoPresetTextEffectShape;safecall;
		procedure Set_PresetShape(PresetShape:MsoPresetTextEffectShape);safecall;
		function Get_PresetTextEffect:MsoPresetTextEffect;safecall;
		procedure Set_PresetTextEffect(Preset:MsoPresetTextEffect);safecall;
		function Get_RotatedChars:MsoTriState;safecall;
		procedure Set_RotatedChars(RotatedChars:MsoTriState);safecall;
		function Get_Text:WideString;safecall;
		procedure Set_Text(const Text:WideString);safecall;
		function Get_Tracking:Single;safecall;
		procedure Set_Tracking(Tracking:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property Alignment:MsoTextEffectAlignment read Get_Alignment write Set_Alignment;
		property FontBold:MsoTriState read Get_FontBold write Set_FontBold;
		property FontItalic:MsoTriState read Get_FontItalic write Set_FontItalic;
		property FontName:WideString read Get_FontName write Set_FontName;
		property FontSize:Single read Get_FontSize write Set_FontSize;
		property KernedPairs:MsoTriState read Get_KernedPairs write Set_KernedPairs;
		property NormalizedHeight:MsoTriState read Get_NormalizedHeight write Set_NormalizedHeight;
		property PresetShape:MsoPresetTextEffectShape read Get_PresetShape write Set_PresetShape;
		property PresetTextEffect:MsoPresetTextEffect read Get_PresetTextEffect write Set_PresetTextEffect;
		property RotatedChars:MsoTriState read Get_RotatedChars write Set_RotatedChars;
		property Text:WideString read Get_Text write Set_Text;
		property Tracking:Single read Get_Tracking write Set_Tracking;
	end;

	// *********************************************************************//
	// DispIntf:  TextEffectFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C031F-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextEffectFormatDisp=dispinterface
		['{000C031F-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure ToggleVerticalText;dispid 10;
		property Alignment:MsoTextEffectAlignment dispid 100;
		property FontBold:MsoTriState dispid 101;
		property FontItalic:MsoTriState dispid 102;
		property FontName:WideString dispid 103;
		property FontSize:Single dispid 104;
		property KernedPairs:MsoTriState dispid 105;
		property NormalizedHeight:MsoTriState dispid 106;
		property PresetShape:MsoPresetTextEffectShape dispid 107;
		property PresetTextEffect:MsoPresetTextEffect dispid 108;
		property RotatedChars:MsoTriState dispid 109;
		property Text:WideString dispid 110;
		property Tracking:Single dispid 111;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ThreeDFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0321-0000-0000-C000-000000000046}
	// *********************************************************************//
	ThreeDFormat=interface(_IMsoDispObj)
		['{000C0321-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure IncrementRotationX(Increment:Single);safecall;
		procedure IncrementRotationY(Increment:Single);safecall;
		procedure ResetRotation;safecall;
		procedure SetThreeDFormat(PresetThreeDFormat:MsoPresetThreeDFormat);safecall;
		procedure SetExtrusionDirection(PresetExtrusionDirection:MsoPresetExtrusionDirection);safecall;
		function Get_Depth:Single;safecall;
		procedure Set_Depth(Depth:Single);safecall;
		function Get_ExtrusionColor:ColorFormat;safecall;
		function Get_ExtrusionColorType:MsoExtrusionColorType;safecall;
		procedure Set_ExtrusionColorType(ExtrusionColorType:MsoExtrusionColorType);safecall;
		function Get_Perspective:MsoTriState;safecall;
		procedure Set_Perspective(Perspective:MsoTriState);safecall;
		function Get_PresetExtrusionDirection:MsoPresetExtrusionDirection;safecall;
		function Get_PresetLightingDirection:MsoPresetLightingDirection;safecall;
		procedure Set_PresetLightingDirection(PresetLightingDirection:MsoPresetLightingDirection);safecall;
		function Get_PresetLightingSoftness:MsoPresetLightingSoftness;safecall;
		procedure Set_PresetLightingSoftness(PresetLightingSoftness:MsoPresetLightingSoftness);safecall;
		function Get_PresetMaterial:MsoPresetMaterial;safecall;
		procedure Set_PresetMaterial(PresetMaterial:MsoPresetMaterial);safecall;
		function Get_PresetThreeDFormat:MsoPresetThreeDFormat;safecall;
		function Get_RotationX:Single;safecall;
		procedure Set_RotationX(RotationX:Single);safecall;
		function Get_RotationY:Single;safecall;
		procedure Set_RotationY(RotationY:Single);safecall;
		function Get_Visible:MsoTriState;safecall;
		procedure Set_Visible(Visible:MsoTriState);safecall;
		procedure SetPresetCamera(PresetCamera:MsoPresetCamera);safecall;
		procedure IncrementRotationZ(Increment:Single);safecall;
		procedure IncrementRotationHorizontal(Increment:Single);safecall;
		procedure IncrementRotationVertical(Increment:Single);safecall;
		function Get_PresetLighting:MsoLightRigType;safecall;
		procedure Set_PresetLighting(PresetLightRigType:MsoLightRigType);safecall;
		function Get_Z:Single;safecall;
		procedure Set_Z(Z:Single);safecall;
		function Get_BevelTopType:MsoBevelType;safecall;
		procedure Set_BevelTopType(BevelTopType:MsoBevelType);safecall;
		function Get_BevelTopInset:Single;safecall;
		procedure Set_BevelTopInset(BevelTopInset:Single);safecall;
		function Get_BevelTopDepth:Single;safecall;
		procedure Set_BevelTopDepth(BevelTopDepth:Single);safecall;
		function Get_BevelBottomType:MsoBevelType;safecall;
		procedure Set_BevelBottomType(BevelBottomType:MsoBevelType);safecall;
		function Get_BevelBottomInset:Single;safecall;
		procedure Set_BevelBottomInset(BevelBottomInset:Single);safecall;
		function Get_BevelBottomDepth:Single;safecall;
		procedure Set_BevelBottomDepth(BevelBottomDepth:Single);safecall;
		function Get_PresetCamera:MsoPresetCamera;safecall;
		function Get_RotationZ:Single;safecall;
		procedure Set_RotationZ(RotationZ:Single);safecall;
		function Get_ContourWidth:Single;safecall;
		procedure Set_ContourWidth(Width:Single);safecall;
		function Get_ContourColor:ColorFormat;safecall;
		function Get_FieldOfView:Single;safecall;
		procedure Set_FieldOfView(FOV:Single);safecall;
		function Get_ProjectText:MsoTriState;safecall;
		procedure Set_ProjectText(ProjectText:MsoTriState);safecall;
		function Get_LightAngle:Single;safecall;
		procedure Set_LightAngle(LightAngle:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property Depth:Single read Get_Depth write Set_Depth;
		property ExtrusionColor:ColorFormat read Get_ExtrusionColor;
		property ExtrusionColorType:MsoExtrusionColorType read Get_ExtrusionColorType write Set_ExtrusionColorType;
		property Perspective:MsoTriState read Get_Perspective write Set_Perspective;
		property PresetExtrusionDirection:MsoPresetExtrusionDirection read Get_PresetExtrusionDirection;
		property PresetLightingDirection:MsoPresetLightingDirection read Get_PresetLightingDirection
			write Set_PresetLightingDirection;
		property PresetLightingSoftness:MsoPresetLightingSoftness read Get_PresetLightingSoftness
			write Set_PresetLightingSoftness;
		property PresetMaterial:MsoPresetMaterial read Get_PresetMaterial write Set_PresetMaterial;
		property PresetThreeDFormat:MsoPresetThreeDFormat read Get_PresetThreeDFormat;
		property RotationX:Single read Get_RotationX write Set_RotationX;
		property RotationY:Single read Get_RotationY write Set_RotationY;
		property Visible:MsoTriState read Get_Visible write Set_Visible;
		property PresetLighting:MsoLightRigType read Get_PresetLighting write Set_PresetLighting;
		property Z:Single read Get_Z write Set_Z;
		property BevelTopType:MsoBevelType read Get_BevelTopType write Set_BevelTopType;
		property BevelTopInset:Single read Get_BevelTopInset write Set_BevelTopInset;
		property BevelTopDepth:Single read Get_BevelTopDepth write Set_BevelTopDepth;
		property BevelBottomType:MsoBevelType read Get_BevelBottomType write Set_BevelBottomType;
		property BevelBottomInset:Single read Get_BevelBottomInset write Set_BevelBottomInset;
		property BevelBottomDepth:Single read Get_BevelBottomDepth write Set_BevelBottomDepth;
		property PresetCamera:MsoPresetCamera read Get_PresetCamera;
		property RotationZ:Single read Get_RotationZ write Set_RotationZ;
		property ContourWidth:Single read Get_ContourWidth write Set_ContourWidth;
		property ContourColor:ColorFormat read Get_ContourColor;
		property FieldOfView:Single read Get_FieldOfView write Set_FieldOfView;
		property ProjectText:MsoTriState read Get_ProjectText write Set_ProjectText;
		property LightAngle:Single read Get_LightAngle write Set_LightAngle;
	end;

	// *********************************************************************//
	// DispIntf:  ThreeDFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0321-0000-0000-C000-000000000046}
	// *********************************************************************//
	ThreeDFormatDisp=dispinterface
		['{000C0321-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure IncrementRotationX(Increment:Single);dispid 10;
		procedure IncrementRotationY(Increment:Single);dispid 11;
		procedure ResetRotation;dispid 12;
		procedure SetThreeDFormat(PresetThreeDFormat:MsoPresetThreeDFormat);dispid 13;
		procedure SetExtrusionDirection(PresetExtrusionDirection:MsoPresetExtrusionDirection);dispid 14;
		property Depth:Single dispid 100;
		property ExtrusionColor:ColorFormat readonly dispid 101;
		property ExtrusionColorType:MsoExtrusionColorType dispid 102;
		property Perspective:MsoTriState dispid 103;
		property PresetExtrusionDirection:MsoPresetExtrusionDirection readonly dispid 104;
		property PresetLightingDirection:MsoPresetLightingDirection dispid 105;
		property PresetLightingSoftness:MsoPresetLightingSoftness dispid 106;
		property PresetMaterial:MsoPresetMaterial dispid 107;
		property PresetThreeDFormat:MsoPresetThreeDFormat readonly dispid 108;
		property RotationX:Single dispid 109;
		property RotationY:Single dispid 110;
		property Visible:MsoTriState dispid 111;
		procedure SetPresetCamera(PresetCamera:MsoPresetCamera);dispid 15;
		procedure IncrementRotationZ(Increment:Single);dispid 16;
		procedure IncrementRotationHorizontal(Increment:Single);dispid 17;
		procedure IncrementRotationVertical(Increment:Single);dispid 18;
		property PresetLighting:MsoLightRigType dispid 112;
		property Z:Single dispid 113;
		property BevelTopType:MsoBevelType dispid 114;
		property BevelTopInset:Single dispid 115;
		property BevelTopDepth:Single dispid 116;
		property BevelBottomType:MsoBevelType dispid 117;
		property BevelBottomInset:Single dispid 118;
		property BevelBottomDepth:Single dispid 119;
		property PresetCamera:MsoPresetCamera readonly dispid 120;
		property RotationZ:Single dispid 121;
		property ContourWidth:Single dispid 122;
		property ContourColor:ColorFormat readonly dispid 123;
		property FieldOfView:Single dispid 124;
		property ProjectText:MsoTriState dispid 125;
		property LightAngle:Single dispid 126;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: FillFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0314-0000-0000-C000-000000000046}
	// *********************************************************************//
	FillFormat=interface(_IMsoDispObj)
		['{000C0314-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		procedure Background;safecall;
		procedure OneColorGradient(Style:MsoGradientStyle;Variant:SYSINT;Degree:Single);safecall;
		procedure Patterned(Pattern:MsoPatternType);safecall;
		procedure PresetGradient(Style:MsoGradientStyle;Variant:SYSINT;PresetGradientType:MsoPresetGradientType);safecall;
		procedure PresetTextured(PresetTexture:MsoPresetTexture);safecall;
		procedure Solid;safecall;
		procedure TwoColorGradient(Style:MsoGradientStyle;Variant:SYSINT);safecall;
		procedure UserPicture(const PictureFile:WideString);safecall;
		procedure UserTextured(const TextureFile:WideString);safecall;
		function Get_BackColor:ColorFormat;safecall;
		procedure Set_BackColor(const BackColor:ColorFormat);safecall;
		function Get_ForeColor:ColorFormat;safecall;
		procedure Set_ForeColor(const ForeColor:ColorFormat);safecall;
		function Get_GradientColorType:MsoGradientColorType;safecall;
		function Get_GradientDegree:Single;safecall;
		function Get_GradientStyle:MsoGradientStyle;safecall;
		function Get_GradientVariant:SYSINT;safecall;
		function Get_Pattern:MsoPatternType;safecall;
		function Get_PresetGradientType:MsoPresetGradientType;safecall;
		function Get_PresetTexture:MsoPresetTexture;safecall;
		function Get_TextureName:WideString;safecall;
		function Get_TextureType:MsoTextureType;safecall;
		function Get_Transparency:Single;safecall;
		procedure Set_Transparency(Transparency:Single);safecall;
		function Get_type_:MsoFillType;safecall;
		function Get_Visible:MsoTriState;safecall;
		procedure Set_Visible(Visible:MsoTriState);safecall;
		function Get_GradientStops:GradientStops;safecall;
		function Get_TextureOffsetX:Single;safecall;
		procedure Set_TextureOffsetX(TextureOffsetX:Single);safecall;
		function Get_TextureOffsetY:Single;safecall;
		procedure Set_TextureOffsetY(TextureOffsetY:Single);safecall;
		function Get_TextureAlignment:MsoTextureAlignment;safecall;
		procedure Set_TextureAlignment(TextureAlignment:MsoTextureAlignment);safecall;
		function Get_TextureHorizontalScale:Single;safecall;
		procedure Set_TextureHorizontalScale(HorizontalScale:Single);safecall;
		function Get_TextureVerticalScale:Single;safecall;
		procedure Set_TextureVerticalScale(VerticalScale:Single);safecall;
		function Get_TextureTile:MsoTriState;safecall;
		procedure Set_TextureTile(TextureTile:MsoTriState);safecall;
		function Get_RotateWithObject:MsoTriState;safecall;
		procedure Set_RotateWithObject(RotateWithObject:MsoTriState);safecall;
		function Get_PictureEffects:PictureEffects;safecall;
		function Get_GradientAngle:Single;safecall;
		procedure Set_GradientAngle(GradientAngle:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property BackColor:ColorFormat read Get_BackColor write Set_BackColor;
		property ForeColor:ColorFormat read Get_ForeColor write Set_ForeColor;
		property GradientColorType:MsoGradientColorType read Get_GradientColorType;
		property GradientDegree:Single read Get_GradientDegree;
		property GradientStyle:MsoGradientStyle read Get_GradientStyle;
		property GradientVariant:SYSINT read Get_GradientVariant;
		property Pattern:MsoPatternType read Get_Pattern;
		property PresetGradientType:MsoPresetGradientType read Get_PresetGradientType;
		property PresetTexture:MsoPresetTexture read Get_PresetTexture;
		property TextureName:WideString read Get_TextureName;
		property TextureType:MsoTextureType read Get_TextureType;
		property Transparency:Single read Get_Transparency write Set_Transparency;
		property Type_:MsoFillType read Get_type_;
		property Visible:MsoTriState read Get_Visible write Set_Visible;
		property GradientStops:GradientStops read Get_GradientStops;
		property TextureOffsetX:Single read Get_TextureOffsetX write Set_TextureOffsetX;
		property TextureOffsetY:Single read Get_TextureOffsetY write Set_TextureOffsetY;
		property TextureAlignment:MsoTextureAlignment read Get_TextureAlignment write Set_TextureAlignment;
		property TextureHorizontalScale:Single read Get_TextureHorizontalScale write Set_TextureHorizontalScale;
		property TextureVerticalScale:Single read Get_TextureVerticalScale write Set_TextureVerticalScale;
		property TextureTile:MsoTriState read Get_TextureTile write Set_TextureTile;
		property RotateWithObject:MsoTriState read Get_RotateWithObject write Set_RotateWithObject;
		property PictureEffects:PictureEffects read Get_PictureEffects;
		property GradientAngle:Single read Get_GradientAngle write Set_GradientAngle;
	end;

	// *********************************************************************//
	// DispIntf:  FillFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0314-0000-0000-C000-000000000046}
	// *********************************************************************//
	FillFormatDisp=dispinterface
		['{000C0314-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		procedure Background;dispid 10;
		procedure OneColorGradient(Style:MsoGradientStyle;Variant:SYSINT;Degree:Single);dispid 11;
		procedure Patterned(Pattern:MsoPatternType);dispid 12;
		procedure PresetGradient(Style:MsoGradientStyle;Variant:SYSINT;PresetGradientType:MsoPresetGradientType);dispid 13;
		procedure PresetTextured(PresetTexture:MsoPresetTexture);dispid 14;
		procedure Solid;dispid 15;
		procedure TwoColorGradient(Style:MsoGradientStyle;Variant:SYSINT);dispid 16;
		procedure UserPicture(const PictureFile:WideString);dispid 17;
		procedure UserTextured(const TextureFile:WideString);dispid 18;
		property BackColor:ColorFormat dispid 100;
		property ForeColor:ColorFormat dispid 101;
		property GradientColorType:MsoGradientColorType readonly dispid 102;
		property GradientDegree:Single readonly dispid 103;
		property GradientStyle:MsoGradientStyle readonly dispid 104;
		property GradientVariant:SYSINT readonly dispid 105;
		property Pattern:MsoPatternType readonly dispid 106;
		property PresetGradientType:MsoPresetGradientType readonly dispid 107;
		property PresetTexture:MsoPresetTexture readonly dispid 108;
		property TextureName:WideString readonly dispid 109;
		property TextureType:MsoTextureType readonly dispid 110;
		property Transparency:Single dispid 111;
		property Type_:MsoFillType readonly dispid 112;
		property Visible:MsoTriState dispid 113;
		property GradientStops:GradientStops readonly dispid 114;
		property TextureOffsetX:Single dispid 115;
		property TextureOffsetY:Single dispid 116;
		property TextureAlignment:MsoTextureAlignment dispid 117;
		property TextureHorizontalScale:Single dispid 118;
		property TextureVerticalScale:Single dispid 119;
		property TextureTile:MsoTriState dispid 120;
		property RotateWithObject:MsoTriState dispid 121;
		property PictureEffects:PictureEffects readonly dispid 122;
		property GradientAngle:Single dispid 123;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: DiagramNodes
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C036E-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNodes=interface(_IMsoDispObj)
		['{000C036E-0000-0000-C000-000000000046}']
		function Get__NewEnum:IUnknown;safecall;
		function Item(Index:OleVariant):DiagramNode;safecall;
		procedure SelectAll;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_Count:SYSINT;safecall;
		property _NewEnum:IUnknown read Get__NewEnum;
		property Parent:IDispatch read Get_Parent;
		property Count:SYSINT read Get_Count;
	end;

	// *********************************************************************//
	// DispIntf:  DiagramNodesDisp
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C036E-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNodesDisp=dispinterface
		['{000C036E-0000-0000-C000-000000000046}']
		property _NewEnum:IUnknown readonly dispid-4;
		function Item(Index:OleVariant):DiagramNode;dispid 0;
		procedure SelectAll;dispid 10;
		property Parent:IDispatch readonly dispid 100;
		property Count:SYSINT readonly dispid 101;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: DiagramNodeChildren
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C036F-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNodeChildren=interface(_IMsoDispObj)
		['{000C036F-0000-0000-C000-000000000046}']
		function Get__NewEnum:IUnknown;safecall;
		function Item(Index:OleVariant):DiagramNode;safecall;
		function AddNode(Index:OleVariant;nodeType:MsoDiagramNodeType):DiagramNode;safecall;
		procedure SelectAll;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_Count:SYSINT;safecall;
		function Get_FirstChild:DiagramNode;safecall;
		function Get_LastChild:DiagramNode;safecall;
		property _NewEnum:IUnknown read Get__NewEnum;
		property Parent:IDispatch read Get_Parent;
		property Count:SYSINT read Get_Count;
		property FirstChild:DiagramNode read Get_FirstChild;
		property LastChild:DiagramNode read Get_LastChild;
	end;

	// *********************************************************************//
	// DispIntf:  DiagramNodeChildrenDisp
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C036F-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNodeChildrenDisp=dispinterface
		['{000C036F-0000-0000-C000-000000000046}']
		property _NewEnum:IUnknown readonly dispid-4;
		function Item(Index:OleVariant):DiagramNode;dispid 0;
		function AddNode(Index:OleVariant;nodeType:MsoDiagramNodeType):DiagramNode;dispid 10;
		procedure SelectAll;dispid 11;
		property Parent:IDispatch readonly dispid 100;
		property Count:SYSINT readonly dispid 101;
		property FirstChild:DiagramNode readonly dispid 103;
		property LastChild:DiagramNode readonly dispid 104;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: DiagramNode
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0370-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNode=interface(_IMsoDispObj)
		['{000C0370-0000-0000-C000-000000000046}']
		function AddNode(pos:MsoRelativeNodePosition;nodeType:MsoDiagramNodeType):DiagramNode;safecall;
		procedure Delete;safecall;
		procedure MoveNode(const pTargetNode:DiagramNode;pos:MsoRelativeNodePosition);safecall;
		procedure ReplaceNode(const pTargetNode:DiagramNode);safecall;
		procedure SwapNode(const pTargetNode:DiagramNode;swapChildren:WordBool);safecall;
		function CloneNode(copyChildren:WordBool;const pTargetNode:DiagramNode;pos:MsoRelativeNodePosition)
			:DiagramNode;safecall;
		procedure TransferChildren(const pReceivingNode:DiagramNode);safecall;
		function NextNode:DiagramNode;safecall;
		function PrevNode:DiagramNode;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_Children:DiagramNodeChildren;safecall;
		function Get_Shape:Shape;safecall;
		function Get_Root:DiagramNode;safecall;
		function Get_Diagram:IMsoDiagram;safecall;
		function Get_Layout:MsoOrgChartLayoutType;safecall;
		procedure Set_Layout(pdgmType:MsoOrgChartLayoutType);safecall;
		function Get_TextShape:Shape;safecall;
		property Parent:IDispatch read Get_Parent;
		property Children:DiagramNodeChildren read Get_Children;
		property Shape:Shape read Get_Shape;
		property Root:DiagramNode read Get_Root;
		property Diagram:IMsoDiagram read Get_Diagram;
		property Layout:MsoOrgChartLayoutType read Get_Layout write Set_Layout;
		property TextShape:Shape read Get_TextShape;
	end;

	// *********************************************************************//
	// DispIntf:  DiagramNodeDisp
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0370-0000-0000-C000-000000000046}
	// *********************************************************************//
	DiagramNodeDisp=dispinterface
		['{000C0370-0000-0000-C000-000000000046}']
		function AddNode(pos:MsoRelativeNodePosition;nodeType:MsoDiagramNodeType):DiagramNode;dispid 10;
		procedure Delete;dispid 11;
		procedure MoveNode(const pTargetNode:DiagramNode;pos:MsoRelativeNodePosition);dispid 12;
		procedure ReplaceNode(const pTargetNode:DiagramNode);dispid 13;
		procedure SwapNode(const pTargetNode:DiagramNode;swapChildren:WordBool);dispid 14;
		function CloneNode(copyChildren:WordBool;const pTargetNode:DiagramNode;pos:MsoRelativeNodePosition)
			:DiagramNode;dispid 15;
		procedure TransferChildren(const pReceivingNode:DiagramNode);dispid 16;
		function NextNode:DiagramNode;dispid 17;
		function PrevNode:DiagramNode;dispid 18;
		property Parent:IDispatch readonly dispid 100;
		property Children:DiagramNodeChildren readonly dispid 101;
		property Shape:Shape readonly dispid 102;
		property Root:DiagramNode readonly dispid 103;
		property Diagram:IMsoDiagram readonly dispid 104;
		property Layout:MsoOrgChartLayoutType dispid 105;
		property TextShape:Shape readonly dispid 106;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: IRTDUpdateEvent
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {A43788C1-D91B-11D3-8F39-00C04F3651B8}
	// *********************************************************************//
	IRTDUpdateEvent=interface(IDispatch)
		['{A43788C1-D91B-11D3-8F39-00C04F3651B8}']
		procedure UpdateNotify;safecall;
		function Get_HeartbeatInterval:Integer;safecall;
		procedure Set_HeartbeatInterval(plRetVal:Integer);safecall;
		procedure Disconnect;safecall;
		property HeartbeatInterval:Integer read Get_HeartbeatInterval write Set_HeartbeatInterval;
	end;

	// *********************************************************************//
	// DispIntf:  IRTDUpdateEventDisp
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {A43788C1-D91B-11D3-8F39-00C04F3651B8}
	// *********************************************************************//
	IRTDUpdateEventDisp=dispinterface
		['{A43788C1-D91B-11D3-8F39-00C04F3651B8}']
		procedure UpdateNotify;dispid 10;
		property HeartbeatInterval:Integer dispid 11;
		procedure Disconnect;dispid 12;
	end;

	// *********************************************************************//
	// Interface: IRtdServer
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {EC0E6191-DB51-11D3-8F3E-00C04F3651B8}
	// *********************************************************************//
	IRtdServer=interface(IDispatch)
		['{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}']
		function ServerStart(const CallbackObject:IRTDUpdateEvent):Integer;safecall;
		function ConnectData(TopicID:Integer;var Strings:PSafeArray;var GetNewValues:WordBool):OleVariant;safecall;
		function RefreshData(var TopicCount:Integer):PSafeArray;safecall;
		procedure DisconnectData(TopicID:Integer);safecall;
		function Heartbeat:Integer;safecall;
		procedure ServerTerminate;safecall;
	end;

	// *********************************************************************//
	// DispIntf:  IRtdServerDisp
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {EC0E6191-DB51-11D3-8F3E-00C04F3651B8}
	// *********************************************************************//
	IRtdServerDisp=dispinterface
		['{EC0E6191-DB51-11D3-8F3E-00C04F3651B8}']
		function ServerStart(const CallbackObject:IRTDUpdateEvent):Integer;dispid 10;
		function ConnectData(TopicID:Integer;var Strings: { NOT_OLEAUTO(PSafeArray) } OleVariant;var GetNewValues:WordBool)
			:OleVariant;dispid 11;
		function RefreshData(var TopicCount:Integer): { NOT_OLEAUTO(PSafeArray) } OleVariant;dispid 12;
		procedure DisconnectData(TopicID:Integer);dispid 13;
		function Heartbeat:Integer;dispid 14;
		procedure ServerTerminate;dispid 15;
	end;

	// *********************************************************************//
	// Interface: TextFrame2
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0398-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextFrame2=interface(_IMsoDispObj)
		['{000C0398-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_MarginBottom:Single;safecall;
		procedure Set_MarginBottom(MarginBottom:Single);safecall;
		function Get_MarginLeft:Single;safecall;
		procedure Set_MarginLeft(MarginLeft:Single);safecall;
		function Get_MarginRight:Single;safecall;
		procedure Set_MarginRight(MarginRight:Single);safecall;
		function Get_MarginTop:Single;safecall;
		procedure Set_MarginTop(MarginTop:Single);safecall;
		function Get_Orientation:MsoTextOrientation;safecall;
		procedure Set_Orientation(Orientation:MsoTextOrientation);safecall;
		function Get_HorizontalAnchor:MsoHorizontalAnchor;safecall;
		procedure Set_HorizontalAnchor(HorizontalAnchor:MsoHorizontalAnchor);safecall;
		function Get_VerticalAnchor:MsoVerticalAnchor;safecall;
		procedure Set_VerticalAnchor(VerticalAnchor:MsoVerticalAnchor);safecall;
		function Get_PathFormat:MsoPathFormat;safecall;
		procedure Set_PathFormat(PathFormat:MsoPathFormat);safecall;
		function Get_WarpFormat:MsoWarpFormat;safecall;
		procedure Set_WarpFormat(WarpFormat:MsoWarpFormat);safecall;
		function Get_WordArtformat:MsoPresetTextEffect;safecall;
		procedure Set_WordArtformat(WordArtformat:MsoPresetTextEffect);safecall;
		function Get_WordWrap:MsoTriState;safecall;
		procedure Set_WordWrap(WordWrap:MsoTriState);safecall;
		function Get_AutoSize:MsoAutoSize;safecall;
		procedure Set_AutoSize(AutoSize:MsoAutoSize);safecall;
		function Get_ThreeD:ThreeDFormat;safecall;
		function Get_HasText:MsoTriState;safecall;
		function Get_TextRange:TextRange2;safecall;
		function Get_Column:TextColumn2;safecall;
		function Get_Ruler:Ruler2;safecall;
		procedure DeleteText;safecall;
		function Get_NoTextRotation:MsoTriState;safecall;
		procedure Set_NoTextRotation(NoTextRotation:MsoTriState);safecall;
		property Parent:IDispatch read Get_Parent;
		property MarginBottom:Single read Get_MarginBottom write Set_MarginBottom;
		property MarginLeft:Single read Get_MarginLeft write Set_MarginLeft;
		property MarginRight:Single read Get_MarginRight write Set_MarginRight;
		property MarginTop:Single read Get_MarginTop write Set_MarginTop;
		property Orientation:MsoTextOrientation read Get_Orientation write Set_Orientation;
		property HorizontalAnchor:MsoHorizontalAnchor read Get_HorizontalAnchor write Set_HorizontalAnchor;
		property VerticalAnchor:MsoVerticalAnchor read Get_VerticalAnchor write Set_VerticalAnchor;
		property PathFormat:MsoPathFormat read Get_PathFormat write Set_PathFormat;
		property WarpFormat:MsoWarpFormat read Get_WarpFormat write Set_WarpFormat;
		property WordArtformat:MsoPresetTextEffect read Get_WordArtformat write Set_WordArtformat;
		property WordWrap:MsoTriState read Get_WordWrap write Set_WordWrap;
		property AutoSize:MsoAutoSize read Get_AutoSize write Set_AutoSize;
		property ThreeD:ThreeDFormat read Get_ThreeD;
		property HasText:MsoTriState read Get_HasText;
		property TextRange:TextRange2 read Get_TextRange;
		property Column:TextColumn2 read Get_Column;
		property Ruler:Ruler2 read Get_Ruler;
		property NoTextRotation:MsoTriState read Get_NoTextRotation write Set_NoTextRotation;
	end;

	// *********************************************************************//
	// DispIntf:  TextFrame2Disp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C0398-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextFrame2Disp=dispinterface
		['{000C0398-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property MarginBottom:Single dispid 100;
		property MarginLeft:Single dispid 101;
		property MarginRight:Single dispid 102;
		property MarginTop:Single dispid 103;
		property Orientation:MsoTextOrientation dispid 104;
		property HorizontalAnchor:MsoHorizontalAnchor dispid 105;
		property VerticalAnchor:MsoVerticalAnchor dispid 106;
		property PathFormat:MsoPathFormat dispid 107;
		property WarpFormat:MsoWarpFormat dispid 108;
		property WordArtformat:MsoPresetTextEffect dispid 109;
		property WordWrap:MsoTriState dispid 110;
		property AutoSize:MsoAutoSize dispid 111;
		property ThreeD:ThreeDFormat readonly dispid 112;
		property HasText:MsoTriState readonly dispid 113;
		property TextRange:TextRange2 readonly dispid 114;
		property Column:TextColumn2 readonly dispid 115;
		property Ruler:Ruler2 readonly dispid 116;
		procedure DeleteText;dispid 117;
		property NoTextRotation:MsoTriState dispid 118;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: Model3DFormat
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C03D8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Model3DFormat=interface(_IMsoDispObj)
		['{000C03D8-0000-0000-C000-000000000046}']
		function Get_Parent:IDispatch;safecall;
		function Get_AutoFit:MsoTriState;safecall;
		procedure Set_AutoFit(AutoFit:MsoTriState);safecall;
		function Get_RotationX:Single;safecall;
		procedure Set_RotationX(RotationX:Single);safecall;
		function Get_RotationY:Single;safecall;
		procedure Set_RotationY(RotationY:Single);safecall;
		function Get_RotationZ:Single;safecall;
		procedure Set_RotationZ(RotationZ:Single);safecall;
		function Get_FieldOfView:Single;safecall;
		procedure Set_FieldOfView(FOV:Single);safecall;
		function Get_CameraPositionX:Single;safecall;
		procedure Set_CameraPositionX(CameraPositionX:Single);safecall;
		function Get_CameraPositionY:Single;safecall;
		procedure Set_CameraPositionY(CameraPositionY:Single);safecall;
		function Get_CameraPositionZ:Single;safecall;
		procedure Set_CameraPositionZ(CameraPositionZ:Single);safecall;
		function Get_LookAtPointX:Single;safecall;
		procedure Set_LookAtPointX(LookAtPointX:Single);safecall;
		function Get_LookAtPointY:Single;safecall;
		procedure Set_LookAtPointY(LookAtPointY:Single);safecall;
		function Get_LookAtPointZ:Single;safecall;
		procedure Set_LookAtPointZ(LookAtPointZ:Single);safecall;
		procedure ResetModel(ResetSize:WordBool);safecall;
		procedure IncrementRotationX(Increment:Single);safecall;
		procedure IncrementRotationY(Increment:Single);safecall;
		procedure IncrementRotationZ(Increment:Single);safecall;
		property Parent:IDispatch read Get_Parent;
		property AutoFit:MsoTriState read Get_AutoFit write Set_AutoFit;
		property RotationX:Single read Get_RotationX write Set_RotationX;
		property RotationY:Single read Get_RotationY write Set_RotationY;
		property RotationZ:Single read Get_RotationZ write Set_RotationZ;
		property FieldOfView:Single read Get_FieldOfView write Set_FieldOfView;
		property CameraPositionX:Single read Get_CameraPositionX write Set_CameraPositionX;
		property CameraPositionY:Single read Get_CameraPositionY write Set_CameraPositionY;
		property CameraPositionZ:Single read Get_CameraPositionZ write Set_CameraPositionZ;
		property LookAtPointX:Single read Get_LookAtPointX write Set_LookAtPointX;
		property LookAtPointY:Single read Get_LookAtPointY write Set_LookAtPointY;
		property LookAtPointZ:Single read Get_LookAtPointZ write Set_LookAtPointZ;
	end;

	// *********************************************************************//
	// DispIntf:  Model3DFormatDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000C03D8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Model3DFormatDisp=dispinterface
		['{000C03D8-0000-0000-C000-000000000046}']
		property Parent:IDispatch readonly dispid 1;
		property AutoFit:MsoTriState dispid 100;
		property RotationX:Single dispid 101;
		property RotationY:Single dispid 102;
		property RotationZ:Single dispid 103;
		property FieldOfView:Single dispid 104;
		property CameraPositionX:Single dispid 105;
		property CameraPositionY:Single dispid 106;
		property CameraPositionZ:Single dispid 107;
		property LookAtPointX:Single dispid 108;
		property LookAtPointY:Single dispid 109;
		property LookAtPointZ:Single dispid 110;
		procedure ResetModel(ResetSize:WordBool);dispid 111;
		procedure IncrementRotationX(Increment:Single);dispid 112;
		procedure IncrementRotationY(Increment:Single);dispid 113;
		procedure IncrementRotationZ(Increment:Single);dispid 114;
		property Application:IDispatch readonly dispid 1610743808;
		property Creator:Integer readonly dispid 1610743809;
	end;

	// *********************************************************************//
	// Interface: ExcelIFont
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002084D-0001-0000-C000-000000000046}
	// *********************************************************************//
	ExcelIFont=interface(IDispatch)
		['{0002084D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Background(out RHS:OleVariant):HResult;stdcall;
		function Set_Background(RHS:OleVariant):HResult;stdcall;
		function Get_Bold(out RHS:OleVariant):HResult;stdcall;
		function Set_Bold(RHS:OleVariant):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:OleVariant):HResult;stdcall;
		function Set_ColorIndex(RHS:OleVariant):HResult;stdcall;
		function Get_FontStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_FontStyle(RHS:OleVariant):HResult;stdcall;
		function Get_Italic(out RHS:OleVariant):HResult;stdcall;
		function Set_Italic(RHS:OleVariant):HResult;stdcall;
		function Get_Name(out RHS:OleVariant):HResult;stdcall;
		function Set_Name(RHS:OleVariant):HResult;stdcall;
		function Get_OutlineFont(out RHS:OleVariant):HResult;stdcall;
		function Set_OutlineFont(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:OleVariant):HResult;stdcall;
		function Set_Shadow(RHS:OleVariant):HResult;stdcall;
		function Get_Size(out RHS:OleVariant):HResult;stdcall;
		function Set_Size(RHS:OleVariant):HResult;stdcall;
		function Get_Strikethrough(out RHS:OleVariant):HResult;stdcall;
		function Set_Strikethrough(RHS:OleVariant):HResult;stdcall;
		function Get_Subscript(out RHS:OleVariant):HResult;stdcall;
		function Set_Subscript(RHS:OleVariant):HResult;stdcall;
		function Get_Superscript(out RHS:OleVariant):HResult;stdcall;
		function Set_Superscript(RHS:OleVariant):HResult;stdcall;
		function Get_Underline(out RHS:OleVariant):HResult;stdcall;
		function Set_Underline(RHS:OleVariant):HResult;stdcall;
		function Get_ThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_ThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
		function Get_ThemeFont(out RHS:XlThemeFont):HResult;stdcall;
		function Set_ThemeFont(RHS:XlThemeFont):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWindow
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020893-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWindow=interface(IDispatch)
		['{00020893-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate(out RHS:OleVariant):HResult;stdcall;
		function ActivateNext(out RHS:OleVariant):HResult;stdcall;
		function ActivatePrevious(out RHS:OleVariant):HResult;stdcall;
		function Get_ActiveCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_ActiveChart(out RHS:ExcelChart):HResult;stdcall;
		function Get_ActivePane(out RHS:Pane):HResult;stdcall;
		function Get_ActiveSheet(out RHS:IDispatch):HResult;stdcall;
		function Get_Caption(out RHS:OleVariant):HResult;stdcall;
		function Set_Caption(RHS:OleVariant):HResult;stdcall;
		function Close(SaveChanges:OleVariant;Filename:OleVariant;RouteWorkbook:OleVariant;out RHS:WordBool)
			:HResult;stdcall;
		function Get_DisplayFormulas(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayFormulas(RHS:WordBool):HResult;stdcall;
		function Get_DisplayGridlines(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayGridlines(RHS:WordBool):HResult;stdcall;
		function Get_DisplayHeadings(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayHeadings(RHS:WordBool):HResult;stdcall;
		function Get_DisplayHorizontalScrollBar(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayHorizontalScrollBar(RHS:WordBool):HResult;stdcall;
		function Get_DisplayOutline(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayOutline(RHS:WordBool):HResult;stdcall;
		function Get__DisplayRightToLeft(out RHS:WordBool):HResult;stdcall;
		function Set__DisplayRightToLeft(RHS:WordBool):HResult;stdcall;
		function Get_DisplayVerticalScrollBar(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayVerticalScrollBar(RHS:WordBool):HResult;stdcall;
		function Get_DisplayWorkbookTabs(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayWorkbookTabs(RHS:WordBool):HResult;stdcall;
		function Get_DisplayZeros(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayZeros(RHS:WordBool):HResult;stdcall;
		function Get_EnableResize(out RHS:WordBool):HResult;stdcall;
		function Set_EnableResize(RHS:WordBool):HResult;stdcall;
		function Get_FreezePanes(out RHS:WordBool):HResult;stdcall;
		function Set_FreezePanes(RHS:WordBool):HResult;stdcall;
		function Get_GridlineColor(out RHS:Integer):HResult;stdcall;
		function Set_GridlineColor(RHS:Integer):HResult;stdcall;
		function Get_GridlineColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_GridlineColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function LargeScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function NewWindow(out RHS:Window):HResult;stdcall;
		function Get_OnWindow(out RHS:WideString):HResult;stdcall;
		function Set_OnWindow(const RHS:WideString):HResult;stdcall;
		function Get_Panes(out RHS:Panes):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_RangeSelection(out RHS:ExcelRange):HResult;stdcall;
		function Get_ScrollColumn(out RHS:Integer):HResult;stdcall;
		function Set_ScrollColumn(RHS:Integer):HResult;stdcall;
		function Get_ScrollRow(out RHS:Integer):HResult;stdcall;
		function Set_ScrollRow(RHS:Integer):HResult;stdcall;
		function ScrollWorkbookTabs(Sheets:OleVariant;Position:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_SelectedSheets(out RHS:Sheets):HResult;stdcall;
		function Get_Selection(out RHS:IDispatch):HResult;stdcall;
		function SmallScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_Split(out RHS:WordBool):HResult;stdcall;
		function Set_Split(RHS:WordBool):HResult;stdcall;
		function Get_SplitColumn(out RHS:Integer):HResult;stdcall;
		function Set_SplitColumn(RHS:Integer):HResult;stdcall;
		function Get_SplitHorizontal(out RHS:Double):HResult;stdcall;
		function Set_SplitHorizontal(RHS:Double):HResult;stdcall;
		function Get_SplitRow(out RHS:Integer):HResult;stdcall;
		function Set_SplitRow(RHS:Integer):HResult;stdcall;
		function Get_SplitVertical(out RHS:Double):HResult;stdcall;
		function Set_SplitVertical(RHS:Double):HResult;stdcall;
		function Get_TabRatio(out RHS:Double):HResult;stdcall;
		function Set_TabRatio(RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_type_(out RHS:XlWindowType):HResult;stdcall;
		function Get_UsableHeight(out RHS:Double):HResult;stdcall;
		function Get_UsableWidth(out RHS:Double):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_VisibleRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_WindowNumber(out RHS:Integer):HResult;stdcall;
		function Get_WindowState(out RHS:XlWindowState):HResult;stdcall;
		function Set_WindowState(RHS:XlWindowState):HResult;stdcall;
		function Get_Zoom(out RHS:OleVariant):HResult;stdcall;
		function Set_Zoom(RHS:OleVariant):HResult;stdcall;
		function Get_View(out RHS:XlWindowView):HResult;stdcall;
		function Set_View(RHS:XlWindowView):HResult;stdcall;
		function Get_DisplayRightToLeft(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayRightToLeft(RHS:WordBool):HResult;stdcall;
		function PointsToScreenPixelsX(Points:Integer;out RHS:Integer):HResult;stdcall;
		function PointsToScreenPixelsY(Points:Integer;out RHS:Integer):HResult;stdcall;
		function RangeFromPoint(x:Integer;y:Integer;out RHS:IDispatch):HResult;stdcall;
		function ScrollIntoView(Left:Integer;Top:Integer;Width:Integer;Height:Integer;Start:OleVariant):HResult;stdcall;
		function Get_SheetViews(out RHS:SheetViews):HResult;stdcall;
		function Get_ActiveSheetView(out RHS:IDispatch):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_DisplayRuler(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayRuler(RHS:WordBool):HResult;stdcall;
		function Get_AutoFilterDateGrouping(out RHS:WordBool):HResult;stdcall;
		function Set_AutoFilterDateGrouping(RHS:WordBool):HResult;stdcall;
		function Get_DisplayWhitespace(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayWhitespace(RHS:WordBool):HResult;stdcall;
		function Get_HWND_(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWindows
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020892-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWindows=interface(IDispatch)
		['{00020892-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Arrange(ArrangeStyle:XlArrangeStyle;ActiveWorkbook:OleVariant;SyncHorizontal:OleVariant;
			SyncVertical:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Window):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Window):HResult;stdcall;
		function CompareSideBySideWith(WindowName:OleVariant;out RHS:WordBool):HResult;stdcall;
		function BreakSideBySide(out RHS:WordBool):HResult;stdcall;
		function Get_SyncScrollingSideBySide(out RHS:WordBool):HResult;stdcall;
		function Set_SyncScrollingSideBySide(RHS:WordBool):HResult;stdcall;
		function ResetPositionsSideBySide:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAppEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024413-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAppEvents=interface(IDispatch)
		['{00024413-0001-0000-C000-000000000046}']
		function NewWorkbook(const Wb:ExcelWorkbook):HResult;stdcall;
		function SheetSelectionChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function SheetBeforeDoubleClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function SheetBeforeRightClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function SheetActivate(const Sh:IDispatch):HResult;stdcall;
		function SheetDeactivate(const Sh:IDispatch):HResult;stdcall;
		function SheetCalculate(const Sh:IDispatch):HResult;stdcall;
		function SheetChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function WorkbookOpen(const Wb:ExcelWorkbook):HResult;stdcall;
		function WorkbookActivate(const Wb:ExcelWorkbook):HResult;stdcall;
		function WorkbookDeactivate(const Wb:ExcelWorkbook):HResult;stdcall;
		function WorkbookBeforeClose(const Wb:ExcelWorkbook;var Cancel:WordBool):HResult;stdcall;
		function WorkbookBeforeSave(const Wb:ExcelWorkbook;SaveAsUI:WordBool;var Cancel:WordBool):HResult;stdcall;
		function WorkbookBeforePrint(const Wb:ExcelWorkbook;var Cancel:WordBool):HResult;stdcall;
		function WorkbookNewSheet(const Wb:ExcelWorkbook;const Sh:IDispatch):HResult;stdcall;
		function WorkbookAddinInstall(const Wb:ExcelWorkbook):HResult;stdcall;
		function WorkbookAddinUninstall(const Wb:ExcelWorkbook):HResult;stdcall;
		function WindowResize(const Wb:ExcelWorkbook;const Wn:Window):HResult;stdcall;
		function WindowActivate(const Wb:ExcelWorkbook;const Wn:Window):HResult;stdcall;
		function WindowDeactivate(const Wb:ExcelWorkbook;const Wn:Window):HResult;stdcall;
		function SheetFollowHyperlink(const Sh:IDispatch;const Target:Hyperlink):HResult;stdcall;
		function SheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
		function WorkbookPivotTableCloseConnection(const Wb:ExcelWorkbook;const Target:PivotTable):HResult;stdcall;
		function WorkbookPivotTableOpenConnection(const Wb:ExcelWorkbook;const Target:PivotTable):HResult;stdcall;
		function WorkbookSync(const Wb:ExcelWorkbook;SyncEventType:MsoSyncEventType):HResult;stdcall;
		function WorkbookBeforeXmlImport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;IsRefresh:WordBool;
			var Cancel:WordBool):HResult;stdcall;
		function WorkbookAfterXmlImport(const Wb:ExcelWorkbook;const Map:XmlMap;IsRefresh:WordBool;Result:XlXmlImportResult)
			:HResult;stdcall;
		function WorkbookBeforeXmlExport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;var Cancel:WordBool)
			:HResult;stdcall;
		function WorkbookAfterXmlExport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;
			Result:XlXmlExportResult):HResult;stdcall;
		function WorkbookRowsetComplete(const Wb:ExcelWorkbook;const Description:WideString;const Sheet:WideString;
			Success:WordBool):HResult;stdcall;
		function AfterCalculate:HResult;stdcall;
		function SheetPivotTableAfterValueChange(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			const TargetRange:ExcelRange):HResult;stdcall;
		function SheetPivotTableBeforeAllocateChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function SheetPivotTableBeforeCommitChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function SheetPivotTableBeforeDiscardChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer):HResult;stdcall;
		function ProtectedViewWindowOpen(const Pvw:ProtectedViewWindow):HResult;stdcall;
		function ProtectedViewWindowBeforeEdit(const Pvw:ProtectedViewWindow;var Cancel:WordBool):HResult;stdcall;
		function ProtectedViewWindowBeforeClose(const Pvw:ProtectedViewWindow;Reason:XlProtectedViewCloseReason;
			var Cancel:WordBool):HResult;stdcall;
		function ProtectedViewWindowResize(const Pvw:ProtectedViewWindow):HResult;stdcall;
		function ProtectedViewWindowActivate(const Pvw:ProtectedViewWindow):HResult;stdcall;
		function ProtectedViewWindowDeactivate(const Pvw:ProtectedViewWindow):HResult;stdcall;
		function WorkbookAfterSave(const Wb:ExcelWorkbook;Success:WordBool):HResult;stdcall;
		function WorkbookNewChart(const Wb:ExcelWorkbook;const Ch:ExcelChart):HResult;stdcall;
		function SheetLensGalleryRenderComplete(const Sh:IDispatch):HResult;stdcall;
		function SheetTableUpdate(const Sh:IDispatch;const Target:TableObject):HResult;stdcall;
		function WorkbookModelChange(const Wb:ExcelWorkbook;const Changes:ModelChanges):HResult;stdcall;
		function SheetBeforeDelete(const Sh:IDispatch):HResult;stdcall;
		function WorkbookBeforeRemoteChange(const Wb:ExcelWorkbook):HResult;stdcall;
		function WorkbookAfterRemoteChange(const Wb:ExcelWorkbook):HResult;stdcall;
		function RemoteSheetChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function RemoteWorkbookNewSheet(const Wb:ExcelWorkbook;const Sh:IDispatch):HResult;stdcall;
		function RemoteWorkbookNewChart(const Wb:ExcelWorkbook;const Ch:ExcelChart):HResult;stdcall;
		function RemoteSheetBeforeDelete(const Sh:IDispatch):HResult;stdcall;
		function RemoteSheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _Application
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {000208D5-0000-0000-C000-000000000046}
	// *********************************************************************//
	_Application=interface(IDispatch)
		['{000208D5-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:ExcelApplication;safecall;
		function Get_ActiveCell:ExcelRange;safecall;
		function Get_ActiveChart:ExcelChart;safecall;
		function Get_ActiveDialog:DialogSheet;safecall;
		function Get_ActiveMenuBar:MenuBar;safecall;
		function Get_ActivePrinter(lcid:Integer):WideString;safecall;
		procedure Set_ActivePrinter(lcid:Integer;const RHS:WideString);safecall;
		function Get_ActiveSheet:IDispatch;safecall;
		function Get_ActiveWindow:Window;safecall;
		function Get_ActiveWorkbook:ExcelWorkbook;safecall;
		function Get_AddIns:AddIns;safecall;
		function Get_Assistant:Assistant;safecall;
		procedure Calculate(lcid:Integer);safecall;
		function Get_Cells:ExcelRange;safecall;
		function Get_Charts:Sheets;safecall;
		function Get_Columns:ExcelRange;safecall;
		function Get_CommandBars:CommandBars;safecall;
		function Get_DDEAppReturnCode(lcid:Integer):Integer;safecall;
		procedure DDEExecute(Channel:Integer;const String_:WideString;lcid:Integer);safecall;
		function DDEInitiate(const App:WideString;const Topic:WideString;lcid:Integer):Integer;safecall;
		procedure DDEPoke(Channel:Integer;Item:OleVariant;Data:OleVariant;lcid:Integer);safecall;
		function DDERequest(Channel:Integer;const Item:WideString;lcid:Integer):OleVariant;safecall;
		procedure DDETerminate(Channel:Integer;lcid:Integer);safecall;
		function Get_DialogSheets:Sheets;safecall;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function ExecuteExcel4Macro(const String_:WideString;lcid:Integer):OleVariant;safecall;
		function Intersect(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;safecall;
		function Get_MenuBars:MenuBars;safecall;
		function Get_Modules:Modules;safecall;
		function Get_Names:Names;safecall;
		function Get_Range(Cell1:OleVariant;Cell2:OleVariant):ExcelRange;safecall;
		function Get_Rows:ExcelRange;safecall;
		function Run(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):OleVariant;safecall;
		function _Run2(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Selection(lcid:Integer):IDispatch;safecall;
		procedure SendKeys(Keys:OleVariant;Wait:OleVariant;lcid:Integer);safecall;
		function Get_Sheets:Sheets;safecall;
		function Get_ShortcutMenus(Index:Integer):Menu;safecall;
		function Get_ThisWorkbook(lcid:Integer):ExcelWorkbook;safecall;
		function Get_Toolbars:Toolbars;safecall;
		function Union(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;safecall;
		function Get_Windows:Windows;safecall;
		function Get_Workbooks:Workbooks;safecall;
		function Get_WorksheetFunction:WorksheetFunction;safecall;
		function Get_Worksheets:Sheets;safecall;
		function Get_Excel4IntlMacroSheets:Sheets;safecall;
		function Get_Excel4MacroSheets:Sheets;safecall;
		procedure ActivateMicrosoftApp(Index:XlMSApplication;lcid:Integer);safecall;
		procedure AddChartAutoFormat(Chart:OleVariant;const Name:WideString;Description:OleVariant;lcid:Integer);safecall;
		procedure AddCustomList(ListArray:OleVariant;ByRow:OleVariant;lcid:Integer);safecall;
		function Get_AlertBeforeOverwriting(lcid:Integer):WordBool;safecall;
		procedure Set_AlertBeforeOverwriting(lcid:Integer;RHS:WordBool);safecall;
		function Get_AltStartupPath(lcid:Integer):WideString;safecall;
		procedure Set_AltStartupPath(lcid:Integer;const RHS:WideString);safecall;
		function Get_AskToUpdateLinks(lcid:Integer):WordBool;safecall;
		procedure Set_AskToUpdateLinks(lcid:Integer;RHS:WordBool);safecall;
		function Get_EnableAnimations(lcid:Integer):WordBool;safecall;
		procedure Set_EnableAnimations(lcid:Integer;RHS:WordBool);safecall;
		function Get_AutoCorrect:AutoCorrect;safecall;
		function Get_Build(lcid:Integer):Integer;safecall;
		function Get_CalculateBeforeSave(lcid:Integer):WordBool;safecall;
		procedure Set_CalculateBeforeSave(lcid:Integer;RHS:WordBool);safecall;
		function Get_Calculation(lcid:Integer):XlCalculation;safecall;
		procedure Set_Calculation(lcid:Integer;RHS:XlCalculation);safecall;
		function Get_Caller(Index:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_CanPlaySounds(lcid:Integer):WordBool;safecall;
		function Get_CanRecordSounds(lcid:Integer):WordBool;safecall;
		function Get_Caption:WideString;safecall;
		procedure Set_Caption(const RHS:WideString);safecall;
		function Get_CellDragAndDrop(lcid:Integer):WordBool;safecall;
		procedure Set_CellDragAndDrop(lcid:Integer;RHS:WordBool);safecall;
		function CentimetersToPoints(Centimeters:Double;lcid:Integer):Double;safecall;
		function CheckSpelling(const Word:WideString;CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;lcid:Integer)
			:WordBool;safecall;
		function Get_ClipboardFormats(Index:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_DisplayClipboardWindow(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayClipboardWindow(lcid:Integer;RHS:WordBool);safecall;
		function Get_ColorButtons:WordBool;safecall;
		procedure Set_ColorButtons(RHS:WordBool);safecall;
		function Get_CommandUnderlines(lcid:Integer):XlCommandUnderlines;safecall;
		procedure Set_CommandUnderlines(lcid:Integer;RHS:XlCommandUnderlines);safecall;
		function Get_ConstrainNumeric(lcid:Integer):WordBool;safecall;
		procedure Set_ConstrainNumeric(lcid:Integer;RHS:WordBool);safecall;
		function ConvertFormula(Formula:OleVariant;FromReferenceStyle:XlReferenceStyle;ToReferenceStyle:OleVariant;
			ToAbsolute:OleVariant;RelativeTo:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_CopyObjectsWithCells(lcid:Integer):WordBool;safecall;
		procedure Set_CopyObjectsWithCells(lcid:Integer;RHS:WordBool);safecall;
		function Get_Cursor(lcid:Integer):XlMousePointer;safecall;
		procedure Set_Cursor(lcid:Integer;RHS:XlMousePointer);safecall;
		function Get_CustomListCount(lcid:Integer):Integer;safecall;
		function Get_CutCopyMode(lcid:Integer):XlCutCopyMode;safecall;
		procedure Set_CutCopyMode(lcid:Integer;RHS:XlCutCopyMode);safecall;
		function Get_DataEntryMode(lcid:Integer):Integer;safecall;
		procedure Set_DataEntryMode(lcid:Integer;RHS:Integer);safecall;
		function Dummy1(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;safecall;
		function Dummy2(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant):OleVariant;safecall;
		function Dummy3:OleVariant;safecall;
		function Dummy4(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant):OleVariant;safecall;
		function Dummy5(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant):OleVariant;safecall;
		function Dummy6:OleVariant;safecall;
		function Dummy7:OleVariant;safecall;
		function Dummy8(Arg1:OleVariant):OleVariant;safecall;
		function Dummy9:OleVariant;safecall;
		function Dummy10(arg:OleVariant):WordBool;safecall;
		procedure Dummy11;safecall;
		function Get__Default:WideString;safecall;
		function Get_DefaultFilePath(lcid:Integer):WideString;safecall;
		procedure Set_DefaultFilePath(lcid:Integer;const RHS:WideString);safecall;
		procedure DeleteChartAutoFormat(const Name:WideString;lcid:Integer);safecall;
		procedure DeleteCustomList(ListNum:Integer;lcid:Integer);safecall;
		function Get_Dialogs:Dialogs;safecall;
		function Get_DisplayAlerts(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayAlerts(lcid:Integer;RHS:WordBool);safecall;
		function Get_DisplayFormulaBar(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayFormulaBar(lcid:Integer;RHS:WordBool);safecall;
		function Get_DisplayFullScreen(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayFullScreen(lcid:Integer;RHS:WordBool);safecall;
		function Get_DisplayNoteIndicator:WordBool;safecall;
		procedure Set_DisplayNoteIndicator(RHS:WordBool);safecall;
		function Get_DisplayCommentIndicator:XlCommentDisplayMode;safecall;
		procedure Set_DisplayCommentIndicator(RHS:XlCommentDisplayMode);safecall;
		function Get_DisplayExcel4Menus(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayExcel4Menus(lcid:Integer;RHS:WordBool);safecall;
		function Get_DisplayRecentFiles:WordBool;safecall;
		procedure Set_DisplayRecentFiles(RHS:WordBool);safecall;
		function Get_DisplayScrollBars(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayScrollBars(lcid:Integer;RHS:WordBool);safecall;
		function Get_DisplayStatusBar(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayStatusBar(lcid:Integer;RHS:WordBool);safecall;
		procedure DoubleClick(lcid:Integer);safecall;
		function Get_EditDirectlyInCell(lcid:Integer):WordBool;safecall;
		procedure Set_EditDirectlyInCell(lcid:Integer;RHS:WordBool);safecall;
		function Get_EnableAutoComplete:WordBool;safecall;
		procedure Set_EnableAutoComplete(RHS:WordBool);safecall;
		function Get_EnableCancelKey(lcid:Integer):XlEnableCancelKey;safecall;
		procedure Set_EnableCancelKey(lcid:Integer;RHS:XlEnableCancelKey);safecall;
		function Get_EnableSound:WordBool;safecall;
		procedure Set_EnableSound(RHS:WordBool);safecall;
		function Get_EnableTipWizard(lcid:Integer):WordBool;safecall;
		procedure Set_EnableTipWizard(lcid:Integer;RHS:WordBool);safecall;
		function Get_FileConverters(Index1:OleVariant;Index2:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_FileSearch:FileSearch;safecall;
		function Get_FileFind:IFind;safecall;
		procedure _FindFile(lcid:Integer);safecall;
		function Get_FixedDecimal(lcid:Integer):WordBool;safecall;
		procedure Set_FixedDecimal(lcid:Integer;RHS:WordBool);safecall;
		function Get_FixedDecimalPlaces(lcid:Integer):Integer;safecall;
		procedure Set_FixedDecimalPlaces(lcid:Integer;RHS:Integer);safecall;
		function GetCustomListContents(ListNum:Integer;lcid:Integer):OleVariant;safecall;
		function GetCustomListNum(ListArray:OleVariant;lcid:Integer):Integer;safecall;
		function GetOpenFilename(FileFilter:OleVariant;FilterIndex:OleVariant;Title:OleVariant;ButtonText:OleVariant;
			MultiSelect:OleVariant;lcid:Integer):OleVariant;safecall;
		function GetSaveAsFilename(InitialFilename:OleVariant;FileFilter:OleVariant;FilterIndex:OleVariant;Title:OleVariant;
			ButtonText:OleVariant;lcid:Integer):OleVariant;safecall;
		procedure Goto_(Reference:OleVariant;Scroll:OleVariant;lcid:Integer);safecall;
		function Get_Height(lcid:Integer):Double;safecall;
		procedure Set_Height(lcid:Integer;RHS:Double);safecall;
		procedure Help(HelpFile:OleVariant;HelpContextID:OleVariant;lcid:Integer);safecall;
		function Get_IgnoreRemoteRequests(lcid:Integer):WordBool;safecall;
		procedure Set_IgnoreRemoteRequests(lcid:Integer;RHS:WordBool);safecall;
		function InchesToPoints(Inches:Double;lcid:Integer):Double;safecall;
		function InputBox(const Prompt:WideString;Title:OleVariant;Default:OleVariant;Left:OleVariant;Top:OleVariant;
			HelpFile:OleVariant;HelpContextID:OleVariant;Type_:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Interactive(lcid:Integer):WordBool;safecall;
		procedure Set_Interactive(lcid:Integer;RHS:WordBool);safecall;
		function Get_International(Index:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Iteration(lcid:Integer):WordBool;safecall;
		procedure Set_Iteration(lcid:Integer;RHS:WordBool);safecall;
		function Get_LargeButtons:WordBool;safecall;
		procedure Set_LargeButtons(RHS:WordBool);safecall;
		function Get_Left(lcid:Integer):Double;safecall;
		procedure Set_Left(lcid:Integer;RHS:Double);safecall;
		function Get_LibraryPath(lcid:Integer):WideString;safecall;
		procedure _MacroOptions(Macro:OleVariant;Description:OleVariant;HasMenu:OleVariant;MenuText:OleVariant;
			HasShortcutKey:OleVariant;ShortcutKey:OleVariant;Category:OleVariant;StatusBar:OleVariant;
			HelpContextID:OleVariant;HelpFile:OleVariant;lcid:Integer);safecall;
		procedure MailLogoff(lcid:Integer);safecall;
		procedure MailLogon(Name:OleVariant;Password:OleVariant;DownloadNewMail:OleVariant;lcid:Integer);safecall;
		function Get_MailSession(lcid:Integer):OleVariant;safecall;
		function Get_MailSystem(lcid:Integer):XlMailSystem;safecall;
		function Get_MathCoprocessorAvailable(lcid:Integer):WordBool;safecall;
		function Get_MaxChange(lcid:Integer):Double;safecall;
		procedure Set_MaxChange(lcid:Integer;RHS:Double);safecall;
		function Get_MaxIterations(lcid:Integer):Integer;safecall;
		procedure Set_MaxIterations(lcid:Integer;RHS:Integer);safecall;
		function Get_MemoryFree(lcid:Integer):Integer;safecall;
		function Get_MemoryTotal(lcid:Integer):Integer;safecall;
		function Get_MemoryUsed(lcid:Integer):Integer;safecall;
		function Get_MouseAvailable(lcid:Integer):WordBool;safecall;
		function Get_MoveAfterReturn(lcid:Integer):WordBool;safecall;
		procedure Set_MoveAfterReturn(lcid:Integer;RHS:WordBool);safecall;
		function Get_MoveAfterReturnDirection(lcid:Integer):XlDirection;safecall;
		procedure Set_MoveAfterReturnDirection(lcid:Integer;RHS:XlDirection);safecall;
		function Get_RecentFiles:RecentFiles;safecall;
		function Get_Name:WideString;safecall;
		function NextLetter(lcid:Integer):ExcelWorkbook;safecall;
		function Get_NetworkTemplatesPath(lcid:Integer):WideString;safecall;
		function Get_ODBCErrors:ODBCErrors;safecall;
		function Get_ODBCTimeout:Integer;safecall;
		procedure Set_ODBCTimeout(RHS:Integer);safecall;
		function Get_OnCalculate(lcid:Integer):WideString;safecall;
		procedure Set_OnCalculate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnData(lcid:Integer):WideString;safecall;
		procedure Set_OnData(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnDoubleClick(lcid:Integer):WideString;safecall;
		procedure Set_OnDoubleClick(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnEntry(lcid:Integer):WideString;safecall;
		procedure Set_OnEntry(lcid:Integer;const RHS:WideString);safecall;
		procedure OnKey(const Key:WideString;Procedure_:OleVariant;lcid:Integer);safecall;
		procedure OnRepeat(const Text:WideString;const Procedure_:WideString;lcid:Integer);safecall;
		function Get_OnSheetActivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetActivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetDeactivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString);safecall;
		procedure OnTime(EarliestTime:OleVariant;const Procedure_:WideString;LatestTime:OleVariant;Schedule:OleVariant;
			lcid:Integer);safecall;
		procedure OnUndo(const Text:WideString;const Procedure_:WideString;lcid:Integer);safecall;
		function Get_OnWindow(lcid:Integer):WideString;safecall;
		procedure Set_OnWindow(lcid:Integer;const RHS:WideString);safecall;
		function Get_OperatingSystem(lcid:Integer):WideString;safecall;
		function Get_OrganizationName(lcid:Integer):WideString;safecall;
		function Get_Path(lcid:Integer):WideString;safecall;
		function Get_PathSeparator(lcid:Integer):WideString;safecall;
		function Get_PreviousSelections(Index:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_PivotTableSelection:WordBool;safecall;
		procedure Set_PivotTableSelection(RHS:WordBool);safecall;
		function Get_PromptForSummaryInfo(lcid:Integer):WordBool;safecall;
		procedure Set_PromptForSummaryInfo(lcid:Integer;RHS:WordBool);safecall;
		procedure Quit;safecall;
		procedure RecordMacro(BasicCode:OleVariant;XlmCode:OleVariant;lcid:Integer);safecall;
		function Get_RecordRelative(lcid:Integer):WordBool;safecall;
		function Get_ReferenceStyle(lcid:Integer):XlReferenceStyle;safecall;
		procedure Set_ReferenceStyle(lcid:Integer;RHS:XlReferenceStyle);safecall;
		function Get_RegisteredFunctions(Index1:OleVariant;Index2:OleVariant;lcid:Integer):OleVariant;safecall;
		function RegisterXLL(const Filename:WideString;lcid:Integer):WordBool;safecall;
		procedure Repeat_(lcid:Integer);safecall;
		procedure ResetTipWizard(lcid:Integer);safecall;
		function Get_RollZoom:WordBool;safecall;
		procedure Set_RollZoom(RHS:WordBool);safecall;
		procedure Save(Filename:OleVariant;lcid:Integer);safecall;
		procedure SaveWorkspace(Filename:OleVariant;lcid:Integer);safecall;
		function Get_ScreenUpdating(lcid:Integer):WordBool;safecall;
		procedure Set_ScreenUpdating(lcid:Integer;RHS:WordBool);safecall;
		procedure SetDefaultChart(FormatName:OleVariant;Gallery:OleVariant);safecall;
		function Get_SheetsInNewWorkbook(lcid:Integer):Integer;safecall;
		procedure Set_SheetsInNewWorkbook(lcid:Integer;RHS:Integer);safecall;
		function Get_ShowChartTipNames:WordBool;safecall;
		procedure Set_ShowChartTipNames(RHS:WordBool);safecall;
		function Get_ShowChartTipValues:WordBool;safecall;
		procedure Set_ShowChartTipValues(RHS:WordBool);safecall;
		function Get_StandardFont(lcid:Integer):WideString;safecall;
		procedure Set_StandardFont(lcid:Integer;const RHS:WideString);safecall;
		function Get_StandardFontSize(lcid:Integer):Double;safecall;
		procedure Set_StandardFontSize(lcid:Integer;RHS:Double);safecall;
		function Get_StartupPath(lcid:Integer):WideString;safecall;
		function Get_StatusBar(lcid:Integer):OleVariant;safecall;
		procedure Set_StatusBar(lcid:Integer;RHS:OleVariant);safecall;
		function Get_TemplatesPath(lcid:Integer):WideString;safecall;
		function Get_ShowToolTips:WordBool;safecall;
		procedure Set_ShowToolTips(RHS:WordBool);safecall;
		function Get_Top(lcid:Integer):Double;safecall;
		procedure Set_Top(lcid:Integer;RHS:Double);safecall;
		function Get_DefaultSaveFormat:XlFileFormat;safecall;
		procedure Set_DefaultSaveFormat(RHS:XlFileFormat);safecall;
		function Get_TransitionMenuKey(lcid:Integer):WideString;safecall;
		procedure Set_TransitionMenuKey(lcid:Integer;const RHS:WideString);safecall;
		function Get_TransitionMenuKeyAction(lcid:Integer):Integer;safecall;
		procedure Set_TransitionMenuKeyAction(lcid:Integer;RHS:Integer);safecall;
		function Get_TransitionNavigKeys(lcid:Integer):WordBool;safecall;
		procedure Set_TransitionNavigKeys(lcid:Integer;RHS:WordBool);safecall;
		procedure Undo(lcid:Integer);safecall;
		function Get_UsableHeight(lcid:Integer):Double;safecall;
		function Get_UsableWidth(lcid:Integer):Double;safecall;
		function Get_UserControl:WordBool;safecall;
		procedure Set_UserControl(RHS:WordBool);safecall;
		function Get_UserName(lcid:Integer):WideString;safecall;
		procedure Set_UserName(lcid:Integer;const RHS:WideString);safecall;
		function Get_Value:WideString;safecall;
		function Get_VBE:VBE;safecall;
		function Get_Version(lcid:Integer):WideString;safecall;
		function Get_Visible(lcid:Integer):WordBool;safecall;
		procedure Set_Visible(lcid:Integer;RHS:WordBool);safecall;
		procedure Volatile(Volatile:OleVariant;lcid:Integer);safecall;
		procedure _Wait(Time:OleVariant;lcid:Integer);safecall;
		function Get_Width(lcid:Integer):Double;safecall;
		procedure Set_Width(lcid:Integer;RHS:Double);safecall;
		function Get_WindowsForPens(lcid:Integer):WordBool;safecall;
		function Get_WindowState(lcid:Integer):XlWindowState;safecall;
		procedure Set_WindowState(lcid:Integer;RHS:XlWindowState);safecall;
		function Get_UILanguage(lcid:Integer):Integer;safecall;
		procedure Set_UILanguage(lcid:Integer;RHS:Integer);safecall;
		function Get_DefaultSheetDirection(lcid:Integer):Integer;safecall;
		procedure Set_DefaultSheetDirection(lcid:Integer;RHS:Integer);safecall;
		function Get_CursorMovement(lcid:Integer):Integer;safecall;
		procedure Set_CursorMovement(lcid:Integer;RHS:Integer);safecall;
		function Get_ControlCharacters(lcid:Integer):WordBool;safecall;
		procedure Set_ControlCharacters(lcid:Integer;RHS:WordBool);safecall;
		function _WSFunction(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_EnableEvents:WordBool;safecall;
		procedure Set_EnableEvents(RHS:WordBool);safecall;
		function Get_DisplayInfoWindow:WordBool;safecall;
		procedure Set_DisplayInfoWindow(RHS:WordBool);safecall;
		function Wait(Time:OleVariant;lcid:Integer):WordBool;safecall;
		function Get_ExtendList:WordBool;safecall;
		procedure Set_ExtendList(RHS:WordBool);safecall;
		function Get_OLEDBErrors:OLEDBErrors;safecall;
		function GetPhonetic(Text:OleVariant):WideString;safecall;
		function Get_COMAddIns:COMAddIns;safecall;
		function Get_DefaultWebOptions:DefaultWebOptions;safecall;
		function Get_ProductCode:WideString;safecall;
		function Get_UserLibraryPath:WideString;safecall;
		function Get_AutoPercentEntry:WordBool;safecall;
		procedure Set_AutoPercentEntry(RHS:WordBool);safecall;
		function Get_LanguageSettings:LanguageSettings;safecall;
		function Get_Dummy101:IDispatch;safecall;
		procedure Dummy12(const p1:PivotTable;const p2:PivotTable);safecall;
		function Get_AnswerWizard:AnswerWizard;safecall;
		procedure CalculateFull;safecall;
		function FindFile(lcid:Integer):WordBool;safecall;
		function Get_CalculationVersion:Integer;safecall;
		function Get_ShowWindowsInTaskbar:WordBool;safecall;
		procedure Set_ShowWindowsInTaskbar(RHS:WordBool);safecall;
		function Get_FeatureInstall:MsoFeatureInstall;safecall;
		procedure Set_FeatureInstall(RHS:MsoFeatureInstall);safecall;
		function Get_Ready:WordBool;safecall;
		function Dummy13(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant)
			:OleVariant;safecall;
		function Get_FindFormat:CellFormat;safecall;
		procedure _Set_FindFormat(const RHS:CellFormat);safecall;
		function Get_ReplaceFormat:CellFormat;safecall;
		procedure _Set_ReplaceFormat(const RHS:CellFormat);safecall;
		function Get_UsedObjects:UsedObjects;safecall;
		function Get_CalculationState:XlCalculationState;safecall;
		function Get_CalculationInterruptKey:XlCalculationInterruptKey;safecall;
		procedure Set_CalculationInterruptKey(RHS:XlCalculationInterruptKey);safecall;
		function Get_Watches:Watches;safecall;
		function Get_DisplayFunctionToolTips:WordBool;safecall;
		procedure Set_DisplayFunctionToolTips(RHS:WordBool);safecall;
		function Get_AutomationSecurity:MsoAutomationSecurity;safecall;
		procedure Set_AutomationSecurity(RHS:MsoAutomationSecurity);safecall;
		function Get_FileDialog(fileDialogType:MsoFileDialogType):FileDialog;safecall;
		procedure Dummy14;safecall;
		procedure CalculateFullRebuild;safecall;
		function Get_DisplayPasteOptions:WordBool;safecall;
		procedure Set_DisplayPasteOptions(RHS:WordBool);safecall;
		function Get_DisplayInsertOptions:WordBool;safecall;
		procedure Set_DisplayInsertOptions(RHS:WordBool);safecall;
		function Get_GenerateGetPivotData:WordBool;safecall;
		procedure Set_GenerateGetPivotData(RHS:WordBool);safecall;
		function Get_AutoRecover:AutoRecover;safecall;
		function Get_HWND_:Integer;safecall;
		function Get_Hinstance:Integer;safecall;
		procedure CheckAbort(KeepAbort:OleVariant);safecall;
		function Get_ErrorCheckingOptions:ErrorCheckingOptions;safecall;
		function Get_AutoFormatAsYouTypeReplaceHyperlinks:WordBool;safecall;
		procedure Set_AutoFormatAsYouTypeReplaceHyperlinks(RHS:WordBool);safecall;
		function Get_SmartTagRecognizers:SmartTagRecognizers;safecall;
		function Get_NewWorkbook:NewFile;safecall;
		function Get_SpellingOptions:SpellingOptions;safecall;
		function Get_Speech:Speech;safecall;
		function Get_MapPaperSize:WordBool;safecall;
		procedure Set_MapPaperSize(RHS:WordBool);safecall;
		function Get_ShowStartupDialog:WordBool;safecall;
		procedure Set_ShowStartupDialog(RHS:WordBool);safecall;
		function Get_DecimalSeparator:WideString;safecall;
		procedure Set_DecimalSeparator(const RHS:WideString);safecall;
		function Get_ThousandsSeparator:WideString;safecall;
		procedure Set_ThousandsSeparator(const RHS:WideString);safecall;
		function Get_UseSystemSeparators:WordBool;safecall;
		procedure Set_UseSystemSeparators(RHS:WordBool);safecall;
		function Get_ThisCell:ExcelRange;safecall;
		function Get_RTD:RTD;safecall;
		function Get_DisplayDocumentActionTaskPane:WordBool;safecall;
		procedure Set_DisplayDocumentActionTaskPane(RHS:WordBool);safecall;
		procedure DisplayXMLSourcePane(XmlMap:OleVariant);safecall;
		function Get_ArbitraryXMLSupportAvailable:WordBool;safecall;
		function Support(const Object_:IDispatch;ID:Integer;arg:OleVariant):OleVariant;safecall;
		function Dummy20(grfCompareFunctions:Integer):OleVariant;safecall;
		function Get_MeasurementUnit:Integer;safecall;
		procedure Set_MeasurementUnit(RHS:Integer);safecall;
		function Get_ShowSelectionFloaties:WordBool;safecall;
		procedure Set_ShowSelectionFloaties(RHS:WordBool);safecall;
		function Get_ShowMenuFloaties:WordBool;safecall;
		procedure Set_ShowMenuFloaties(RHS:WordBool);safecall;
		function Get_ShowDevTools:WordBool;safecall;
		procedure Set_ShowDevTools(RHS:WordBool);safecall;
		function Get_EnableLivePreview:WordBool;safecall;
		procedure Set_EnableLivePreview(RHS:WordBool);safecall;
		function Get_DisplayDocumentInformationPanel:WordBool;safecall;
		procedure Set_DisplayDocumentInformationPanel(RHS:WordBool);safecall;
		function Get_AlwaysUseClearType:WordBool;safecall;
		procedure Set_AlwaysUseClearType(RHS:WordBool);safecall;
		function Get_WarnOnFunctionNameConflict:WordBool;safecall;
		procedure Set_WarnOnFunctionNameConflict(RHS:WordBool);safecall;
		function Get_FormulaBarHeight:Integer;safecall;
		procedure Set_FormulaBarHeight(RHS:Integer);safecall;
		function Get_DisplayFormulaAutoComplete:WordBool;safecall;
		procedure Set_DisplayFormulaAutoComplete(RHS:WordBool);safecall;
		function Get_GenerateTableRefs(lcid:Integer):XlGenerateTableRefs;safecall;
		procedure Set_GenerateTableRefs(lcid:Integer;RHS:XlGenerateTableRefs);safecall;
		function Get_Assistance:IAssistance;safecall;
		procedure CalculateUntilAsyncQueriesDone;safecall;
		function Get_EnableLargeOperationAlert:WordBool;safecall;
		procedure Set_EnableLargeOperationAlert(RHS:WordBool);safecall;
		function Get_LargeOperationCellThousandCount:Integer;safecall;
		procedure Set_LargeOperationCellThousandCount(RHS:Integer);safecall;
		function Get_DeferAsyncQueries:WordBool;safecall;
		procedure Set_DeferAsyncQueries(RHS:WordBool);safecall;
		function Get_MultiThreadedCalculation:MultiThreadedCalculation;safecall;
		function SharePointVersion(const bstrUrl:WideString):Integer;safecall;
		function Get_ActiveEncryptionSession:Integer;safecall;
		function Get_HighQualityModeForGraphics:WordBool;safecall;
		procedure Set_HighQualityModeForGraphics(RHS:WordBool);safecall;
		function Get_FileExportConverters:FileExportConverters;safecall;
		function Get_SmartArtLayouts:SmartArtLayouts;safecall;
		function Get_SmartArtQuickStyles:SmartArtQuickStyles;safecall;
		function Get_SmartArtColors:SmartArtColors;safecall;
		function Get_AddIns2:AddIns2;safecall;
		function Get_PrintCommunication:WordBool;safecall;
		procedure Set_PrintCommunication(RHS:WordBool);safecall;
		procedure MacroOptions(Macro:OleVariant;Description:OleVariant;HasMenu:OleVariant;MenuText:OleVariant;
			HasShortcutKey:OleVariant;ShortcutKey:OleVariant;Category:OleVariant;StatusBar:OleVariant;
			HelpContextID:OleVariant;HelpFile:OleVariant;ArgumentDescriptions:OleVariant;lcid:Integer);safecall;
		function Get_UseClusterConnector:WordBool;safecall;
		procedure Set_UseClusterConnector(RHS:WordBool);safecall;
		function Get_ClusterConnector:WideString;safecall;
		procedure Set_ClusterConnector(const RHS:WideString);safecall;
		function Get_Quitting:WordBool;safecall;
		function Get_Dummy22:WordBool;safecall;
		procedure Set_Dummy22(RHS:WordBool);safecall;
		function Get_Dummy23:WordBool;safecall;
		procedure Set_Dummy23(RHS:WordBool);safecall;
		function Get_ProtectedViewWindows:ProtectedViewWindows;safecall;
		function Get_ActiveProtectedViewWindow:ProtectedViewWindow;safecall;
		function Get_IsSandboxed:WordBool;safecall;
		function Get_SaveISO8601Dates:WordBool;safecall;
		procedure Set_SaveISO8601Dates(RHS:WordBool);safecall;
		function Get_HinstancePtr:OleVariant;safecall;
		function Get_FileValidation:MsoFileValidationMode;safecall;
		procedure Set_FileValidation(RHS:MsoFileValidationMode);safecall;
		function Get_FileValidationPivot:XlFileValidationPivotMode;safecall;
		procedure Set_FileValidationPivot(RHS:XlFileValidationPivotMode);safecall;
		function Get_ShowQuickAnalysis:WordBool;safecall;
		procedure Set_ShowQuickAnalysis(RHS:WordBool);safecall;
		function Get_QuickAnalysis:QuickAnalysis;safecall;
		function Get_FlashFill:WordBool;safecall;
		procedure Set_FlashFill(RHS:WordBool);safecall;
		function Get_EnableMacroAnimations:WordBool;safecall;
		procedure Set_EnableMacroAnimations(RHS:WordBool);safecall;
		function Get_ChartDataPointTrack:WordBool;safecall;
		procedure Set_ChartDataPointTrack(RHS:WordBool);safecall;
		function Get_FlashFillMode:WordBool;safecall;
		procedure Set_FlashFillMode(RHS:WordBool);safecall;
		function Get_MergeInstances:WordBool;safecall;
		procedure Set_MergeInstances(RHS:WordBool);safecall;
		function Get_EnableCheckFileExtensions:WordBool;safecall;
		procedure Set_EnableCheckFileExtensions(RHS:WordBool);safecall;
		function Get_DefaultPivotTableLayoutOptions:DefaultPivotTableLayoutOptions;safecall;
		function Get_CSVKeepLeadingZerosAsText:WordBool;safecall;
		procedure Set_CSVKeepLeadingZerosAsText(RHS:WordBool);safecall;
		function Get_CSVKeepLargeNumbersAsText:WordBool;safecall;
		procedure Set_CSVKeepLargeNumbersAsText(RHS:WordBool);safecall;
		function Get_CSVKeepDigitsWithEAsText:WordBool;safecall;
		procedure Set_CSVKeepDigitsWithEAsText(RHS:WordBool);safecall;
		function Get_CSVDisplayNumberConversionWarning:WordBool;safecall;
		procedure Set_CSVDisplayNumberConversionWarning(RHS:WordBool);safecall;
		function Get_CSVKeepColumnAsTextIfMultipleEntriesAreText:WordBool;safecall;
		procedure Set_CSVKeepColumnAsTextIfMultipleEntriesAreText(RHS:WordBool);safecall;
		function Get_DataPrivacyOptions:DataPrivacyOptions;safecall;
		function Get_ShowConvertToDataType:WordBool;safecall;
		procedure Set_ShowConvertToDataType(RHS:WordBool);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:ExcelApplication read Get_Parent;
		property ActiveCell:ExcelRange read Get_ActiveCell;
		property ActiveChart:ExcelChart read Get_ActiveChart;
		property ActiveDialog:DialogSheet read Get_ActiveDialog;
		property ActiveMenuBar:MenuBar read Get_ActiveMenuBar;
		property ActivePrinter[lcid:Integer]:WideString read Get_ActivePrinter write Set_ActivePrinter;
		property ActiveSheet:IDispatch read Get_ActiveSheet;
		property ActiveWindow:Window read Get_ActiveWindow;
		property ActiveWorkbook:ExcelWorkbook read Get_ActiveWorkbook;
		property AddIns:AddIns read Get_AddIns;
		property Assistant:Assistant read Get_Assistant;
		property Cells:ExcelRange read Get_Cells;
		property Charts:Sheets read Get_Charts;
		property Columns:ExcelRange read Get_Columns;
		property CommandBars:CommandBars read Get_CommandBars;
		property DDEAppReturnCode[lcid:Integer]:Integer read Get_DDEAppReturnCode;
		property DialogSheets:Sheets read Get_DialogSheets;
		property MenuBars:MenuBars read Get_MenuBars;
		property Modules:Modules read Get_Modules;
		property Names:Names read Get_Names;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange read Get_Range;
		property Rows:ExcelRange read Get_Rows;
		property Selection[lcid:Integer]:IDispatch read Get_Selection;
		property Sheets:Sheets read Get_Sheets;
		property ShortcutMenus[Index:Integer]:Menu read Get_ShortcutMenus;
		property ThisWorkbook[lcid:Integer]:ExcelWorkbook read Get_ThisWorkbook;
		property Toolbars:Toolbars read Get_Toolbars;
		property Windows:Windows read Get_Windows;
		property Workbooks:Workbooks read Get_Workbooks;
		property WorksheetFunction:WorksheetFunction read Get_WorksheetFunction;
		property Worksheets:Sheets read Get_Worksheets;
		property Excel4IntlMacroSheets:Sheets read Get_Excel4IntlMacroSheets;
		property Excel4MacroSheets:Sheets read Get_Excel4MacroSheets;
		property AlertBeforeOverwriting[lcid:Integer]:WordBool read Get_AlertBeforeOverwriting
			write Set_AlertBeforeOverwriting;
		property AltStartupPath[lcid:Integer]:WideString read Get_AltStartupPath write Set_AltStartupPath;
		property AskToUpdateLinks[lcid:Integer]:WordBool read Get_AskToUpdateLinks write Set_AskToUpdateLinks;
		property EnableAnimations[lcid:Integer]:WordBool read Get_EnableAnimations write Set_EnableAnimations;
		property AutoCorrect:AutoCorrect read Get_AutoCorrect;
		property Build[lcid:Integer]:Integer read Get_Build;
		property CalculateBeforeSave[lcid:Integer]:WordBool read Get_CalculateBeforeSave write Set_CalculateBeforeSave;
		property Calculation[lcid:Integer]:XlCalculation read Get_Calculation write Set_Calculation;
		property Caller[Index:OleVariant;lcid:Integer]:OleVariant read Get_Caller;
		property CanPlaySounds[lcid:Integer]:WordBool read Get_CanPlaySounds;
		property CanRecordSounds[lcid:Integer]:WordBool read Get_CanRecordSounds;
		property Caption:WideString read Get_Caption write Set_Caption;
		property CellDragAndDrop[lcid:Integer]:WordBool read Get_CellDragAndDrop write Set_CellDragAndDrop;
		property ClipboardFormats[Index:OleVariant;lcid:Integer]:OleVariant read Get_ClipboardFormats;
		property DisplayClipboardWindow[lcid:Integer]:WordBool read Get_DisplayClipboardWindow
			write Set_DisplayClipboardWindow;
		property ColorButtons:WordBool read Get_ColorButtons write Set_ColorButtons;
		property CommandUnderlines[lcid:Integer]:XlCommandUnderlines read Get_CommandUnderlines write Set_CommandUnderlines;
		property ConstrainNumeric[lcid:Integer]:WordBool read Get_ConstrainNumeric write Set_ConstrainNumeric;
		property CopyObjectsWithCells[lcid:Integer]:WordBool read Get_CopyObjectsWithCells write Set_CopyObjectsWithCells;
		property Cursor[lcid:Integer]:XlMousePointer read Get_Cursor write Set_Cursor;
		property CustomListCount[lcid:Integer]:Integer read Get_CustomListCount;
		property CutCopyMode[lcid:Integer]:XlCutCopyMode read Get_CutCopyMode write Set_CutCopyMode;
		property DataEntryMode[lcid:Integer]:Integer read Get_DataEntryMode write Set_DataEntryMode;
		property _Default:WideString read Get__Default;
		property DefaultFilePath[lcid:Integer]:WideString read Get_DefaultFilePath write Set_DefaultFilePath;
		property Dialogs:Dialogs read Get_Dialogs;
		property DisplayAlerts[lcid:Integer]:WordBool read Get_DisplayAlerts write Set_DisplayAlerts;
		property DisplayFormulaBar[lcid:Integer]:WordBool read Get_DisplayFormulaBar write Set_DisplayFormulaBar;
		property DisplayFullScreen[lcid:Integer]:WordBool read Get_DisplayFullScreen write Set_DisplayFullScreen;
		property DisplayNoteIndicator:WordBool read Get_DisplayNoteIndicator write Set_DisplayNoteIndicator;
		property DisplayCommentIndicator:XlCommentDisplayMode read Get_DisplayCommentIndicator
			write Set_DisplayCommentIndicator;
		property DisplayExcel4Menus[lcid:Integer]:WordBool read Get_DisplayExcel4Menus write Set_DisplayExcel4Menus;
		property DisplayRecentFiles:WordBool read Get_DisplayRecentFiles write Set_DisplayRecentFiles;
		property DisplayScrollBars[lcid:Integer]:WordBool read Get_DisplayScrollBars write Set_DisplayScrollBars;
		property DisplayStatusBar[lcid:Integer]:WordBool read Get_DisplayStatusBar write Set_DisplayStatusBar;
		property EditDirectlyInCell[lcid:Integer]:WordBool read Get_EditDirectlyInCell write Set_EditDirectlyInCell;
		property EnableAutoComplete:WordBool read Get_EnableAutoComplete write Set_EnableAutoComplete;
		property EnableCancelKey[lcid:Integer]:XlEnableCancelKey read Get_EnableCancelKey write Set_EnableCancelKey;
		property EnableSound:WordBool read Get_EnableSound write Set_EnableSound;
		property EnableTipWizard[lcid:Integer]:WordBool read Get_EnableTipWizard write Set_EnableTipWizard;
		property FileConverters[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant read Get_FileConverters;
		property FileSearch:FileSearch read Get_FileSearch;
		property FileFind:IFind read Get_FileFind;
		property FixedDecimal[lcid:Integer]:WordBool read Get_FixedDecimal write Set_FixedDecimal;
		property FixedDecimalPlaces[lcid:Integer]:Integer read Get_FixedDecimalPlaces write Set_FixedDecimalPlaces;
		property Height[lcid:Integer]:Double read Get_Height write Set_Height;
		property IgnoreRemoteRequests[lcid:Integer]:WordBool read Get_IgnoreRemoteRequests write Set_IgnoreRemoteRequests;
		property Interactive[lcid:Integer]:WordBool read Get_Interactive write Set_Interactive;
		property International[Index:OleVariant;lcid:Integer]:OleVariant read Get_International;
		property Iteration[lcid:Integer]:WordBool read Get_Iteration write Set_Iteration;
		property LargeButtons:WordBool read Get_LargeButtons write Set_LargeButtons;
		property Left[lcid:Integer]:Double read Get_Left write Set_Left;
		property LibraryPath[lcid:Integer]:WideString read Get_LibraryPath;
		property MailSession[lcid:Integer]:OleVariant read Get_MailSession;
		property MailSystem[lcid:Integer]:XlMailSystem read Get_MailSystem;
		property MathCoprocessorAvailable[lcid:Integer]:WordBool read Get_MathCoprocessorAvailable;
		property MaxChange[lcid:Integer]:Double read Get_MaxChange write Set_MaxChange;
		property MaxIterations[lcid:Integer]:Integer read Get_MaxIterations write Set_MaxIterations;
		property MemoryFree[lcid:Integer]:Integer read Get_MemoryFree;
		property MemoryTotal[lcid:Integer]:Integer read Get_MemoryTotal;
		property MemoryUsed[lcid:Integer]:Integer read Get_MemoryUsed;
		property MouseAvailable[lcid:Integer]:WordBool read Get_MouseAvailable;
		property MoveAfterReturn[lcid:Integer]:WordBool read Get_MoveAfterReturn write Set_MoveAfterReturn;
		property MoveAfterReturnDirection[lcid:Integer]:XlDirection read Get_MoveAfterReturnDirection
			write Set_MoveAfterReturnDirection;
		property RecentFiles:RecentFiles read Get_RecentFiles;
		property Name:WideString read Get_Name;
		property NetworkTemplatesPath[lcid:Integer]:WideString read Get_NetworkTemplatesPath;
		property ODBCErrors:ODBCErrors read Get_ODBCErrors;
		property ODBCTimeout:Integer read Get_ODBCTimeout write Set_ODBCTimeout;
		property OnCalculate[lcid:Integer]:WideString read Get_OnCalculate write Set_OnCalculate;
		property OnData[lcid:Integer]:WideString read Get_OnData write Set_OnData;
		property OnDoubleClick[lcid:Integer]:WideString read Get_OnDoubleClick write Set_OnDoubleClick;
		property OnEntry[lcid:Integer]:WideString read Get_OnEntry write Set_OnEntry;
		property OnSheetActivate[lcid:Integer]:WideString read Get_OnSheetActivate write Set_OnSheetActivate;
		property OnSheetDeactivate[lcid:Integer]:WideString read Get_OnSheetDeactivate write Set_OnSheetDeactivate;
		property OnWindow[lcid:Integer]:WideString read Get_OnWindow write Set_OnWindow;
		property OperatingSystem[lcid:Integer]:WideString read Get_OperatingSystem;
		property OrganizationName[lcid:Integer]:WideString read Get_OrganizationName;
		property Path[lcid:Integer]:WideString read Get_Path;
		property PathSeparator[lcid:Integer]:WideString read Get_PathSeparator;
		property PreviousSelections[Index:OleVariant;lcid:Integer]:OleVariant read Get_PreviousSelections;
		property PivotTableSelection:WordBool read Get_PivotTableSelection write Set_PivotTableSelection;
		property PromptForSummaryInfo[lcid:Integer]:WordBool read Get_PromptForSummaryInfo write Set_PromptForSummaryInfo;
		property RecordRelative[lcid:Integer]:WordBool read Get_RecordRelative;
		property ReferenceStyle[lcid:Integer]:XlReferenceStyle read Get_ReferenceStyle write Set_ReferenceStyle;
		property RegisteredFunctions[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant
			read Get_RegisteredFunctions;
		property RollZoom:WordBool read Get_RollZoom write Set_RollZoom;
		property ScreenUpdating[lcid:Integer]:WordBool read Get_ScreenUpdating write Set_ScreenUpdating;
		property SheetsInNewWorkbook[lcid:Integer]:Integer read Get_SheetsInNewWorkbook write Set_SheetsInNewWorkbook;
		property ShowChartTipNames:WordBool read Get_ShowChartTipNames write Set_ShowChartTipNames;
		property ShowChartTipValues:WordBool read Get_ShowChartTipValues write Set_ShowChartTipValues;
		property StandardFont[lcid:Integer]:WideString read Get_StandardFont write Set_StandardFont;
		property StandardFontSize[lcid:Integer]:Double read Get_StandardFontSize write Set_StandardFontSize;
		property StartupPath[lcid:Integer]:WideString read Get_StartupPath;
		property StatusBar[lcid:Integer]:OleVariant read Get_StatusBar write Set_StatusBar;
		property TemplatesPath[lcid:Integer]:WideString read Get_TemplatesPath;
		property ShowToolTips:WordBool read Get_ShowToolTips write Set_ShowToolTips;
		property Top[lcid:Integer]:Double read Get_Top write Set_Top;
		property DefaultSaveFormat:XlFileFormat read Get_DefaultSaveFormat write Set_DefaultSaveFormat;
		property TransitionMenuKey[lcid:Integer]:WideString read Get_TransitionMenuKey write Set_TransitionMenuKey;
		property TransitionMenuKeyAction[lcid:Integer]:Integer read Get_TransitionMenuKeyAction
			write Set_TransitionMenuKeyAction;
		property TransitionNavigKeys[lcid:Integer]:WordBool read Get_TransitionNavigKeys write Set_TransitionNavigKeys;
		property UsableHeight[lcid:Integer]:Double read Get_UsableHeight;
		property UsableWidth[lcid:Integer]:Double read Get_UsableWidth;
		property UserControl:WordBool read Get_UserControl write Set_UserControl;
		property UserName[lcid:Integer]:WideString read Get_UserName write Set_UserName;
		property Value:WideString read Get_Value;
		property VBE:VBE read Get_VBE;
		property Version[lcid:Integer]:WideString read Get_Version;
		property Visible[lcid:Integer]:WordBool read Get_Visible write Set_Visible;
		property Width[lcid:Integer]:Double read Get_Width write Set_Width;
		property WindowsForPens[lcid:Integer]:WordBool read Get_WindowsForPens;
		property WindowState[lcid:Integer]:XlWindowState read Get_WindowState write Set_WindowState;
		property UILanguage[lcid:Integer]:Integer read Get_UILanguage write Set_UILanguage;
		property DefaultSheetDirection[lcid:Integer]:Integer read Get_DefaultSheetDirection write Set_DefaultSheetDirection;
		property CursorMovement[lcid:Integer]:Integer read Get_CursorMovement write Set_CursorMovement;
		property ControlCharacters[lcid:Integer]:WordBool read Get_ControlCharacters write Set_ControlCharacters;
		property EnableEvents:WordBool read Get_EnableEvents write Set_EnableEvents;
		property DisplayInfoWindow:WordBool read Get_DisplayInfoWindow write Set_DisplayInfoWindow;
		property ExtendList:WordBool read Get_ExtendList write Set_ExtendList;
		property OLEDBErrors:OLEDBErrors read Get_OLEDBErrors;
		property COMAddIns:COMAddIns read Get_COMAddIns;
		property DefaultWebOptions:DefaultWebOptions read Get_DefaultWebOptions;
		property ProductCode:WideString read Get_ProductCode;
		property UserLibraryPath:WideString read Get_UserLibraryPath;
		property AutoPercentEntry:WordBool read Get_AutoPercentEntry write Set_AutoPercentEntry;
		property LanguageSettings:LanguageSettings read Get_LanguageSettings;
		property Dummy101:IDispatch read Get_Dummy101;
		property AnswerWizard:AnswerWizard read Get_AnswerWizard;
		property CalculationVersion:Integer read Get_CalculationVersion;
		property ShowWindowsInTaskbar:WordBool read Get_ShowWindowsInTaskbar write Set_ShowWindowsInTaskbar;
		property FeatureInstall:MsoFeatureInstall read Get_FeatureInstall write Set_FeatureInstall;
		property Ready:WordBool read Get_Ready;
		property FindFormat:CellFormat read Get_FindFormat write _Set_FindFormat;
		property ReplaceFormat:CellFormat read Get_ReplaceFormat write _Set_ReplaceFormat;
		property UsedObjects:UsedObjects read Get_UsedObjects;
		property CalculationState:XlCalculationState read Get_CalculationState;
		property CalculationInterruptKey:XlCalculationInterruptKey read Get_CalculationInterruptKey
			write Set_CalculationInterruptKey;
		property Watches:Watches read Get_Watches;
		property DisplayFunctionToolTips:WordBool read Get_DisplayFunctionToolTips write Set_DisplayFunctionToolTips;
		property AutomationSecurity:MsoAutomationSecurity read Get_AutomationSecurity write Set_AutomationSecurity;
		property FileDialog[fileDialogType:MsoFileDialogType]:FileDialog read Get_FileDialog;
		property DisplayPasteOptions:WordBool read Get_DisplayPasteOptions write Set_DisplayPasteOptions;
		property DisplayInsertOptions:WordBool read Get_DisplayInsertOptions write Set_DisplayInsertOptions;
		property GenerateGetPivotData:WordBool read Get_GenerateGetPivotData write Set_GenerateGetPivotData;
		property AutoRecover:AutoRecover read Get_AutoRecover;
		property HWND_:Integer read Get_HWND_;
		property Hinstance:Integer read Get_Hinstance;
		property ErrorCheckingOptions:ErrorCheckingOptions read Get_ErrorCheckingOptions;
		property AutoFormatAsYouTypeReplaceHyperlinks:WordBool read Get_AutoFormatAsYouTypeReplaceHyperlinks
			write Set_AutoFormatAsYouTypeReplaceHyperlinks;
		property SmartTagRecognizers:SmartTagRecognizers read Get_SmartTagRecognizers;
		property NewWorkbook:NewFile read Get_NewWorkbook;
		property SpellingOptions:SpellingOptions read Get_SpellingOptions;
		property Speech:Speech read Get_Speech;
		property MapPaperSize:WordBool read Get_MapPaperSize write Set_MapPaperSize;
		property ShowStartupDialog:WordBool read Get_ShowStartupDialog write Set_ShowStartupDialog;
		property DecimalSeparator:WideString read Get_DecimalSeparator write Set_DecimalSeparator;
		property ThousandsSeparator:WideString read Get_ThousandsSeparator write Set_ThousandsSeparator;
		property UseSystemSeparators:WordBool read Get_UseSystemSeparators write Set_UseSystemSeparators;
		property ThisCell:ExcelRange read Get_ThisCell;
		property RTD:RTD read Get_RTD;
		property DisplayDocumentActionTaskPane:WordBool read Get_DisplayDocumentActionTaskPane
			write Set_DisplayDocumentActionTaskPane;
		property ArbitraryXMLSupportAvailable:WordBool read Get_ArbitraryXMLSupportAvailable;
		property MeasurementUnit:Integer read Get_MeasurementUnit write Set_MeasurementUnit;
		property ShowSelectionFloaties:WordBool read Get_ShowSelectionFloaties write Set_ShowSelectionFloaties;
		property ShowMenuFloaties:WordBool read Get_ShowMenuFloaties write Set_ShowMenuFloaties;
		property ShowDevTools:WordBool read Get_ShowDevTools write Set_ShowDevTools;
		property EnableLivePreview:WordBool read Get_EnableLivePreview write Set_EnableLivePreview;
		property DisplayDocumentInformationPanel:WordBool read Get_DisplayDocumentInformationPanel
			write Set_DisplayDocumentInformationPanel;
		property AlwaysUseClearType:WordBool read Get_AlwaysUseClearType write Set_AlwaysUseClearType;
		property WarnOnFunctionNameConflict:WordBool read Get_WarnOnFunctionNameConflict
			write Set_WarnOnFunctionNameConflict;
		property FormulaBarHeight:Integer read Get_FormulaBarHeight write Set_FormulaBarHeight;
		property DisplayFormulaAutoComplete:WordBool read Get_DisplayFormulaAutoComplete
			write Set_DisplayFormulaAutoComplete;
		property GenerateTableRefs[lcid:Integer]:XlGenerateTableRefs read Get_GenerateTableRefs write Set_GenerateTableRefs;
		property Assistance:IAssistance read Get_Assistance;
		property EnableLargeOperationAlert:WordBool read Get_EnableLargeOperationAlert write Set_EnableLargeOperationAlert;
		property LargeOperationCellThousandCount:Integer read Get_LargeOperationCellThousandCount
			write Set_LargeOperationCellThousandCount;
		property DeferAsyncQueries:WordBool read Get_DeferAsyncQueries write Set_DeferAsyncQueries;
		property MultiThreadedCalculation:MultiThreadedCalculation read Get_MultiThreadedCalculation;
		property ActiveEncryptionSession:Integer read Get_ActiveEncryptionSession;
		property HighQualityModeForGraphics:WordBool read Get_HighQualityModeForGraphics
			write Set_HighQualityModeForGraphics;
		property FileExportConverters:FileExportConverters read Get_FileExportConverters;
		property SmartArtLayouts:SmartArtLayouts read Get_SmartArtLayouts;
		property SmartArtQuickStyles:SmartArtQuickStyles read Get_SmartArtQuickStyles;
		property SmartArtColors:SmartArtColors read Get_SmartArtColors;
		property AddIns2:AddIns2 read Get_AddIns2;
		property PrintCommunication:WordBool read Get_PrintCommunication write Set_PrintCommunication;
		property UseClusterConnector:WordBool read Get_UseClusterConnector write Set_UseClusterConnector;
		property ClusterConnector:WideString read Get_ClusterConnector write Set_ClusterConnector;
		property Quitting:WordBool read Get_Quitting;
		property Dummy22:WordBool read Get_Dummy22 write Set_Dummy22;
		property Dummy23:WordBool read Get_Dummy23 write Set_Dummy23;
		property ProtectedViewWindows:ProtectedViewWindows read Get_ProtectedViewWindows;
		property ActiveProtectedViewWindow:ProtectedViewWindow read Get_ActiveProtectedViewWindow;
		property IsSandboxed:WordBool read Get_IsSandboxed;
		property SaveISO8601Dates:WordBool read Get_SaveISO8601Dates write Set_SaveISO8601Dates;
		property HinstancePtr:OleVariant read Get_HinstancePtr;
		property FileValidation:MsoFileValidationMode read Get_FileValidation write Set_FileValidation;
		property FileValidationPivot:XlFileValidationPivotMode read Get_FileValidationPivot write Set_FileValidationPivot;
		property ShowQuickAnalysis:WordBool read Get_ShowQuickAnalysis write Set_ShowQuickAnalysis;
		property QuickAnalysis:QuickAnalysis read Get_QuickAnalysis;
		property FlashFill:WordBool read Get_FlashFill write Set_FlashFill;
		property EnableMacroAnimations:WordBool read Get_EnableMacroAnimations write Set_EnableMacroAnimations;
		property ChartDataPointTrack:WordBool read Get_ChartDataPointTrack write Set_ChartDataPointTrack;
		property FlashFillMode:WordBool read Get_FlashFillMode write Set_FlashFillMode;
		property MergeInstances:WordBool read Get_MergeInstances write Set_MergeInstances;
		property EnableCheckFileExtensions:WordBool read Get_EnableCheckFileExtensions write Set_EnableCheckFileExtensions;
		property DefaultPivotTableLayoutOptions:DefaultPivotTableLayoutOptions read Get_DefaultPivotTableLayoutOptions;
		property CSVKeepLeadingZerosAsText:WordBool read Get_CSVKeepLeadingZerosAsText write Set_CSVKeepLeadingZerosAsText;
		property CSVKeepLargeNumbersAsText:WordBool read Get_CSVKeepLargeNumbersAsText write Set_CSVKeepLargeNumbersAsText;
		property CSVKeepDigitsWithEAsText:WordBool read Get_CSVKeepDigitsWithEAsText write Set_CSVKeepDigitsWithEAsText;
		property CSVDisplayNumberConversionWarning:WordBool read Get_CSVDisplayNumberConversionWarning
			write Set_CSVDisplayNumberConversionWarning;
		property CSVKeepColumnAsTextIfMultipleEntriesAreText:WordBool read Get_CSVKeepColumnAsTextIfMultipleEntriesAreText
			write Set_CSVKeepColumnAsTextIfMultipleEntriesAreText;
		property DataPrivacyOptions:DataPrivacyOptions read Get_DataPrivacyOptions;
		property ShowConvertToDataType:WordBool read Get_ShowConvertToDataType write Set_ShowConvertToDataType;
	end;

	// *********************************************************************//
	// DispIntf:  _ApplicationDisp
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {000208D5-0000-0000-C000-000000000046}
	// *********************************************************************//
	_ApplicationDisp=dispinterface
		['{000208D5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:ExcelApplication readonly dispid 150;
		property ActiveCell:ExcelRange readonly dispid 305;
		property ActiveChart:ExcelChart readonly dispid 183;
		property ActiveDialog:DialogSheet readonly dispid 815;
		property ActiveMenuBar:MenuBar readonly dispid 758;
		property ActivePrinter[lcid:Integer]:WideString dispid 306;
		property ActiveSheet:IDispatch readonly dispid 307;
		property ActiveWindow:Window readonly dispid 759;
		property ActiveWorkbook:ExcelWorkbook readonly dispid 308;
		property AddIns:AddIns readonly dispid 549;
		property Assistant:Assistant readonly dispid 1438;
		procedure Calculate(lcid:Integer);dispid 279;
		property Cells:ExcelRange readonly dispid 238;
		property Charts:Sheets readonly dispid 121;
		property Columns:ExcelRange readonly dispid 241;
		property CommandBars:CommandBars readonly dispid 1439;
		property DDEAppReturnCode[lcid:Integer]:Integer readonly dispid 332;
		procedure DDEExecute(Channel:Integer;const String_:WideString;lcid:Integer);dispid 333;
		function DDEInitiate(const App:WideString;const Topic:WideString;lcid:Integer):Integer;dispid 334;
		procedure DDEPoke(Channel:Integer;Item:OleVariant;Data:OleVariant;lcid:Integer);dispid 335;
		function DDERequest(Channel:Integer;const Item:WideString;lcid:Integer):OleVariant;dispid 336;
		procedure DDETerminate(Channel:Integer;lcid:Integer);dispid 337;
		property DialogSheets:Sheets readonly dispid 764;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid 1;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid-5;
		function ExecuteExcel4Macro(const String_:WideString;lcid:Integer):OleVariant;dispid 350;
		function Intersect(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;dispid 766;
		property MenuBars:MenuBars readonly dispid 589;
		property Modules:Modules readonly dispid 582;
		property Names:Names readonly dispid 442;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange readonly dispid 197;
		property Rows:ExcelRange readonly dispid 258;
		function Run(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):OleVariant;dispid 259;
		function _Run2(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;dispid 806;
		property Selection[lcid:Integer]:IDispatch readonly dispid 147;
		procedure SendKeys(Keys:OleVariant;Wait:OleVariant;lcid:Integer);dispid 383;
		property Sheets:Sheets readonly dispid 485;
		property ShortcutMenus[Index:Integer]:Menu readonly dispid 776;
		property ThisWorkbook[lcid:Integer]:ExcelWorkbook readonly dispid 778;
		property Toolbars:Toolbars readonly dispid 552;
		function Union(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;dispid 779;
		property Windows:Windows readonly dispid 430;
		property Workbooks:Workbooks readonly dispid 572;
		property WorksheetFunction:WorksheetFunction readonly dispid 1440;
		property Worksheets:Sheets readonly dispid 494;
		property Excel4IntlMacroSheets:Sheets readonly dispid 581;
		property Excel4MacroSheets:Sheets readonly dispid 579;
		procedure ActivateMicrosoftApp(Index:XlMSApplication;lcid:Integer);dispid 1095;
		procedure AddChartAutoFormat(Chart:OleVariant;const Name:WideString;Description:OleVariant;lcid:Integer);dispid 216;
		procedure AddCustomList(ListArray:OleVariant;ByRow:OleVariant;lcid:Integer);dispid 780;
		property AlertBeforeOverwriting[lcid:Integer]:WordBool dispid 930;
		property AltStartupPath[lcid:Integer]:WideString dispid 313;
		property AskToUpdateLinks[lcid:Integer]:WordBool dispid 992;
		property EnableAnimations[lcid:Integer]:WordBool dispid 1180;
		property AutoCorrect:AutoCorrect readonly dispid 1145;
		property Build[lcid:Integer]:Integer readonly dispid 314;
		property CalculateBeforeSave[lcid:Integer]:WordBool dispid 315;
		property Calculation[lcid:Integer]:XlCalculation dispid 316;
		property Caller[Index:OleVariant;lcid:Integer]:OleVariant readonly dispid 317;
		property CanPlaySounds[lcid:Integer]:WordBool readonly dispid 318;
		property CanRecordSounds[lcid:Integer]:WordBool readonly dispid 319;
		property Caption:WideString dispid 139;
		property CellDragAndDrop[lcid:Integer]:WordBool dispid 320;
		function CentimetersToPoints(Centimeters:Double;lcid:Integer):Double;dispid 1086;
		function CheckSpelling(const Word:WideString;CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;lcid:Integer)
			:WordBool;dispid 505;
		property ClipboardFormats[Index:OleVariant;lcid:Integer]:OleVariant readonly dispid 321;
		property DisplayClipboardWindow[lcid:Integer]:WordBool dispid 322;
		property ColorButtons:WordBool dispid 365;
		property CommandUnderlines[lcid:Integer]:XlCommandUnderlines dispid 323;
		property ConstrainNumeric[lcid:Integer]:WordBool dispid 324;
		function ConvertFormula(Formula:OleVariant;FromReferenceStyle:XlReferenceStyle;ToReferenceStyle:OleVariant;
			ToAbsolute:OleVariant;RelativeTo:OleVariant;lcid:Integer):OleVariant;dispid 325;
		property CopyObjectsWithCells[lcid:Integer]:WordBool dispid 991;
		property Cursor[lcid:Integer]:XlMousePointer dispid 1161;
		property CustomListCount[lcid:Integer]:Integer readonly dispid 787;
		property CutCopyMode[lcid:Integer]:XlCutCopyMode dispid 330;
		property DataEntryMode[lcid:Integer]:Integer dispid 331;
		function Dummy1(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 1782;
		function Dummy2(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant):OleVariant;dispid 1783;
		function Dummy3:OleVariant;dispid 1784;
		function Dummy4(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant):OleVariant;dispid 1785;
		function Dummy5(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant):OleVariant;dispid 1786;
		function Dummy6:OleVariant;dispid 1787;
		function Dummy7:OleVariant;dispid 1788;
		function Dummy8(Arg1:OleVariant):OleVariant;dispid 1789;
		function Dummy9:OleVariant;dispid 1790;
		function Dummy10(arg:OleVariant):WordBool;dispid 1791;
		procedure Dummy11;dispid 1792;
		property _Default:WideString readonly dispid 0;
		property DefaultFilePath[lcid:Integer]:WideString dispid 1038;
		procedure DeleteChartAutoFormat(const Name:WideString;lcid:Integer);dispid 217;
		procedure DeleteCustomList(ListNum:Integer;lcid:Integer);dispid 783;
		property Dialogs:Dialogs readonly dispid 761;
		property DisplayAlerts[lcid:Integer]:WordBool dispid 343;
		property DisplayFormulaBar[lcid:Integer]:WordBool dispid 344;
		property DisplayFullScreen[lcid:Integer]:WordBool dispid 1061;
		property DisplayNoteIndicator:WordBool dispid 345;
		property DisplayCommentIndicator:XlCommentDisplayMode dispid 1196;
		property DisplayExcel4Menus[lcid:Integer]:WordBool dispid 927;
		property DisplayRecentFiles:WordBool dispid 926;
		property DisplayScrollBars[lcid:Integer]:WordBool dispid 346;
		property DisplayStatusBar[lcid:Integer]:WordBool dispid 347;
		procedure DoubleClick(lcid:Integer);dispid 349;
		property EditDirectlyInCell[lcid:Integer]:WordBool dispid 929;
		property EnableAutoComplete:WordBool dispid 1179;
		property EnableCancelKey[lcid:Integer]:XlEnableCancelKey dispid 1096;
		property EnableSound:WordBool dispid 1197;
		property EnableTipWizard[lcid:Integer]:WordBool dispid 1064;
		property FileConverters[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant readonly dispid 931;
		property FileSearch:FileSearch readonly dispid 1200;
		property FileFind:IFind readonly dispid 1201;
		procedure _FindFile(lcid:Integer);dispid 1068;
		property FixedDecimal[lcid:Integer]:WordBool dispid 351;
		property FixedDecimalPlaces[lcid:Integer]:Integer dispid 352;
		function GetCustomListContents(ListNum:Integer;lcid:Integer):OleVariant;dispid 786;
		function GetCustomListNum(ListArray:OleVariant;lcid:Integer):Integer;dispid 785;
		function GetOpenFilename(FileFilter:OleVariant;FilterIndex:OleVariant;Title:OleVariant;ButtonText:OleVariant;
			MultiSelect:OleVariant;lcid:Integer):OleVariant;dispid 1075;
		function GetSaveAsFilename(InitialFilename:OleVariant;FileFilter:OleVariant;FilterIndex:OleVariant;Title:OleVariant;
			ButtonText:OleVariant;lcid:Integer):OleVariant;dispid 1076;
		procedure Goto_(Reference:OleVariant;Scroll:OleVariant;lcid:Integer);dispid 475;
		property Height[lcid:Integer]:Double dispid 123;
		procedure Help(HelpFile:OleVariant;HelpContextID:OleVariant;lcid:Integer);dispid 354;
		property IgnoreRemoteRequests[lcid:Integer]:WordBool dispid 356;
		function InchesToPoints(Inches:Double;lcid:Integer):Double;dispid 1087;
		function InputBox(const Prompt:WideString;Title:OleVariant;Default:OleVariant;Left:OleVariant;Top:OleVariant;
			HelpFile:OleVariant;HelpContextID:OleVariant;Type_:OleVariant;lcid:Integer):OleVariant;dispid 357;
		property Interactive[lcid:Integer]:WordBool dispid 361;
		property International[Index:OleVariant;lcid:Integer]:OleVariant readonly dispid 362;
		property Iteration[lcid:Integer]:WordBool dispid 363;
		property LargeButtons:WordBool dispid 364;
		property Left[lcid:Integer]:Double dispid 127;
		property LibraryPath[lcid:Integer]:WideString readonly dispid 366;
		procedure _MacroOptions(Macro:OleVariant;Description:OleVariant;HasMenu:OleVariant;MenuText:OleVariant;
			HasShortcutKey:OleVariant;ShortcutKey:OleVariant;Category:OleVariant;StatusBar:OleVariant;
			HelpContextID:OleVariant;HelpFile:OleVariant;lcid:Integer);dispid 1135;
		procedure MailLogoff(lcid:Integer);dispid 945;
		procedure MailLogon(Name:OleVariant;Password:OleVariant;DownloadNewMail:OleVariant;lcid:Integer);dispid 943;
		property MailSession[lcid:Integer]:OleVariant readonly dispid 942;
		property MailSystem[lcid:Integer]:XlMailSystem readonly dispid 971;
		property MathCoprocessorAvailable[lcid:Integer]:WordBool readonly dispid 367;
		property MaxChange[lcid:Integer]:Double dispid 368;
		property MaxIterations[lcid:Integer]:Integer dispid 369;
		property MemoryFree[lcid:Integer]:Integer readonly dispid 370;
		property MemoryTotal[lcid:Integer]:Integer readonly dispid 371;
		property MemoryUsed[lcid:Integer]:Integer readonly dispid 372;
		property MouseAvailable[lcid:Integer]:WordBool readonly dispid 373;
		property MoveAfterReturn[lcid:Integer]:WordBool dispid 374;
		property MoveAfterReturnDirection[lcid:Integer]:XlDirection dispid 1144;
		property RecentFiles:RecentFiles readonly dispid 1202;
		property Name:WideString readonly dispid 110;
		function NextLetter(lcid:Integer):ExcelWorkbook;dispid 972;
		property NetworkTemplatesPath[lcid:Integer]:WideString readonly dispid 388;
		property ODBCErrors:ODBCErrors readonly dispid 1203;
		property ODBCTimeout:Integer dispid 1204;
		property OnCalculate[lcid:Integer]:WideString dispid 625;
		property OnData[lcid:Integer]:WideString dispid 629;
		property OnDoubleClick[lcid:Integer]:WideString dispid 628;
		property OnEntry[lcid:Integer]:WideString dispid 627;
		procedure OnKey(const Key:WideString;Procedure_:OleVariant;lcid:Integer);dispid 626;
		procedure OnRepeat(const Text:WideString;const Procedure_:WideString;lcid:Integer);dispid 769;
		property OnSheetActivate[lcid:Integer]:WideString dispid 1031;
		property OnSheetDeactivate[lcid:Integer]:WideString dispid 1081;
		procedure OnTime(EarliestTime:OleVariant;const Procedure_:WideString;LatestTime:OleVariant;Schedule:OleVariant;
			lcid:Integer);dispid 624;
		procedure OnUndo(const Text:WideString;const Procedure_:WideString;lcid:Integer);dispid 770;
		property OnWindow[lcid:Integer]:WideString dispid 623;
		property OperatingSystem[lcid:Integer]:WideString readonly dispid 375;
		property OrganizationName[lcid:Integer]:WideString readonly dispid 376;
		property Path[lcid:Integer]:WideString readonly dispid 291;
		property PathSeparator[lcid:Integer]:WideString readonly dispid 377;
		property PreviousSelections[Index:OleVariant;lcid:Integer]:OleVariant readonly dispid 378;
		property PivotTableSelection:WordBool dispid 1205;
		property PromptForSummaryInfo[lcid:Integer]:WordBool dispid 1062;
		procedure Quit;dispid 302;
		procedure RecordMacro(BasicCode:OleVariant;XlmCode:OleVariant;lcid:Integer);dispid 773;
		property RecordRelative[lcid:Integer]:WordBool readonly dispid 379;
		property ReferenceStyle[lcid:Integer]:XlReferenceStyle dispid 380;
		property RegisteredFunctions[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant readonly dispid 775;
		function RegisterXLL(const Filename:WideString;lcid:Integer):WordBool;dispid 30;
		procedure Repeat_(lcid:Integer);dispid 301;
		procedure ResetTipWizard(lcid:Integer);dispid 928;
		property RollZoom:WordBool dispid 1206;
		procedure Save(Filename:OleVariant;lcid:Integer);dispid 283;
		procedure SaveWorkspace(Filename:OleVariant;lcid:Integer);dispid 212;
		property ScreenUpdating[lcid:Integer]:WordBool dispid 382;
		procedure SetDefaultChart(FormatName:OleVariant;Gallery:OleVariant);dispid 219;
		property SheetsInNewWorkbook[lcid:Integer]:Integer dispid 993;
		property ShowChartTipNames:WordBool dispid 1207;
		property ShowChartTipValues:WordBool dispid 1208;
		property StandardFont[lcid:Integer]:WideString dispid 924;
		property StandardFontSize[lcid:Integer]:Double dispid 925;
		property StartupPath[lcid:Integer]:WideString readonly dispid 385;
		property StatusBar[lcid:Integer]:OleVariant dispid 386;
		property TemplatesPath[lcid:Integer]:WideString readonly dispid 381;
		property ShowToolTips:WordBool dispid 387;
		property Top[lcid:Integer]:Double dispid 126;
		property DefaultSaveFormat:XlFileFormat dispid 1209;
		property TransitionMenuKey[lcid:Integer]:WideString dispid 310;
		property TransitionMenuKeyAction[lcid:Integer]:Integer dispid 311;
		property TransitionNavigKeys[lcid:Integer]:WordBool dispid 312;
		procedure Undo(lcid:Integer);dispid 303;
		property UsableHeight[lcid:Integer]:Double readonly dispid 389;
		property UsableWidth[lcid:Integer]:Double readonly dispid 390;
		property UserControl:WordBool dispid 1210;
		property UserName[lcid:Integer]:WideString dispid 391;
		property Value:WideString readonly dispid 6;
		property VBE:VBE readonly dispid 1211;
		property Version[lcid:Integer]:WideString readonly dispid 392;
		property Visible[lcid:Integer]:WordBool dispid 558;
		procedure Volatile(Volatile:OleVariant;lcid:Integer);dispid 788;
		procedure _Wait(Time:OleVariant;lcid:Integer);dispid 393;
		property Width[lcid:Integer]:Double dispid 122;
		property WindowsForPens[lcid:Integer]:WordBool readonly dispid 395;
		property WindowState[lcid:Integer]:XlWindowState dispid 396;
		property UILanguage[lcid:Integer]:Integer dispid 2;
		property DefaultSheetDirection[lcid:Integer]:Integer dispid 229;
		property CursorMovement[lcid:Integer]:Integer dispid 232;
		property ControlCharacters[lcid:Integer]:WordBool dispid 233;
		function _WSFunction(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;dispid 169;
		property EnableEvents:WordBool dispid 1212;
		property DisplayInfoWindow:WordBool dispid 1213;
		function Wait(Time:OleVariant;lcid:Integer):WordBool;dispid 1770;
		property ExtendList:WordBool dispid 1793;
		property OLEDBErrors:OLEDBErrors readonly dispid 1794;
		function GetPhonetic(Text:OleVariant):WideString;dispid 1795;
		property COMAddIns:COMAddIns readonly dispid 1796;
		property DefaultWebOptions:DefaultWebOptions readonly dispid 1797;
		property ProductCode:WideString readonly dispid 1798;
		property UserLibraryPath:WideString readonly dispid 1799;
		property AutoPercentEntry:WordBool dispid 1800;
		property LanguageSettings:LanguageSettings readonly dispid 1801;
		property Dummy101:IDispatch readonly dispid 1802;
		procedure Dummy12(const p1:PivotTable;const p2:PivotTable);dispid 1803;
		property AnswerWizard:AnswerWizard readonly dispid 1804;
		procedure CalculateFull;dispid 1805;
		function FindFile(lcid:Integer):WordBool;dispid 1771;
		property CalculationVersion:Integer readonly dispid 1806;
		property ShowWindowsInTaskbar:WordBool dispid 1807;
		property FeatureInstall:MsoFeatureInstall dispid 1808;
		property Ready:WordBool readonly dispid 1932;
		function Dummy13(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 1933;
		property FindFormat:CellFormat dispid 1934;
		property ReplaceFormat:CellFormat dispid 1935;
		property UsedObjects:UsedObjects readonly dispid 1936;
		property CalculationState:XlCalculationState readonly dispid 1937;
		property CalculationInterruptKey:XlCalculationInterruptKey dispid 1938;
		property Watches:Watches readonly dispid 1939;
		property DisplayFunctionToolTips:WordBool dispid 1940;
		property AutomationSecurity:MsoAutomationSecurity dispid 1941;
		property FileDialog[fileDialogType:MsoFileDialogType]:FileDialog readonly dispid 1942;
		procedure Dummy14;dispid 1944;
		procedure CalculateFullRebuild;dispid 1945;
		property DisplayPasteOptions:WordBool dispid 1946;
		property DisplayInsertOptions:WordBool dispid 1947;
		property GenerateGetPivotData:WordBool dispid 1948;
		property AutoRecover:AutoRecover readonly dispid 1949;
		property HWND_:Integer readonly dispid 1950;
		property Hinstance:Integer readonly dispid 1951;
		procedure CheckAbort(KeepAbort:OleVariant);dispid 1952;
		property ErrorCheckingOptions:ErrorCheckingOptions readonly dispid 1954;
		property AutoFormatAsYouTypeReplaceHyperlinks:WordBool dispid 1955;
		property SmartTagRecognizers:SmartTagRecognizers readonly dispid 1956;
		property NewWorkbook:NewFile readonly dispid 1565;
		property SpellingOptions:SpellingOptions readonly dispid 1957;
		property Speech:Speech readonly dispid 1958;
		property MapPaperSize:WordBool dispid 1959;
		property ShowStartupDialog:WordBool dispid 1960;
		property DecimalSeparator:WideString dispid 1809;
		property ThousandsSeparator:WideString dispid 1810;
		property UseSystemSeparators:WordBool dispid 1961;
		property ThisCell:ExcelRange readonly dispid 1962;
		property RTD:RTD readonly dispid 1963;
		property DisplayDocumentActionTaskPane:WordBool dispid 2251;
		procedure DisplayXMLSourcePane(XmlMap:OleVariant);dispid 2252;
		property ArbitraryXMLSupportAvailable:WordBool readonly dispid 2254;
		function Support(const Object_:IDispatch;ID:Integer;arg:OleVariant):OleVariant;dispid 2255;
		function Dummy20(grfCompareFunctions:Integer):OleVariant;dispid 2373;
		property MeasurementUnit:Integer dispid 2375;
		property ShowSelectionFloaties:WordBool dispid 2376;
		property ShowMenuFloaties:WordBool dispid 2377;
		property ShowDevTools:WordBool dispid 2378;
		property EnableLivePreview:WordBool dispid 2379;
		property DisplayDocumentInformationPanel:WordBool dispid 2380;
		property AlwaysUseClearType:WordBool dispid 2381;
		property WarnOnFunctionNameConflict:WordBool dispid 2382;
		property FormulaBarHeight:Integer dispid 2383;
		property DisplayFormulaAutoComplete:WordBool dispid 2384;
		property GenerateTableRefs[lcid:Integer]:XlGenerateTableRefs dispid 2385;
		property Assistance:IAssistance readonly dispid 2386;
		procedure CalculateUntilAsyncQueriesDone;dispid 2387;
		property EnableLargeOperationAlert:WordBool dispid 2388;
		property LargeOperationCellThousandCount:Integer dispid 2389;
		property DeferAsyncQueries:WordBool dispid 2390;
		property MultiThreadedCalculation:MultiThreadedCalculation readonly dispid 2391;
		function SharePointVersion(const bstrUrl:WideString):Integer;dispid 2392;
		property ActiveEncryptionSession:Integer readonly dispid 2394;
		property HighQualityModeForGraphics:WordBool dispid 2395;
		property FileExportConverters:FileExportConverters readonly dispid 2768;
		property SmartArtLayouts:SmartArtLayouts readonly dispid 2772;
		property SmartArtQuickStyles:SmartArtQuickStyles readonly dispid 2773;
		property SmartArtColors:SmartArtColors readonly dispid 2774;
		property AddIns2:AddIns2 readonly dispid 2775;
		property PrintCommunication:WordBool dispid 2776;
		procedure MacroOptions(Macro:OleVariant;Description:OleVariant;HasMenu:OleVariant;MenuText:OleVariant;
			HasShortcutKey:OleVariant;ShortcutKey:OleVariant;Category:OleVariant;StatusBar:OleVariant;
			HelpContextID:OleVariant;HelpFile:OleVariant;ArgumentDescriptions:OleVariant;lcid:Integer);dispid 2770;
		property UseClusterConnector:WordBool dispid 2778;
		property ClusterConnector:WideString dispid 2779;
		property Quitting:WordBool readonly dispid 2780;
		property Dummy22:WordBool dispid 2781;
		property Dummy23:WordBool dispid 2782;
		property ProtectedViewWindows:ProtectedViewWindows readonly dispid 2783;
		property ActiveProtectedViewWindow:ProtectedViewWindow readonly dispid 2784;
		property IsSandboxed:WordBool readonly dispid 2785;
		property SaveISO8601Dates:WordBool dispid 2786;
		property HinstancePtr:OleVariant readonly dispid 2787;
		property FileValidation:MsoFileValidationMode dispid 2788;
		property FileValidationPivot:XlFileValidationPivotMode dispid 2789;
		property ShowQuickAnalysis:WordBool dispid 2994;
		property QuickAnalysis:QuickAnalysis readonly dispid 2995;
		property FlashFill:WordBool dispid 2996;
		property EnableMacroAnimations:WordBool dispid 2997;
		property ChartDataPointTrack:WordBool dispid 2998;
		property FlashFillMode:WordBool dispid 2999;
		property MergeInstances:WordBool dispid 3000;
		property EnableCheckFileExtensions:WordBool dispid 3158;
		property DefaultPivotTableLayoutOptions:DefaultPivotTableLayoutOptions readonly dispid 3271;
		property CSVKeepLeadingZerosAsText:WordBool dispid 3312;
		property CSVKeepLargeNumbersAsText:WordBool dispid 3313;
		property CSVKeepDigitsWithEAsText:WordBool dispid 3314;
		property CSVDisplayNumberConversionWarning:WordBool dispid 3315;
		property CSVKeepColumnAsTextIfMultipleEntriesAreText:WordBool dispid 3316;
		property DataPrivacyOptions:DataPrivacyOptions readonly dispid 3317;
		property ShowConvertToDataType:WordBool dispid 3311;
	end;

	// *********************************************************************//
	// Interface: IWorksheetFunction
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020845-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorksheetFunction=interface(IDispatch)
		['{00020845-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _WSFunction(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Count(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function IsNA(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function IsError(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function Sum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Average(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Min(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Max(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Npv(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function StDev(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Dollar(Arg1:Double;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Fixed(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;out RHS:WideString):HResult;stdcall;
		function Pi(out RHS:Double):HResult;stdcall;
		function Ln(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Log10(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Round(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Lookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Index(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Rept(const Arg1:WideString;Arg2:Double;out RHS:WideString):HResult;stdcall;
		function And_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WordBool):HResult;stdcall;
		function Or_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WordBool):HResult;stdcall;
		function DCount(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DSum(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DAverage(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DMin(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DMax(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DStDev(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Var_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function DVar(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Text(Arg1:OleVariant;const Arg2:WideString;out RHS:WideString):HResult;stdcall;
		function LinEst(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Trend(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function LogEst(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Growth(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Pv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function Fv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function NPer(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function Pmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function Rate(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function MIrr(Arg1:OleVariant;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Irr(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Match(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Weekday(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Search(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Transpose(Arg1:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Atan2(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Asin(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Acos(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Choose(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function HLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function VLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Log(Arg1:Double;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Proper(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function Trim(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function Replace(const Arg1:WideString;Arg2:Double;Arg3:Double;const Arg4:WideString;out RHS:WideString)
			:HResult;stdcall;
		function Substitute(const Arg1:WideString;const Arg2:WideString;const Arg3:WideString;Arg4:OleVariant;
			out RHS:WideString):HResult;stdcall;
		function Find(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function IsErr(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function IsText(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function IsNumber(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function Sln(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Syd(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;out RHS:Double):HResult;stdcall;
		function Ddb(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function Clean(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function MDeterm(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function MInverse(Arg1:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function MMult(Arg1:OleVariant;Arg2:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Ipmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;Arg6:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function Ppmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;Arg6:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function CountA(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Product(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Fact(Arg1:Double;out RHS:Double):HResult;stdcall;
		function DProduct(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function IsNonText(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function StDevP(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function VarP(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function DStDevP(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function DVarP(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function IsLogical(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function DCountA(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function USDollar(Arg1:Double;Arg2:Double;out RHS:WideString):HResult;stdcall;
		function FindB(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function SearchB(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function ReplaceB(const Arg1:WideString;Arg2:Double;Arg3:Double;const Arg4:WideString;out RHS:WideString)
			:HResult;stdcall;
		function RoundUp(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function RoundDown(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Rank(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Days360(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Vdb(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:Double;Arg6:OleVariant;Arg7:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Median(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function SumProduct(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Sinh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Cosh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Tanh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Asinh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Acosh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Atanh(Arg1:Double;out RHS:Double):HResult;stdcall;
		function DGet(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Db(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;out RHS:Double):HResult;stdcall;
		function Frequency(Arg1:OleVariant;Arg2:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function AveDev(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function BetaDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function GammaLn(Arg1:Double;out RHS:Double):HResult;stdcall;
		function BetaInv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function BinomDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function ChiDist(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function ChiInv(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Combin(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Confidence(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function CritBinom(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Even(Arg1:Double;out RHS:Double):HResult;stdcall;
		function ExponDist(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function FDist(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function FInv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Fisher(Arg1:Double;out RHS:Double):HResult;stdcall;
		function FisherInv(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Floor(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function GammaDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function GammaInv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Ceiling(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function HypGeomDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;out RHS:Double):HResult;stdcall;
		function LogNormDist(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function LogInv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function NegBinomDist(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function NormDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function NormSDist(Arg1:Double;out RHS:Double):HResult;stdcall;
		function NormInv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function NormSInv(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Standardize(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Odd(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Permut(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Poisson(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function TDist(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Weibull(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function SumXMY2(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function SumX2MY2(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function SumX2PY2(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function ChiTest(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Correl(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Covar(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Forecast(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function FTest(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Intercept(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Pearson(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function RSq(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function StEyx(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Slope(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function TTest(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:Double;out RHS:Double):HResult;stdcall;
		function Prob(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function DevSq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function GeoMean(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function HarMean(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function SumSq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Kurt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Skew(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function ZTest(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Large(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Small(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Quartile(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Percentile(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function PercentRank(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Mode(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function TrimMean(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function TInv(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Power(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Radians(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Degrees(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Subtotal(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function SumIf(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function CountIf(const Arg1:ExcelRange;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function CountBlank(const Arg1:ExcelRange;out RHS:Double):HResult;stdcall;
		function Ispmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;out RHS:Double):HResult;stdcall;
		function Roman(Arg1:Double;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Asc(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function Dbcs(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function Phonetic(const Arg1:ExcelRange;out RHS:WideString):HResult;stdcall;
		function BahtText(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function ThaiDayOfWeek(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function ThaiDigit(const Arg1:WideString;out RHS:WideString):HResult;stdcall;
		function ThaiMonthOfYear(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function ThaiNumSound(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function ThaiNumString(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function ThaiStringLength(const Arg1:WideString;out RHS:Double):HResult;stdcall;
		function IsThaiDigit(const Arg1:WideString;out RHS:WordBool):HResult;stdcall;
		function RoundBahtDown(Arg1:Double;out RHS:Double):HResult;stdcall;
		function RoundBahtUp(Arg1:Double;out RHS:Double):HResult;stdcall;
		function ThaiYear(Arg1:Double;out RHS:Double):HResult;stdcall;
		function RTD(progID:OleVariant;server:OleVariant;topic1:OleVariant;topic2:OleVariant;topic3:OleVariant;
			topic4:OleVariant;topic5:OleVariant;topic6:OleVariant;topic7:OleVariant;topic8:OleVariant;topic9:OleVariant;
			topic10:OleVariant;topic11:OleVariant;topic12:OleVariant;topic13:OleVariant;topic14:OleVariant;topic15:OleVariant;
			topic16:OleVariant;topic17:OleVariant;topic18:OleVariant;topic19:OleVariant;topic20:OleVariant;topic21:OleVariant;
			topic22:OleVariant;topic23:OleVariant;topic24:OleVariant;topic25:OleVariant;topic26:OleVariant;topic27:OleVariant;
			topic28:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Hex2Bin(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Hex2Dec(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function Hex2Oct(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Dec2Bin(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Dec2Hex(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Dec2Oct(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Oct2Bin(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Oct2Hex(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Oct2Dec(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function Bin2Dec(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function Bin2Oct(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function Bin2Hex(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSub(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImDiv(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImPower(Arg1:OleVariant;Arg2:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImAbs(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSqrt(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImLn(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImLog2(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImLog10(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSin(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImCos(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImExp(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImArgument(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImConjugate(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function Imaginary(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function ImReal(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function Complex(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WideString):HResult;stdcall;
		function ImProduct(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WideString):HResult;stdcall;
		function SeriesSum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function FactDouble(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function SqrtPi(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function Quotient(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Delta(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function GeStep(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function IsEven(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function IsOdd(Arg1:OleVariant;out RHS:WordBool):HResult;stdcall;
		function MRound(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Erf(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function ErfC(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function BesselJ(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function BesselK(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function BesselY(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function BesselI(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Xirr(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Xnpv(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function PriceMat(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function YieldMat(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function IntRate(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function Received(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function Disc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function PriceDisc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function YieldDisc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function TBillEq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function TBillPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function TBillYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Price(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;out RHS:Double):HResult;stdcall;
		function DollarDe(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function DollarFr(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Nominal(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Effect(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function CumPrinc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function CumIPmt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function EDate(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function EoMonth(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function YearFrac(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupDayBs(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupDays(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupDaysNc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupNcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupNum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function CoupPcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function Duration(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function MDuration(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function OddLPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;out RHS:Double):HResult;stdcall;
		function OddLYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;out RHS:Double):HResult;stdcall;
		function OddFPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;out RHS:Double):HResult;stdcall;
		function OddFYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;out RHS:Double):HResult;stdcall;
		function RandBetween(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function WeekNum(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function AmorDegrc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;out RHS:Double):HResult;stdcall;
		function AmorLinc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;out RHS:Double):HResult;stdcall;
		function Convert(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function AccrInt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;out RHS:Double):HResult;stdcall;
		function AccrIntM(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function WorkDay(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function NetworkDays(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Gcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function MultiNomial(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;out RHS:Double):HResult;stdcall;
		function Lcm(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function FVSchedule(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function SumIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:Double):HResult;stdcall;
		function CountIfs(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;out RHS:Double):HResult;stdcall;
		function AverageIf(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function AverageIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:Double):HResult;stdcall;
		function IfError(Arg1:OleVariant;Arg2:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Aggregate(Arg1:Double;Arg2:Double;const Arg3:ExcelRange;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Confidence_Norm(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Confidence_T(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function ChiSq_Test(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function F_Test(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Covariance_P(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Covariance_S(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Expon_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function Gamma_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function Gamma_Inv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Mode_Mult(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Mode_Sngl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Norm_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function Norm_Inv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Percentile_Exc(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Percentile_Inc(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function PercentRank_Exc(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function PercentRank_Inc(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Poisson_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function Quartile_Exc(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Quartile_Inc(Arg1:OleVariant;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Rank_Avg(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Rank_Eq(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function StDev_S(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function StDev_P(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function T_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function T_Dist_2T(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function T_Dist_RT(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function T_Inv(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function T_Inv_2T(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Var_S(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Var_P(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Weibull_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function NetworkDays_Intl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function WorkDay_Intl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function ISO_Ceiling(Arg1:Double;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Dummy21(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Dummy19(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Beta_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;Arg5:OleVariant;Arg6:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function Beta_Inv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function ChiSq_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool;out RHS:Double):HResult;stdcall;
		function ChiSq_Dist_RT(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function ChiSq_Inv(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function ChiSq_Inv_RT(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function F_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function F_Dist_RT(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function F_Inv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function F_Inv_RT(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function HypGeom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:WordBool;out RHS:Double):HResult;stdcall;
		function LogNorm_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function LogNorm_Inv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function NegBinom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function Norm_S_Dist(Arg1:Double;Arg2:WordBool;out RHS:Double):HResult;stdcall;
		function Norm_S_Inv(Arg1:Double;out RHS:Double):HResult;stdcall;
		function T_Test(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:Double;out RHS:Double):HResult;stdcall;
		function Z_Test(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Binom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;out RHS:Double):HResult;stdcall;
		function Binom_Inv(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Erf_Precise(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function ErfC_Precise(Arg1:OleVariant;out RHS:Double):HResult;stdcall;
		function GammaLn_Precise(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Ceiling_Precise(Arg1:Double;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Floor_Precise(Arg1:Double;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Acot(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Acoth(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Cot(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Coth(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Csc(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Csch(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Sec(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Sech(Arg1:Double;out RHS:Double):HResult;stdcall;
		function ImCot(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImTan(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImCsc(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImCsch(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSec(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImSech(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function Bitand(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Bitor(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Bitxor(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Bitlshift(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Bitrshift(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Xor_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WordBool):HResult;stdcall;
		function Combina(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Permutationa(Arg1:Double;Arg2:Double;out RHS:Double):HResult;stdcall;
		function PDuration(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Base(Arg1:Double;Arg2:Double;Arg3:OleVariant;out RHS:WideString):HResult;stdcall;
		function Decimal(const Arg1:WideString;Arg2:Double;out RHS:Double):HResult;stdcall;
		function Days(Arg1:OleVariant;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function Binom_Dist_Range(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function Gamma(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Gauss(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Phi(Arg1:Double;out RHS:Double):HResult;stdcall;
		function Skew_p(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Rri(Arg1:Double;Arg2:Double;Arg3:Double;out RHS:Double):HResult;stdcall;
		function Unichar(Arg1:Double;out RHS:WideString):HResult;stdcall;
		function Unicode(const Arg1:WideString;out RHS:Double):HResult;stdcall;
		function Munit(Arg1:Double;out RHS:OleVariant):HResult;stdcall;
		function Arabic(const Arg1:WideString;out RHS:Double):HResult;stdcall;
		function IsoWeekNum(Arg1:Double;Arg2:OleVariant;out RHS:Double):HResult;stdcall;
		function NumberValue(const Arg1:WideString;const Arg2:WideString;const Arg3:WideString;out RHS:Double)
			:HResult;stdcall;
		function IsFormula(const Arg1:ExcelRange;out RHS:WordBool):HResult;stdcall;
		function IfNa(Arg1:OleVariant;Arg2:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Ceiling_Math(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Floor_Math(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function ImSinh(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function ImCosh(Arg1:OleVariant;out RHS:WideString):HResult;stdcall;
		function FilterXML(const Arg1:WideString;const Arg2:WideString;out RHS:OleVariant):HResult;stdcall;
		function WebService(const Arg1:WideString;out RHS:OleVariant):HResult;stdcall;
		function EncodeURL(const Arg1:WideString;out RHS:OleVariant):HResult;stdcall;
		function Forecast_ETS(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:Double):HResult;stdcall;
		function Forecast_ETS_ConfInt(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;out RHS:Double):HResult;stdcall;
		function Forecast_ETS_Seasonality(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double)
			:HResult;stdcall;
		function Forecast_Linear(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;out RHS:Double):HResult;stdcall;
		function Forecast_ETS_STAT(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;out RHS:Double):HResult;stdcall;
		function MaxIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:Double):HResult;stdcall;
		function MinIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:Double):HResult;stdcall;
		function TextJoin(var Arg1:WideString;Arg2:WordBool;var Arg3:WideString;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:WideString):HResult;stdcall;
		function Concat(var Arg1:WideString;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;out RHS:WideString)
			:HResult;stdcall;
		function Sort(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Unique(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function FieldValue(Arg1:OleVariant;const Arg2:WideString;out RHS:OleVariant):HResult;stdcall;
		function Filter(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Sequence(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function RandArray(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Single(Arg1:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SortBy(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function XMatch(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:Double):HResult;stdcall;
		function XLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function StockHistory(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020846-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRange=interface(IDispatch)
		['{00020846-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate(out RHS:OleVariant):HResult;stdcall;
		function Get_AddIndent(out RHS:OleVariant):HResult;stdcall;
		function Set_AddIndent(RHS:OleVariant):HResult;stdcall;
		function Get_Address(RowAbsolute:OleVariant;ColumnAbsolute:OleVariant;ReferenceStyle:XlReferenceStyle;
			External:OleVariant;RelativeTo:OleVariant;lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Get_AddressLocal(RowAbsolute:OleVariant;ColumnAbsolute:OleVariant;ReferenceStyle:XlReferenceStyle;
			External:OleVariant;RelativeTo:OleVariant;out RHS:WideString):HResult;stdcall;
		function AdvancedFilter(Action:XlFilterAction;CriteriaRange:OleVariant;CopyToRange:OleVariant;Unique:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function ApplyNames(Names:OleVariant;IgnoreRelativeAbsolute:OleVariant;UseRowColumnNames:OleVariant;
			OmitColumn:OleVariant;OmitRow:OleVariant;Order:XlApplyNamesOrder;AppendLast:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function ApplyOutlineStyles(out RHS:OleVariant):HResult;stdcall;
		function Get_Areas(out RHS:Areas):HResult;stdcall;
		function AutoComplete(const String_:WideString;out RHS:WideString):HResult;stdcall;
		function AutoFill(const Destination:ExcelRange;Type_:XlAutoFillType;out RHS:OleVariant):HResult;stdcall;
		function _AutoFilter(Field:OleVariant;Criteria1:OleVariant;Operator_:XlAutoFilterOperator;Criteria2:OleVariant;
			VisibleDropDown:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function AutoFit(out RHS:OleVariant):HResult;stdcall;
		function AutoFormat(Format:XlRangeAutoFormat;Number:OleVariant;Font:OleVariant;Alignment:OleVariant;
			Border:OleVariant;Pattern:OleVariant;Width:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function AutoOutline(out RHS:OleVariant):HResult;stdcall;
		function _BorderAround(LineStyle:OleVariant;Weight:XlBorderWeight;ColorIndex:XlColorIndex;Color:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Calculate(out RHS:OleVariant):HResult;stdcall;
		function Get_Cells(out RHS:ExcelRange):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Clear(out RHS:OleVariant):HResult;stdcall;
		function ClearContents(out RHS:OleVariant):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function ClearNotes(out RHS:OleVariant):HResult;stdcall;
		function ClearOutline(out RHS:OleVariant):HResult;stdcall;
		function Get_Column(out RHS:Integer):HResult;stdcall;
		function ColumnDifferences(Comparison:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Columns(out RHS:ExcelRange):HResult;stdcall;
		function Get_ColumnWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ColumnWidth(RHS:OleVariant):HResult;stdcall;
		function Consolidate(Sources:OleVariant;Function_:OleVariant;TopRow:OleVariant;LeftColumn:OleVariant;
			CreateLinks:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Copy(Destination:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function CopyFromRecordset(const Data:IUnknown;MaxRows:OleVariant;MaxColumns:OleVariant;out RHS:Integer)
			:HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function CreateNames(Top:OleVariant;Left:OleVariant;Bottom:OleVariant;Right:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function CreatePublisher(Edition:OleVariant;Appearance:XlPictureAppearance;ContainsPICT:OleVariant;
			ContainsBIFF:OleVariant;ContainsRTF:OleVariant;ContainsVALU:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_CurrentArray(out RHS:ExcelRange):HResult;stdcall;
		function Get_CurrentRegion(out RHS:ExcelRange):HResult;stdcall;
		function Cut(Destination:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function DataSeries(Rowcol:OleVariant;Type_:XlDataSeriesType;Date:XlDataSeriesDate;Step:OleVariant;Stop:OleVariant;
			Trend:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get__Default(RowIndex:OleVariant;ColumnIndex:OleVariant;lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set__Default(RowIndex:OleVariant;ColumnIndex:OleVariant;lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Delete(Shift:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Dependents(out RHS:ExcelRange):HResult;stdcall;
		function DialogBox(out RHS:OleVariant):HResult;stdcall;
		function Get_DirectDependents(out RHS:ExcelRange):HResult;stdcall;
		function Get_DirectPrecedents(out RHS:ExcelRange):HResult;stdcall;
		function EditionOptions(Type_:XlEditionType;Option:XlEditionOptionsOption;Name:OleVariant;Reference:OleVariant;
			Appearance:XlPictureAppearance;ChartSize:XlPictureAppearance;Format:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_End_(Direction:XlDirection;out RHS:ExcelRange):HResult;stdcall;
		function Get_EntireColumn(out RHS:ExcelRange):HResult;stdcall;
		function Get_EntireRow(out RHS:ExcelRange):HResult;stdcall;
		function FillDown(out RHS:OleVariant):HResult;stdcall;
		function FillLeft(out RHS:OleVariant):HResult;stdcall;
		function FillRight(out RHS:OleVariant):HResult;stdcall;
		function FillUp(out RHS:OleVariant):HResult;stdcall;
		function Find(What:OleVariant;After:OleVariant;LookIn:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			SearchDirection:XlSearchDirection;MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant;
			out RHS:ExcelRange):HResult;stdcall;
		function FindNext(After:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function FindPrevious(After:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Formula(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_FormulaArray(out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaArray(RHS:OleVariant):HResult;stdcall;
		function Get_FormulaLabel(out RHS:XlFormulaLabel):HResult;stdcall;
		function Set_FormulaLabel(RHS:XlFormulaLabel):HResult;stdcall;
		function Get_FormulaHidden(out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaHidden(RHS:OleVariant):HResult;stdcall;
		function Get_FormulaLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaLocal(RHS:OleVariant):HResult;stdcall;
		function Get_FormulaR1C1(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaR1C1(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaR1C1Local(RHS:OleVariant):HResult;stdcall;
		function FunctionWizard(out RHS:OleVariant):HResult;stdcall;
		function GoalSeek(Goal:OleVariant;const ChangingCell:ExcelRange;out RHS:WordBool):HResult;stdcall;
		function Group(Start:OleVariant;End_:OleVariant;By:OleVariant;Periods:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_HasArray(out RHS:OleVariant):HResult;stdcall;
		function Get_HasFormula(out RHS:OleVariant):HResult;stdcall;
		function Get_Height(out RHS:OleVariant):HResult;stdcall;
		function Get_Hidden(out RHS:OleVariant):HResult;stdcall;
		function Set_Hidden(RHS:OleVariant):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_IndentLevel(out RHS:OleVariant):HResult;stdcall;
		function Set_IndentLevel(RHS:OleVariant):HResult;stdcall;
		function InsertIndent(InsertAmount:Integer):HResult;stdcall;
		function Insert(Shift:OleVariant;CopyOrigin:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Item(RowIndex:OleVariant;ColumnIndex:OleVariant;lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Item(RowIndex:OleVariant;ColumnIndex:OleVariant;lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Justify(out RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:OleVariant):HResult;stdcall;
		function Get_ListHeaderRows(out RHS:Integer):HResult;stdcall;
		function ListNames(out RHS:OleVariant):HResult;stdcall;
		function Get_LocationInTable(out RHS:XlLocationInTable):HResult;stdcall;
		function Get_Locked(out RHS:OleVariant):HResult;stdcall;
		function Set_Locked(RHS:OleVariant):HResult;stdcall;
		function Merge(Across:OleVariant):HResult;stdcall;
		function UnMerge:HResult;stdcall;
		function Get_MergeArea(out RHS:ExcelRange):HResult;stdcall;
		function Get_MergeCells(out RHS:OleVariant):HResult;stdcall;
		function Set_MergeCells(RHS:OleVariant):HResult;stdcall;
		function Get_Name(out RHS:OleVariant):HResult;stdcall;
		function Set_Name(RHS:OleVariant):HResult;stdcall;
		function NavigateArrow(TowardPrecedent:OleVariant;ArrowNumber:OleVariant;LinkNumber:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Next(out RHS:ExcelRange):HResult;stdcall;
		function NoteText(Text:OleVariant;Start:OleVariant;Length:OleVariant;out RHS:WideString):HResult;stdcall;
		function Get_NumberFormat(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(RHS:OleVariant):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormatLocal(RHS:OleVariant):HResult;stdcall;
		function Get_Offset(RowOffset:OleVariant;ColumnOffset:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_OutlineLevel(out RHS:OleVariant):HResult;stdcall;
		function Set_OutlineLevel(RHS:OleVariant):HResult;stdcall;
		function Get_PageBreak(out RHS:Integer):HResult;stdcall;
		function Set_PageBreak(RHS:Integer):HResult;stdcall;
		function Parse(ParseLine:OleVariant;Destination:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function _PasteSpecial(Paste:XlPasteType;Operation:XlPasteSpecialOperation;SkipBlanks:OleVariant;
			Transpose:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_PivotField(out RHS:PivotField):HResult;stdcall;
		function Get_PivotItem(out RHS:PivotItem):HResult;stdcall;
		function Get_PivotTable(out RHS:PivotTable):HResult;stdcall;
		function Get_Precedents(out RHS:ExcelRange):HResult;stdcall;
		function Get_PrefixCharacter(out RHS:OleVariant):HResult;stdcall;
		function Get_Previous(out RHS:ExcelRange):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_QueryTable(out RHS:ExcelQueryTable):HResult;stdcall;
		function Get_Range(Cell1:OleVariant;Cell2:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function RemoveSubtotal(out RHS:OleVariant):HResult;stdcall;
		function _Replace(What:OleVariant;Replacement:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant;ReplaceFormat:OleVariant;out RHS:WordBool)
			:HResult;stdcall;
		function Get_Resize(RowSize:OleVariant;ColumnSize:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Row(out RHS:Integer):HResult;stdcall;
		function RowDifferences(Comparison:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_RowHeight(out RHS:OleVariant):HResult;stdcall;
		function Set_RowHeight(RHS:OleVariant):HResult;stdcall;
		function Get_Rows(out RHS:ExcelRange):HResult;stdcall;
		function Run(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Show(out RHS:OleVariant):HResult;stdcall;
		function ShowDependents(Remove:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ShowDetail(out RHS:OleVariant):HResult;stdcall;
		function Set_ShowDetail(RHS:OleVariant):HResult;stdcall;
		function ShowErrors(out RHS:OleVariant):HResult;stdcall;
		function ShowPrecedents(Remove:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ShrinkToFit(out RHS:OleVariant):HResult;stdcall;
		function Set_ShrinkToFit(RHS:OleVariant):HResult;stdcall;
		function _Sort(Key1:OleVariant;Order1:XlSortOrder;Key2:OleVariant;Type_:OleVariant;Order2:XlSortOrder;
			Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;MatchCase:OleVariant;
			Orientation:XlSortOrientation;SortMethod:XlSortMethod;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption;out RHS:OleVariant):HResult;stdcall;
		function SortSpecial(SortMethod:XlSortMethod;Key1:OleVariant;Order1:XlSortOrder;Type_:OleVariant;Key2:OleVariant;
			Order2:XlSortOrder;Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;
			MatchCase:OleVariant;Orientation:XlSortOrientation;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption;out RHS:OleVariant):HResult;stdcall;
		function Get_SoundNote(out RHS:SoundNote):HResult;stdcall;
		function SpecialCells(Type_:XlCellType;Value:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Style(out RHS:OleVariant):HResult;stdcall;
		function Set_Style(RHS:OleVariant):HResult;stdcall;
		function SubscribeTo(const Edition:WideString;Format:XlSubscribeToFormat;out RHS:OleVariant):HResult;stdcall;
		function Subtotal(GroupBy:Integer;Function_:XlConsolidationFunction;TotalList:OleVariant;Replace:OleVariant;
			PageBreaks:OleVariant;SummaryBelowData:XlSummaryRow;out RHS:OleVariant):HResult;stdcall;
		function Get_Summary(out RHS:OleVariant):HResult;stdcall;
		function Table(RowInput:OleVariant;ColumnInput:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:OleVariant):HResult;stdcall;
		function TextToColumns(Destination:OleVariant;DataType:XlTextParsingType;TextQualifier:XlTextQualifier;
			ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;Comma:OleVariant;Space:OleVariant;
			Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;DecimalSeparator:OleVariant;
			ThousandsSeparator:OleVariant;TrailingMinusNumbers:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:OleVariant):HResult;stdcall;
		function Ungroup(out RHS:OleVariant):HResult;stdcall;
		function Get_UseStandardHeight(out RHS:OleVariant):HResult;stdcall;
		function Set_UseStandardHeight(RHS:OleVariant):HResult;stdcall;
		function Get_UseStandardWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_UseStandardWidth(RHS:OleVariant):HResult;stdcall;
		function Get_Validation(out RHS:Validation):HResult;stdcall;
		function Get_Value(RangeValueDataType:OleVariant;lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RangeValueDataType:OleVariant;lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_Value2(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Value2(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Width(out RHS:OleVariant):HResult;stdcall;
		function Get_Worksheet(out RHS:ExcelWorksheet):HResult;stdcall;
		function Get_WrapText(out RHS:OleVariant):HResult;stdcall;
		function Set_WrapText(RHS:OleVariant):HResult;stdcall;
		function AddComment(Text:OleVariant;out RHS:Comment):HResult;stdcall;
		function Get_Comment(out RHS:Comment):HResult;stdcall;
		function ClearComments:HResult;stdcall;
		function Get_Phonetic(out RHS:Phonetic):HResult;stdcall;
		function Get_FormatConditions(out RHS:FormatConditions):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Hyperlinks(out RHS:Hyperlinks):HResult;stdcall;
		function Get_Phonetics(out RHS:Phonetics):HResult;stdcall;
		function SetPhonetic:HResult;stdcall;
		function Get_ID(out RHS:WideString):HResult;stdcall;
		function Set_ID(const RHS:WideString):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_PivotCell(out RHS:PivotCell):HResult;stdcall;
		function Dirty:HResult;stdcall;
		function Get_Errors(out RHS:Errors):HResult;stdcall;
		function Get_SmartTags(out RHS:SmartTags):HResult;stdcall;
		function Speak(SpeakDirection:OleVariant;SpeakFormulas:OleVariant):HResult;stdcall;
		function PasteSpecial(Paste:XlPasteType;Operation:XlPasteSpecialOperation;SkipBlanks:OleVariant;
			Transpose:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_AllowEdit(out RHS:WordBool):HResult;stdcall;
		function Get_ListObject(out RHS:ListObject):HResult;stdcall;
		function Get_XPath(out RHS:XPath):HResult;stdcall;
		function Get_ServerActions(out RHS:Actions):HResult;stdcall;
		function RemoveDuplicates(Columns:OleVariant;Header:XlYesNoGuess):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_MDX(out RHS:WideString):HResult;stdcall;
		function _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant):HResult;stdcall;
		function Get_CountLarge(out RHS:OleVariant):HResult;stdcall;
		function CalculateRowMajorOrder(out RHS:OleVariant):HResult;stdcall;
		function Get_SparklineGroups(out RHS:SparklineGroups):HResult;stdcall;
		function ClearHyperlinks:HResult;stdcall;
		function Get_DisplayFormat(out RHS:DisplayFormat):HResult;stdcall;
		function BorderAround(LineStyle:OleVariant;Weight:XlBorderWeight;ColorIndex:XlColorIndex;Color:OleVariant;
			ThemeColor:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function AllocateChanges:HResult;stdcall;
		function DiscardChanges:HResult;stdcall;
		function FlashFill:HResult;stdcall;
		function ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant):HResult;stdcall;
		function Get_HasRichDataType(out RHS:OleVariant):HResult;stdcall;
		function ShowCard:HResult;stdcall;
		function AddCommentThreaded(const Text:WideString;out RHS:CommentThreaded):HResult;stdcall;
		function Get_CommentThreaded(out RHS:CommentThreaded):HResult;stdcall;
		function Sort(Key1:OleVariant;Order1:XlSortOrder;Key2:OleVariant;Type_:OleVariant;Order2:XlSortOrder;
			Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;MatchCase:OleVariant;
			Orientation:XlSortOrientation;SortMethod:XlSortMethod;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption;SubField1:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function AutoFilter(Field:OleVariant;Criteria1:OleVariant;Operator_:XlAutoFilterOperator;Criteria2:OleVariant;
			VisibleDropDown:OleVariant;SubField:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function ConvertToLinkedDataType(ServiceID:Integer;const LanguageCulture:WideString):HResult;stdcall;
		function Get_LinkedDataTypeState(out RHS:OleVariant):HResult;stdcall;
		function SetCellDataTypeFromCell(const SourceCell:ExcelRange):HResult;stdcall;
		function DataTypeToText:HResult;stdcall;
		function Get_HasSpill(out RHS:OleVariant):HResult;stdcall;
		function Get_SpillingToRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_SpillParent(out RHS:ExcelRange):HResult;stdcall;
		function RefreshLinkedDataType(DomainID:OleVariant):HResult;stdcall;
		function Get_Formula2(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Formula2(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_Formula2Local(out RHS:OleVariant):HResult;stdcall;
		function Set_Formula2Local(RHS:OleVariant):HResult;stdcall;
		function Get_Formula2R1C1(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Formula2R1C1(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_Formula2R1C1Local(out RHS:OleVariant):HResult;stdcall;
		function Set_Formula2R1C1Local(RHS:OleVariant):HResult;stdcall;
		function Get_SavedAsArray(out RHS:OleVariant):HResult;stdcall;
		function Replace(What:OleVariant;Replacement:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant;ReplaceFormat:OleVariant;
			FormulaVersion:OleVariant;out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002440F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartEvents=interface(IDispatch)
		['{0002440F-0001-0000-C000-000000000046}']
		function Activate:HResult;stdcall;
		function Deactivate:HResult;stdcall;
		function Resize:HResult;stdcall;
		function MouseDown(Button:Integer;Shift:Integer;x:Integer;y:Integer):HResult;stdcall;
		function MouseUp(Button:Integer;Shift:Integer;x:Integer;y:Integer):HResult;stdcall;
		function MouseMove(Button:Integer;Shift:Integer;x:Integer;y:Integer):HResult;stdcall;
		function BeforeRightClick(var Cancel:WordBool):HResult;stdcall;
		function DragPlot:HResult;stdcall;
		function DragOver:HResult;stdcall;
		function BeforeDoubleClick(ElementID:Integer;Arg1:Integer;Arg2:Integer;var Cancel:WordBool):HResult;stdcall;
		function Select(ElementID:Integer;Arg1:Integer;Arg2:Integer):HResult;stdcall;
		function SeriesChange(SeriesIndex:Integer;PointIndex:Integer):HResult;stdcall;
		function Calculate:HResult;stdcall;
		function RemoteResize:HResult;stdcall;
		function RemoteSeriesChange(SeriesIndex:Integer;PointIndex:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _Chart
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D6-0000-0000-C000-000000000046}
	// *********************************************************************//
	_Chart=interface(IDispatch)
		['{000208D6-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		procedure Activate(lcid:Integer);safecall;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		procedure Delete(lcid:Integer);safecall;
		function Get_CodeName:WideString;safecall;
		function Get__CodeName:WideString;safecall;
		procedure Set__CodeName(const RHS:WideString);safecall;
		function Get_Index(lcid:Integer):Integer;safecall;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		function Get_Name:WideString;safecall;
		procedure Set_Name(const RHS:WideString);safecall;
		function Get_Next:IDispatch;safecall;
		function Get_OnDoubleClick(lcid:Integer):WideString;safecall;
		procedure Set_OnDoubleClick(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetActivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetActivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetDeactivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_PageSetup:PageSetup;safecall;
		function Get_Previous:IDispatch;safecall;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);safecall;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);safecall;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer);safecall;
		function Get_ProtectContents(lcid:Integer):WordBool;safecall;
		function Get_ProtectDrawingObjects(lcid:Integer):WordBool;safecall;
		function Get_ProtectionMode(lcid:Integer):WordBool;safecall;
		procedure _Dummy23;stdcall;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);safecall;
		procedure Select(Replace:OleVariant;lcid:Integer);safecall;
		procedure Unprotect(Password:OleVariant;lcid:Integer);safecall;
		function Get_Visible(lcid:Integer):XlSheetVisibility;safecall;
		procedure Set_Visible(lcid:Integer;RHS:XlSheetVisibility);safecall;
		function Get_Shapes:Shapes;safecall;
		procedure _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;
			HasLeaderLines:OleVariant;lcid:Integer);safecall;
		function Arcs(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Area3DGroup(lcid:Integer):ChartGroup;safecall;
		function AreaGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure AutoFormat(Gallery:Integer;Format:OleVariant);safecall;
		function Get_AutoScaling(lcid:Integer):WordBool;safecall;
		procedure Set_AutoScaling(lcid:Integer;RHS:WordBool);safecall;
		function Axes(Type_:OleVariant;AxisGroup:XlAxisGroup;lcid:Integer):IDispatch;safecall;
		procedure SetBackgroundPicture(const Filename:WideString);safecall;
		function Get_Bar3DGroup(lcid:Integer):ChartGroup;safecall;
		function BarGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Buttons(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_ChartArea(lcid:Integer):ChartArea;safecall;
		function ChartGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function ChartObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_ChartTitle(lcid:Integer):ChartTitle;safecall;
		procedure ChartWizard(Source:OleVariant;Gallery:OleVariant;Format:OleVariant;PlotBy:OleVariant;
			CategoryLabels:OleVariant;SeriesLabels:OleVariant;HasLegend:OleVariant;Title:OleVariant;CategoryTitle:OleVariant;
			ValueTitle:OleVariant;ExtraTitle:OleVariant;lcid:Integer);safecall;
		function CheckBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;lcid:Integer);safecall;
		function Get_Column3DGroup(lcid:Integer):ChartGroup;safecall;
		function ColumnGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;Size:XlPictureAppearance;
			lcid:Integer);safecall;
		function Get_Corners(lcid:Integer):Corners;safecall;
		procedure CreatePublisher(Edition:OleVariant;Appearance:XlPictureAppearance;Size:XlPictureAppearance;
			ContainsPICT:OleVariant;ContainsBIFF:OleVariant;ContainsRTF:OleVariant;ContainsVALU:OleVariant;
			lcid:Integer);safecall;
		function Get_DataTable:DataTable;safecall;
		function Get_DepthPercent(lcid:Integer):Integer;safecall;
		procedure Set_DepthPercent(lcid:Integer;RHS:Integer);safecall;
		procedure Deselect(lcid:Integer);safecall;
		function Get_DisplayBlanksAs(lcid:Integer):XlDisplayBlanksAs;safecall;
		procedure Set_DisplayBlanksAs(lcid:Integer;RHS:XlDisplayBlanksAs);safecall;
		function DoughnutGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Drawings(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function DrawingObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function DropDowns(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Elevation(lcid:Integer):Integer;safecall;
		procedure Set_Elevation(lcid:Integer;RHS:Integer);safecall;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Floor(lcid:Integer):Floor;safecall;
		function Get_GapDepth(lcid:Integer):Integer;safecall;
		procedure Set_GapDepth(lcid:Integer;RHS:Integer);safecall;
		function GroupBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function GroupObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_HasAxis(Index1:OleVariant;Index2:OleVariant;lcid:Integer):OleVariant;safecall;
		procedure Set_HasAxis(Index1:OleVariant;Index2:OleVariant;lcid:Integer;RHS:OleVariant);safecall;
		function Get_HasDataTable:WordBool;safecall;
		procedure Set_HasDataTable(RHS:WordBool);safecall;
		function Get_HasLegend(lcid:Integer):WordBool;safecall;
		procedure Set_HasLegend(lcid:Integer;RHS:WordBool);safecall;
		function Get_HasTitle(lcid:Integer):WordBool;safecall;
		procedure Set_HasTitle(lcid:Integer;RHS:WordBool);safecall;
		function Get_HeightPercent(lcid:Integer):Integer;safecall;
		procedure Set_HeightPercent(lcid:Integer;RHS:Integer);safecall;
		function Get_Hyperlinks:Hyperlinks;safecall;
		function Labels(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Legend(lcid:Integer):Legend;safecall;
		function Get_Line3DGroup(lcid:Integer):ChartGroup;safecall;
		function LineGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Lines(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function ListBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Location(Where:XlChartLocation;Name:OleVariant):ExcelChart;safecall;
		function OLEObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function OptionButtons(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Ovals(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure Paste(Type_:OleVariant;lcid:Integer);safecall;
		function Get_Perspective(lcid:Integer):Integer;safecall;
		procedure Set_Perspective(lcid:Integer;RHS:Integer);safecall;
		function Pictures(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Pie3DGroup(lcid:Integer):ChartGroup;safecall;
		function PieGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_PlotArea(lcid:Integer):PlotArea;safecall;
		function Get_PlotVisibleOnly(lcid:Integer):WordBool;safecall;
		procedure Set_PlotVisibleOnly(lcid:Integer;RHS:WordBool);safecall;
		function RadarGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Rectangles(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_RightAngleAxes(lcid:Integer):OleVariant;safecall;
		procedure Set_RightAngleAxes(lcid:Integer;RHS:OleVariant);safecall;
		function Get_Rotation(lcid:Integer):OleVariant;safecall;
		procedure Set_Rotation(lcid:Integer;RHS:OleVariant);safecall;
		function ScrollBars(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function SeriesCollection(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_SizeWithWindow(lcid:Integer):WordBool;safecall;
		procedure Set_SizeWithWindow(lcid:Integer;RHS:WordBool);safecall;
		function Get_ShowWindow:WordBool;safecall;
		procedure Set_ShowWindow(RHS:WordBool);safecall;
		function Spinners(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_SubType(lcid:Integer):Integer;safecall;
		procedure Set_SubType(lcid:Integer;RHS:Integer);safecall;
		function Get_SurfaceGroup(lcid:Integer):ChartGroup;safecall;
		function TextBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_type_(lcid:Integer):Integer;safecall;
		procedure Set_type_(lcid:Integer;RHS:Integer);safecall;
		function Get_ChartType:XlChartType;safecall;
		procedure Set_ChartType(RHS:XlChartType);safecall;
		procedure ApplyCustomType(ChartType:XlChartType;TypeName:OleVariant);safecall;
		function Get_Walls(lcid:Integer):Walls;safecall;
		function Get_WallsAndGridlines2D(lcid:Integer):WordBool;safecall;
		procedure Set_WallsAndGridlines2D(lcid:Integer;RHS:WordBool);safecall;
		function XYGroups(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_BarShape:XlBarShape;safecall;
		procedure Set_BarShape(RHS:XlBarShape);safecall;
		function Get_PlotBy:XlRowCol;safecall;
		procedure Set_PlotBy(RHS:XlRowCol);safecall;
		procedure CopyChartBuild;safecall;
		function Get_ProtectFormatting:WordBool;safecall;
		procedure Set_ProtectFormatting(RHS:WordBool);safecall;
		function Get_ProtectData:WordBool;safecall;
		procedure Set_ProtectData(RHS:WordBool);safecall;
		function Get_ProtectGoalSeek:WordBool;safecall;
		procedure Set_ProtectGoalSeek(RHS:WordBool);safecall;
		function Get_ProtectSelection:WordBool;safecall;
		procedure Set_ProtectSelection(RHS:WordBool);safecall;
		procedure GetChartElement(x:Integer;y:Integer;var ElementID:Integer;var Arg1:Integer;var Arg2:Integer);safecall;
		procedure SetSourceData(const Source:ExcelRange;PlotBy:OleVariant);safecall;
		function Export(const Filename:WideString;FilterName:OleVariant;Interactive:OleVariant):WordBool;safecall;
		procedure Refresh;safecall;
		function Get_PivotLayout:PivotLayout;safecall;
		function Get_HasPivotFields:WordBool;safecall;
		procedure Set_HasPivotFields(RHS:WordBool);safecall;
		function Get_Scripts:Scripts;safecall;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);safecall;
		function Get_Tab:Tab;safecall;
		function Get_MailEnvelope:MsoEnvelope;safecall;
		procedure ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant;lcid:Integer);safecall;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);safecall;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant);safecall;
		procedure ApplyLayout(Layout:Integer;ChartType:OleVariant);safecall;
		procedure SetElement(Element:MsoChartElementType);safecall;
		function Get_ShowDataLabelsOverMaximum:WordBool;safecall;
		procedure Set_ShowDataLabelsOverMaximum(RHS:WordBool);safecall;
		function Get_SideWall:Walls;safecall;
		function Get_BackWall:Walls;safecall;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);safecall;
		procedure ApplyChartTemplate(const Filename:WideString);safecall;
		procedure SaveChartTemplate(const Filename:WideString);safecall;
		procedure SetDefaultChart(Name:OleVariant);safecall;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);safecall;
		function Get_ChartStyle:OleVariant;safecall;
		procedure Set_ChartStyle(RHS:OleVariant);safecall;
		procedure ClearToMatchStyle;safecall;
		function Get_PrintedCommentPages:Integer;safecall;
		function Get_Dummy24:WordBool;safecall;
		procedure Set_Dummy24(RHS:WordBool);safecall;
		function Get_Dummy25:WordBool;safecall;
		procedure Set_Dummy25(RHS:WordBool);safecall;
		function Get_ShowReportFilterFieldButtons:WordBool;safecall;
		procedure Set_ShowReportFilterFieldButtons(RHS:WordBool);safecall;
		function Get_ShowLegendFieldButtons:WordBool;safecall;
		procedure Set_ShowLegendFieldButtons(RHS:WordBool);safecall;
		function Get_ShowAxisFieldButtons:WordBool;safecall;
		procedure Set_ShowAxisFieldButtons(RHS:WordBool);safecall;
		function Get_ShowValueFieldButtons:WordBool;safecall;
		procedure Set_ShowValueFieldButtons(RHS:WordBool);safecall;
		function Get_ShowAllFieldButtons:WordBool;safecall;
		procedure Set_ShowAllFieldButtons(RHS:WordBool);safecall;
		function FullSeriesCollection(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_CategoryLabelLevel:XlCategoryLabelLevel;safecall;
		procedure Set_CategoryLabelLevel(RHS:XlCategoryLabelLevel);safecall;
		function Get_SeriesNameLevel:XlSeriesNameLevel;safecall;
		procedure Set_SeriesNameLevel(RHS:XlSeriesNameLevel);safecall;
		function Get_HasHiddenContent:WordBool;safecall;
		procedure DeleteHiddenContent;safecall;
		function Get_ChartColor:OleVariant;safecall;
		procedure Set_ChartColor(RHS:OleVariant);safecall;
		procedure ClearToMatchColorStyle;safecall;
		function Get_ShowExpandCollapseEntireFieldButtons:WordBool;safecall;
		procedure Set_ShowExpandCollapseEntireFieldButtons(RHS:WordBool);safecall;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);safecall;
		procedure SetProperty(const ID:WideString;Value:OleVariant);safecall;
		function GetProperty(const ID:WideString):OleVariant;safecall;
		function Get_DisplayValueNotAvailableAsBlank:WordBool;safecall;
		procedure Set_DisplayValueNotAvailableAsBlank(RHS:WordBool);safecall;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property CodeName:WideString read Get_CodeName;
		property _CodeName:WideString read Get__CodeName write Set__CodeName;
		property Index[lcid:Integer]:Integer read Get_Index;
		property Name:WideString read Get_Name write Set_Name;
		property Next:IDispatch read Get_Next;
		property OnDoubleClick[lcid:Integer]:WideString read Get_OnDoubleClick write Set_OnDoubleClick;
		property OnSheetActivate[lcid:Integer]:WideString read Get_OnSheetActivate write Set_OnSheetActivate;
		property OnSheetDeactivate[lcid:Integer]:WideString read Get_OnSheetDeactivate write Set_OnSheetDeactivate;
		property PageSetup:PageSetup read Get_PageSetup;
		property Previous:IDispatch read Get_Previous;
		property ProtectContents[lcid:Integer]:WordBool read Get_ProtectContents;
		property ProtectDrawingObjects[lcid:Integer]:WordBool read Get_ProtectDrawingObjects;
		property ProtectionMode[lcid:Integer]:WordBool read Get_ProtectionMode;
		property Visible[lcid:Integer]:XlSheetVisibility read Get_Visible write Set_Visible;
		property Shapes:Shapes read Get_Shapes;
		property Area3DGroup[lcid:Integer]:ChartGroup read Get_Area3DGroup;
		property AutoScaling[lcid:Integer]:WordBool read Get_AutoScaling write Set_AutoScaling;
		property Bar3DGroup[lcid:Integer]:ChartGroup read Get_Bar3DGroup;
		property ChartArea[lcid:Integer]:ChartArea read Get_ChartArea;
		property ChartTitle[lcid:Integer]:ChartTitle read Get_ChartTitle;
		property Column3DGroup[lcid:Integer]:ChartGroup read Get_Column3DGroup;
		property Corners[lcid:Integer]:Corners read Get_Corners;
		property DataTable:DataTable read Get_DataTable;
		property DepthPercent[lcid:Integer]:Integer read Get_DepthPercent write Set_DepthPercent;
		property DisplayBlanksAs[lcid:Integer]:XlDisplayBlanksAs read Get_DisplayBlanksAs write Set_DisplayBlanksAs;
		property Elevation[lcid:Integer]:Integer read Get_Elevation write Set_Elevation;
		property Floor[lcid:Integer]:Floor read Get_Floor;
		property GapDepth[lcid:Integer]:Integer read Get_GapDepth write Set_GapDepth;
		property HasAxis[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant read Get_HasAxis write Set_HasAxis;
		property HasDataTable:WordBool read Get_HasDataTable write Set_HasDataTable;
		property HasLegend[lcid:Integer]:WordBool read Get_HasLegend write Set_HasLegend;
		property HasTitle[lcid:Integer]:WordBool read Get_HasTitle write Set_HasTitle;
		property HeightPercent[lcid:Integer]:Integer read Get_HeightPercent write Set_HeightPercent;
		property Hyperlinks:Hyperlinks read Get_Hyperlinks;
		property Legend[lcid:Integer]:Legend read Get_Legend;
		property Line3DGroup[lcid:Integer]:ChartGroup read Get_Line3DGroup;
		property Perspective[lcid:Integer]:Integer read Get_Perspective write Set_Perspective;
		property Pie3DGroup[lcid:Integer]:ChartGroup read Get_Pie3DGroup;
		property PlotArea[lcid:Integer]:PlotArea read Get_PlotArea;
		property PlotVisibleOnly[lcid:Integer]:WordBool read Get_PlotVisibleOnly write Set_PlotVisibleOnly;
		property RightAngleAxes[lcid:Integer]:OleVariant read Get_RightAngleAxes write Set_RightAngleAxes;
		property Rotation[lcid:Integer]:OleVariant read Get_Rotation write Set_Rotation;
		property SizeWithWindow[lcid:Integer]:WordBool read Get_SizeWithWindow write Set_SizeWithWindow;
		property ShowWindow:WordBool read Get_ShowWindow write Set_ShowWindow;
		property SubType[lcid:Integer]:Integer read Get_SubType write Set_SubType;
		property SurfaceGroup[lcid:Integer]:ChartGroup read Get_SurfaceGroup;
		property Type_[lcid:Integer]:Integer read Get_type_ write Set_type_;
		property ChartType:XlChartType read Get_ChartType write Set_ChartType;
		property Walls[lcid:Integer]:Walls read Get_Walls;
		property WallsAndGridlines2D[lcid:Integer]:WordBool read Get_WallsAndGridlines2D write Set_WallsAndGridlines2D;
		property BarShape:XlBarShape read Get_BarShape write Set_BarShape;
		property PlotBy:XlRowCol read Get_PlotBy write Set_PlotBy;
		property ProtectFormatting:WordBool read Get_ProtectFormatting write Set_ProtectFormatting;
		property ProtectData:WordBool read Get_ProtectData write Set_ProtectData;
		property ProtectGoalSeek:WordBool read Get_ProtectGoalSeek write Set_ProtectGoalSeek;
		property ProtectSelection:WordBool read Get_ProtectSelection write Set_ProtectSelection;
		property PivotLayout:PivotLayout read Get_PivotLayout;
		property HasPivotFields:WordBool read Get_HasPivotFields write Set_HasPivotFields;
		property Scripts:Scripts read Get_Scripts;
		property Tab:Tab read Get_Tab;
		property MailEnvelope:MsoEnvelope read Get_MailEnvelope;
		property ShowDataLabelsOverMaximum:WordBool read Get_ShowDataLabelsOverMaximum write Set_ShowDataLabelsOverMaximum;
		property SideWall:Walls read Get_SideWall;
		property BackWall:Walls read Get_BackWall;
		property ChartStyle:OleVariant read Get_ChartStyle write Set_ChartStyle;
		property PrintedCommentPages:Integer read Get_PrintedCommentPages;
		property Dummy24:WordBool read Get_Dummy24 write Set_Dummy24;
		property Dummy25:WordBool read Get_Dummy25 write Set_Dummy25;
		property ShowReportFilterFieldButtons:WordBool read Get_ShowReportFilterFieldButtons
			write Set_ShowReportFilterFieldButtons;
		property ShowLegendFieldButtons:WordBool read Get_ShowLegendFieldButtons write Set_ShowLegendFieldButtons;
		property ShowAxisFieldButtons:WordBool read Get_ShowAxisFieldButtons write Set_ShowAxisFieldButtons;
		property ShowValueFieldButtons:WordBool read Get_ShowValueFieldButtons write Set_ShowValueFieldButtons;
		property ShowAllFieldButtons:WordBool read Get_ShowAllFieldButtons write Set_ShowAllFieldButtons;
		property CategoryLabelLevel:XlCategoryLabelLevel read Get_CategoryLabelLevel write Set_CategoryLabelLevel;
		property SeriesNameLevel:XlSeriesNameLevel read Get_SeriesNameLevel write Set_SeriesNameLevel;
		property HasHiddenContent:WordBool read Get_HasHiddenContent;
		property ChartColor:OleVariant read Get_ChartColor write Set_ChartColor;
		property ShowExpandCollapseEntireFieldButtons:WordBool read Get_ShowExpandCollapseEntireFieldButtons
			write Set_ShowExpandCollapseEntireFieldButtons;
		property DisplayValueNotAvailableAsBlank:WordBool read Get_DisplayValueNotAvailableAsBlank
			write Set_DisplayValueNotAvailableAsBlank;
	end;

	// *********************************************************************//
	// DispIntf:  _ChartDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D6-0000-0000-C000-000000000046}
	// *********************************************************************//
	_ChartDisp=dispinterface
		['{000208D6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate(lcid:Integer);dispid 304;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 551;
		procedure Delete(lcid:Integer);dispid 117;
		property CodeName:WideString readonly dispid 1373;
		property _CodeName:WideString dispid-2147418112;
		property Index[lcid:Integer]:Integer readonly dispid 486;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 637;
		property Name:WideString dispid 110;
		property Next:IDispatch readonly dispid 502;
		property OnDoubleClick[lcid:Integer]:WideString dispid 628;
		property OnSheetActivate[lcid:Integer]:WideString dispid 1031;
		property OnSheetDeactivate[lcid:Integer]:WideString dispid 1081;
		property PageSetup:PageSetup readonly dispid 998;
		property Previous:IDispatch readonly dispid 503;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);dispid 281;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer);dispid 282;
		property ProtectContents[lcid:Integer]:WordBool readonly dispid 292;
		property ProtectDrawingObjects[lcid:Integer]:WordBool readonly dispid 293;
		property ProtectionMode[lcid:Integer]:WordBool readonly dispid 1159;
		procedure _Dummy23;dispid 65559;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);dispid 284;
		procedure Select(Replace:OleVariant;lcid:Integer);dispid 235;
		procedure Unprotect(Password:OleVariant;lcid:Integer);dispid 285;
		property Visible[lcid:Integer]:XlSheetVisibility dispid 558;
		property Shapes:Shapes readonly dispid 1377;
		procedure _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;
			HasLeaderLines:OleVariant;lcid:Integer);dispid 151;
		function Arcs(Index:OleVariant;lcid:Integer):IDispatch;dispid 760;
		property Area3DGroup[lcid:Integer]:ChartGroup readonly dispid 17;
		function AreaGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 9;
		procedure AutoFormat(Gallery:Integer;Format:OleVariant);dispid 114;
		property AutoScaling[lcid:Integer]:WordBool dispid 107;
		function Axes(Type_:OleVariant;AxisGroup:XlAxisGroup;lcid:Integer):IDispatch;dispid 23;
		procedure SetBackgroundPicture(const Filename:WideString);dispid 1188;
		property Bar3DGroup[lcid:Integer]:ChartGroup readonly dispid 18;
		function BarGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 10;
		function Buttons(Index:OleVariant;lcid:Integer):IDispatch;dispid 557;
		property ChartArea[lcid:Integer]:ChartArea readonly dispid 80;
		function ChartGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 8;
		function ChartObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 1060;
		property ChartTitle[lcid:Integer]:ChartTitle readonly dispid 81;
		procedure ChartWizard(Source:OleVariant;Gallery:OleVariant;Format:OleVariant;PlotBy:OleVariant;
			CategoryLabels:OleVariant;SeriesLabels:OleVariant;HasLegend:OleVariant;Title:OleVariant;CategoryTitle:OleVariant;
			ValueTitle:OleVariant;ExtraTitle:OleVariant;lcid:Integer);dispid 196;
		function CheckBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 824;
		procedure CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;lcid:Integer);dispid 505;
		property Column3DGroup[lcid:Integer]:ChartGroup readonly dispid 19;
		function ColumnGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 11;
		procedure CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;Size:XlPictureAppearance;
			lcid:Integer);dispid 213;
		property Corners[lcid:Integer]:Corners readonly dispid 79;
		procedure CreatePublisher(Edition:OleVariant;Appearance:XlPictureAppearance;Size:XlPictureAppearance;
			ContainsPICT:OleVariant;ContainsBIFF:OleVariant;ContainsRTF:OleVariant;ContainsVALU:OleVariant;lcid:Integer);
			dispid 458;
		property DataTable:DataTable readonly dispid 1395;
		property DepthPercent[lcid:Integer]:Integer dispid 48;
		procedure Deselect(lcid:Integer);dispid 1120;
		property DisplayBlanksAs[lcid:Integer]:XlDisplayBlanksAs dispid 93;
		function DoughnutGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 14;
		function Drawings(Index:OleVariant;lcid:Integer):IDispatch;dispid 772;
		function DrawingObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 88;
		function DropDowns(Index:OleVariant;lcid:Integer):IDispatch;dispid 836;
		property Elevation[lcid:Integer]:Integer dispid 49;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid 1;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid-5;
		property Floor[lcid:Integer]:Floor readonly dispid 83;
		property GapDepth[lcid:Integer]:Integer dispid 50;
		function GroupBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 834;
		function GroupObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 1113;
		property HasAxis[Index1:OleVariant;Index2:OleVariant;lcid:Integer]:OleVariant dispid 52;
		property HasDataTable:WordBool dispid 1396;
		property HasLegend[lcid:Integer]:WordBool dispid 53;
		property HasTitle[lcid:Integer]:WordBool dispid 54;
		property HeightPercent[lcid:Integer]:Integer dispid 55;
		property Hyperlinks:Hyperlinks readonly dispid 1393;
		function Labels(Index:OleVariant;lcid:Integer):IDispatch;dispid 841;
		property Legend[lcid:Integer]:Legend readonly dispid 84;
		property Line3DGroup[lcid:Integer]:ChartGroup readonly dispid 20;
		function LineGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 12;
		function Lines(Index:OleVariant;lcid:Integer):IDispatch;dispid 767;
		function ListBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 832;
		function Location(Where:XlChartLocation;Name:OleVariant):ExcelChart;dispid 1397;
		function OLEObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 799;
		function OptionButtons(Index:OleVariant;lcid:Integer):IDispatch;dispid 826;
		function Ovals(Index:OleVariant;lcid:Integer):IDispatch;dispid 801;
		procedure Paste(Type_:OleVariant;lcid:Integer);dispid 211;
		property Perspective[lcid:Integer]:Integer dispid 57;
		function Pictures(Index:OleVariant;lcid:Integer):IDispatch;dispid 771;
		property Pie3DGroup[lcid:Integer]:ChartGroup readonly dispid 21;
		function PieGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 13;
		property PlotArea[lcid:Integer]:PlotArea readonly dispid 85;
		property PlotVisibleOnly[lcid:Integer]:WordBool dispid 92;
		function RadarGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 15;
		function Rectangles(Index:OleVariant;lcid:Integer):IDispatch;dispid 774;
		property RightAngleAxes[lcid:Integer]:OleVariant dispid 58;
		property Rotation[lcid:Integer]:OleVariant dispid 59;
		function ScrollBars(Index:OleVariant;lcid:Integer):IDispatch;dispid 830;
		function SeriesCollection(Index:OleVariant;lcid:Integer):IDispatch;dispid 68;
		property SizeWithWindow[lcid:Integer]:WordBool dispid 94;
		property ShowWindow:WordBool dispid 1399;
		function Spinners(Index:OleVariant;lcid:Integer):IDispatch;dispid 838;
		property SubType[lcid:Integer]:Integer dispid 109;
		property SurfaceGroup[lcid:Integer]:ChartGroup readonly dispid 22;
		function TextBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 777;
		property Type_[lcid:Integer]:Integer dispid 108;
		property ChartType:XlChartType dispid 1400;
		procedure ApplyCustomType(ChartType:XlChartType;TypeName:OleVariant);dispid 1401;
		property Walls[lcid:Integer]:Walls readonly dispid 86;
		property WallsAndGridlines2D[lcid:Integer]:WordBool dispid 210;
		function XYGroups(Index:OleVariant;lcid:Integer):IDispatch;dispid 16;
		property BarShape:XlBarShape dispid 1403;
		property PlotBy:XlRowCol dispid 202;
		procedure CopyChartBuild;dispid 1404;
		property ProtectFormatting:WordBool dispid 1405;
		property ProtectData:WordBool dispid 1406;
		property ProtectGoalSeek:WordBool dispid 1407;
		property ProtectSelection:WordBool dispid 1408;
		procedure GetChartElement(x:Integer;y:Integer;var ElementID:Integer;var Arg1:Integer;var Arg2:Integer);dispid 1409;
		procedure SetSourceData(const Source:ExcelRange;PlotBy:OleVariant);dispid 1413;
		function Export(const Filename:WideString;FilterName:OleVariant;Interactive:OleVariant):WordBool;dispid 1414;
		procedure Refresh;dispid 1417;
		property PivotLayout:PivotLayout readonly dispid 1814;
		property HasPivotFields:WordBool dispid 1815;
		property Scripts:Scripts readonly dispid 1816;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);dispid 1772;
		property Tab:Tab readonly dispid 1041;
		property MailEnvelope:MsoEnvelope readonly dispid 2021;
		procedure ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant;lcid:Integer);dispid 1922;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 1925;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant);dispid 2029;
		procedure ApplyLayout(Layout:Integer;ChartType:OleVariant);dispid 2500;
		procedure SetElement(Element:MsoChartElementType);dispid 2502;
		property ShowDataLabelsOverMaximum:WordBool dispid 2504;
		property SideWall:Walls readonly dispid 2505;
		property BackWall:Walls readonly dispid 2506;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);dispid 2361;
		procedure ApplyChartTemplate(const Filename:WideString);dispid 2507;
		procedure SaveChartTemplate(const Filename:WideString);dispid 2508;
		procedure SetDefaultChart(Name:OleVariant);dispid 219;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);dispid 2493;
		property ChartStyle:OleVariant dispid 2509;
		procedure ClearToMatchStyle;dispid 2510;
		property PrintedCommentPages:Integer readonly dispid 2857;
		property Dummy24:WordBool dispid 2858;
		property Dummy25:WordBool dispid 2859;
		property ShowReportFilterFieldButtons:WordBool dispid 2860;
		property ShowLegendFieldButtons:WordBool dispid 2861;
		property ShowAxisFieldButtons:WordBool dispid 2862;
		property ShowValueFieldButtons:WordBool dispid 2863;
		property ShowAllFieldButtons:WordBool dispid 2864;
		function FullSeriesCollection(Index:OleVariant;lcid:Integer):IDispatch;dispid 3047;
		property CategoryLabelLevel:XlCategoryLabelLevel dispid 3048;
		property SeriesNameLevel:XlSeriesNameLevel dispid 3049;
		property HasHiddenContent:WordBool readonly dispid 3050;
		procedure DeleteHiddenContent;dispid 3051;
		property ChartColor:OleVariant dispid 3052;
		procedure ClearToMatchColorStyle;dispid 3053;
		property ShowExpandCollapseEntireFieldButtons:WordBool dispid 3166;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);dispid 3175;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
		property DisplayValueNotAvailableAsBlank:WordBool dispid 3333;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 3174;
	end;

	// *********************************************************************//
	// Interface: Sheets
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D7-0000-0000-C000-000000000046}
	// *********************************************************************//
	Sheets=interface(IDispatch)
		['{000208D7-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;Type_:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		function Get_Count:Integer;safecall;
		procedure Delete(lcid:Integer);safecall;
		procedure FillAcrossSheets(const Range:ExcelRange;Type_:XlFillWith;lcid:Integer);safecall;
		function Get_Item(Index:OleVariant):IDispatch;safecall;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		function Get__NewEnum:IUnknown;safecall;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);safecall;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);safecall;
		procedure Select(Replace:OleVariant;lcid:Integer);safecall;
		function Get_HPageBreaks:HPageBreaks;safecall;
		function Get_VPageBreaks:VPageBreaks;safecall;
		function Get_Visible(lcid:Integer):OleVariant;safecall;
		procedure Set_Visible(lcid:Integer;RHS:OleVariant);safecall;
		function Get__Default(Index:OleVariant):IDispatch;safecall;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);safecall;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;
			lcid:Integer);safecall;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):IDispatch;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property Count:Integer read Get_Count;
		property Item[Index:OleVariant]:IDispatch read Get_Item;
		property _NewEnum:IUnknown read Get__NewEnum;
		property HPageBreaks:HPageBreaks read Get_HPageBreaks;
		property VPageBreaks:VPageBreaks read Get_VPageBreaks;
		property Visible[lcid:Integer]:OleVariant read Get_Visible write Set_Visible;
		property _Default[Index:OleVariant]:IDispatch read Get__Default;default;
	end;

	// *********************************************************************//
	// DispIntf:  SheetsDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D7-0000-0000-C000-000000000046}
	// *********************************************************************//
	SheetsDisp=dispinterface
		['{000208D7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;Type_:OleVariant;lcid:Integer):IDispatch;
			dispid 181;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 551;
		property Count:Integer readonly dispid 118;
		procedure Delete(lcid:Integer);dispid 117;
		procedure FillAcrossSheets(const Range:ExcelRange;Type_:XlFillWith;lcid:Integer);dispid 469;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 637;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);dispid 281;
		procedure Select(Replace:OleVariant;lcid:Integer);dispid 235;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property Visible[lcid:Integer]:OleVariant dispid 558;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;lcid:Integer);
			dispid 2361;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):IDispatch;dispid 3054;
	end;

	// *********************************************************************//
	// Interface: IVPageBreak
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024402-0001-0000-C000-000000000046}
	// *********************************************************************//
	IVPageBreak=interface(IDispatch)
		['{00024402-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:ExcelWorksheet):HResult;stdcall;
		function Delete:HResult;stdcall;
		function DragOff(Direction:XlDirection;RegionIndex:Integer):HResult;stdcall;
		function Get_type_(out RHS:XlPageBreak):HResult;stdcall;
		function Set_type_(RHS:XlPageBreak):HResult;stdcall;
		function Get_Extent(out RHS:XlPageBreakExtent):HResult;stdcall;
		function Get_Location(out RHS:ExcelRange):HResult;stdcall;
		function _Set_Location(const RHS:ExcelRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHPageBreak
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024401-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHPageBreak=interface(IDispatch)
		['{00024401-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:ExcelWorksheet):HResult;stdcall;
		function Delete:HResult;stdcall;
		function DragOff(Direction:XlDirection;RegionIndex:Integer):HResult;stdcall;
		function Get_type_(out RHS:XlPageBreak):HResult;stdcall;
		function Set_type_(RHS:XlPageBreak):HResult;stdcall;
		function Get_Extent(out RHS:XlPageBreakExtent):HResult;stdcall;
		function Get_Location(out RHS:ExcelRange):HResult;stdcall;
		function _Set_Location(const RHS:ExcelRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHPageBreaks
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024404-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHPageBreaks=interface(IDispatch)
		['{00024404-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:HPageBreak):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:HPageBreak):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const Before:IDispatch;out RHS:HPageBreak):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IVPageBreaks
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024405-0001-0000-C000-000000000046}
	// *********************************************************************//
	IVPageBreaks=interface(IDispatch)
		['{00024405-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:VPageBreak):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:VPageBreak):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const Before:IDispatch;out RHS:VPageBreak):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRecentFile
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024407-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRecentFile=interface(IDispatch)
		['{00024407-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Path(out RHS:WideString):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Open(out RHS:ExcelWorkbook):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRecentFiles
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024406-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRecentFiles=interface(IDispatch)
		['{00024406-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Maximum(out RHS:Integer):HResult;stdcall;
		function Set_Maximum(RHS:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:RecentFile):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:RecentFile):HResult;stdcall;
		function Add(const Name:WideString;out RHS:RecentFile):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDocEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024411-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDocEvents=interface(IDispatch)
		['{00024411-0001-0000-C000-000000000046}']
		function SelectionChange(const Target:ExcelRange):HResult;stdcall;
		function BeforeDoubleClick(const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function BeforeRightClick(const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function Activate:HResult;stdcall;
		function Deactivate:HResult;stdcall;
		function Calculate:HResult;stdcall;
		function Change(const Target:ExcelRange):HResult;stdcall;
		function FollowHyperlink(const Target:Hyperlink):HResult;stdcall;
		function PivotTableUpdate(const Target:PivotTable):HResult;stdcall;
		function PivotTableAfterValueChange(const TargetPivotTable:PivotTable;const TargetRange:ExcelRange):HResult;stdcall;
		function PivotTableBeforeAllocateChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function PivotTableBeforeCommitChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function PivotTableBeforeDiscardChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer):HResult;stdcall;
		function PivotTableChangeSync(const Target:PivotTable):HResult;stdcall;
		function LensGalleryRenderComplete:HResult;stdcall;
		function TableUpdate(const Target:TableObject):HResult;stdcall;
		function BeforeDelete:HResult;stdcall;
		function RemoteChange(const Target:ExcelRange):HResult;stdcall;
		function RemoteBeforeDelete:HResult;stdcall;
		function RemotePivotTableUpdate(const Target:PivotTable):HResult;stdcall;
		function RemotePivotTableChangeSync(const Target:PivotTable):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _Worksheet
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D8-0000-0000-C000-000000000046}
	// *********************************************************************//
	_Worksheet=interface(IDispatch)
		['{000208D8-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		procedure Activate(lcid:Integer);safecall;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		procedure Delete(lcid:Integer);safecall;
		function Get_CodeName:WideString;safecall;
		function Get__CodeName:WideString;safecall;
		procedure Set__CodeName(const RHS:WideString);safecall;
		function Get_Index(lcid:Integer):Integer;safecall;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);safecall;
		function Get_Name:WideString;safecall;
		procedure Set_Name(const RHS:WideString);safecall;
		function Get_Next:IDispatch;safecall;
		function Get_OnDoubleClick(lcid:Integer):WideString;safecall;
		procedure Set_OnDoubleClick(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetActivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetActivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetDeactivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_PageSetup:PageSetup;safecall;
		function Get_Previous:IDispatch;safecall;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);safecall;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);safecall;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer);safecall;
		function Get_ProtectContents(lcid:Integer):WordBool;safecall;
		function Get_ProtectDrawingObjects(lcid:Integer):WordBool;safecall;
		function Get_ProtectionMode(lcid:Integer):WordBool;safecall;
		function Get_ProtectScenarios(lcid:Integer):WordBool;safecall;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);safecall;
		procedure Select(Replace:OleVariant;lcid:Integer);safecall;
		procedure Unprotect(Password:OleVariant;lcid:Integer);safecall;
		function Get_Visible(lcid:Integer):XlSheetVisibility;safecall;
		procedure Set_Visible(lcid:Integer;RHS:XlSheetVisibility);safecall;
		function Get_Shapes:Shapes;safecall;
		function Get_TransitionExpEval(lcid:Integer):WordBool;safecall;
		procedure Set_TransitionExpEval(lcid:Integer;RHS:WordBool);safecall;
		function Arcs(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_AutoFilterMode(lcid:Integer):WordBool;safecall;
		procedure Set_AutoFilterMode(lcid:Integer;RHS:WordBool);safecall;
		procedure SetBackgroundPicture(const Filename:WideString);safecall;
		function Buttons(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure Calculate(lcid:Integer);safecall;
		function Get_EnableCalculation:WordBool;safecall;
		procedure Set_EnableCalculation(RHS:WordBool);safecall;
		function Get_Cells:ExcelRange;safecall;
		function ChartObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function CheckBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;lcid:Integer);safecall;
		function Get_CircularReference(lcid:Integer):ExcelRange;safecall;
		procedure ClearArrows(lcid:Integer);safecall;
		function Get_Columns:ExcelRange;safecall;
		function Get_ConsolidationFunction(lcid:Integer):XlConsolidationFunction;safecall;
		function Get_ConsolidationOptions(lcid:Integer):OleVariant;safecall;
		function Get_ConsolidationSources(lcid:Integer):OleVariant;safecall;
		function Get_DisplayAutomaticPageBreaks(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayAutomaticPageBreaks(lcid:Integer;RHS:WordBool);safecall;
		function Drawings(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function DrawingObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function DropDowns(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_EnableAutoFilter(lcid:Integer):WordBool;safecall;
		procedure Set_EnableAutoFilter(lcid:Integer;RHS:WordBool);safecall;
		function Get_EnableSelection:XlEnableSelection;safecall;
		procedure Set_EnableSelection(RHS:XlEnableSelection);safecall;
		function Get_EnableOutlining(lcid:Integer):WordBool;safecall;
		procedure Set_EnableOutlining(lcid:Integer;RHS:WordBool);safecall;
		function Get_EnablePivotTable(lcid:Integer):WordBool;safecall;
		procedure Set_EnablePivotTable(lcid:Integer;RHS:WordBool);safecall;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_FilterMode(lcid:Integer):WordBool;safecall;
		procedure ResetAllPageBreaks;safecall;
		function GroupBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function GroupObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Labels(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Lines(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function ListBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Names:Names;safecall;
		function OLEObjects(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_OnCalculate(lcid:Integer):WideString;safecall;
		procedure Set_OnCalculate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnData(lcid:Integer):WideString;safecall;
		procedure Set_OnData(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnEntry(lcid:Integer):WideString;safecall;
		procedure Set_OnEntry(lcid:Integer;const RHS:WideString);safecall;
		function OptionButtons(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Outline:Outline;safecall;
		function Ovals(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure Paste(Destination:OleVariant;Link:OleVariant;lcid:Integer);safecall;
		procedure _PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;lcid:Integer);safecall;
		function Pictures(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function PivotTables(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant;lcid:Integer)
			:PivotTable;safecall;
		function Get_Range(Cell1:OleVariant;Cell2:OleVariant):ExcelRange;safecall;
		function Rectangles(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_Rows:ExcelRange;safecall;
		function Scenarios(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_ScrollArea:WideString;safecall;
		procedure Set_ScrollArea(const RHS:WideString);safecall;
		function ScrollBars(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		procedure ShowAllData(lcid:Integer);safecall;
		procedure ShowDataForm(lcid:Integer);safecall;
		function Spinners(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_StandardHeight(lcid:Integer):Double;safecall;
		function Get_StandardWidth(lcid:Integer):Double;safecall;
		procedure Set_StandardWidth(lcid:Integer;RHS:Double);safecall;
		function TextBoxes(Index:OleVariant;lcid:Integer):IDispatch;safecall;
		function Get_TransitionFormEntry(lcid:Integer):WordBool;safecall;
		procedure Set_TransitionFormEntry(lcid:Integer;RHS:WordBool);safecall;
		function Get_type_(lcid:Integer):XlSheetType;safecall;
		function Get_UsedRange(lcid:Integer):ExcelRange;safecall;
		function Get_HPageBreaks:HPageBreaks;safecall;
		function Get_VPageBreaks:VPageBreaks;safecall;
		function Get_QueryTables:QueryTables;safecall;
		function Get_DisplayPageBreaks:WordBool;safecall;
		procedure Set_DisplayPageBreaks(RHS:WordBool);safecall;
		function Get_Comments:Comments;safecall;
		function Get_Hyperlinks:Hyperlinks;safecall;
		procedure ClearCircles;safecall;
		procedure CircleInvalid;safecall;
		function Get__DisplayRightToLeft(lcid:Integer):Integer;safecall;
		procedure Set__DisplayRightToLeft(lcid:Integer;RHS:Integer);safecall;
		function Get__AutoFilter:AutoFilter;safecall;
		function Get_DisplayRightToLeft(lcid:Integer):WordBool;safecall;
		procedure Set_DisplayRightToLeft(lcid:Integer;RHS:WordBool);safecall;
		function Get_Scripts:Scripts;safecall;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);safecall;
		procedure _CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;IgnoreFinalYaa:OleVariant;SpellScript:OleVariant;lcid:Integer);safecall;
		function Get_Tab:Tab;safecall;
		function Get_MailEnvelope:MsoEnvelope;safecall;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);safecall;
		function Get_CustomProperties:CustomProperties;safecall;
		function Get_SmartTags:SmartTags;safecall;
		function Get_Protection:Protection;safecall;
		procedure PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;NoHTMLFormatting:OleVariant;lcid:Integer);safecall;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;AllowFormattingCells:OleVariant;AllowFormattingColumns:OleVariant;
			AllowFormattingRows:OleVariant;AllowInsertingColumns:OleVariant;AllowInsertingRows:OleVariant;
			AllowInsertingHyperlinks:OleVariant;AllowDeletingColumns:OleVariant;AllowDeletingRows:OleVariant;
			AllowSorting:OleVariant;AllowFiltering:OleVariant;AllowUsingPivotTables:OleVariant);safecall;
		function Get_ListObjects:ListObjects;safecall;
		function XmlDataQuery(const XPath:WideString;SelectionNamespaces:OleVariant;Map:OleVariant):ExcelRange;safecall;
		function XmlMapQuery(const XPath:WideString;SelectionNamespaces:OleVariant;Map:OleVariant):ExcelRange;safecall;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;
			lcid:Integer);safecall;
		function Get_EnableFormatConditionsCalculation:WordBool;safecall;
		procedure Set_EnableFormatConditionsCalculation(RHS:WordBool);safecall;
		function Get__Sort:Sort;safecall;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);safecall;
		function Get_PrintedCommentPages:Integer;safecall;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);safecall;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);safecall;
		function Get_CommentsThreaded:CommentsThreaded;safecall;
		function Get_AutoFilter:AutoFilter;safecall;
		function Get_Sort:Sort;safecall;
		function Get_NamedSheetViews:NamedSheetViewCollection;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property CodeName:WideString read Get_CodeName;
		property _CodeName:WideString read Get__CodeName write Set__CodeName;
		property Index[lcid:Integer]:Integer read Get_Index;
		property Name:WideString read Get_Name write Set_Name;
		property Next:IDispatch read Get_Next;
		property OnDoubleClick[lcid:Integer]:WideString read Get_OnDoubleClick write Set_OnDoubleClick;
		property OnSheetActivate[lcid:Integer]:WideString read Get_OnSheetActivate write Set_OnSheetActivate;
		property OnSheetDeactivate[lcid:Integer]:WideString read Get_OnSheetDeactivate write Set_OnSheetDeactivate;
		property PageSetup:PageSetup read Get_PageSetup;
		property Previous:IDispatch read Get_Previous;
		property ProtectContents[lcid:Integer]:WordBool read Get_ProtectContents;
		property ProtectDrawingObjects[lcid:Integer]:WordBool read Get_ProtectDrawingObjects;
		property ProtectionMode[lcid:Integer]:WordBool read Get_ProtectionMode;
		property ProtectScenarios[lcid:Integer]:WordBool read Get_ProtectScenarios;
		property Visible[lcid:Integer]:XlSheetVisibility read Get_Visible write Set_Visible;
		property Shapes:Shapes read Get_Shapes;
		property TransitionExpEval[lcid:Integer]:WordBool read Get_TransitionExpEval write Set_TransitionExpEval;
		property AutoFilterMode[lcid:Integer]:WordBool read Get_AutoFilterMode write Set_AutoFilterMode;
		property EnableCalculation:WordBool read Get_EnableCalculation write Set_EnableCalculation;
		property Cells:ExcelRange read Get_Cells;
		property CircularReference[lcid:Integer]:ExcelRange read Get_CircularReference;
		property Columns:ExcelRange read Get_Columns;
		property ConsolidationFunction[lcid:Integer]:XlConsolidationFunction read Get_ConsolidationFunction;
		property ConsolidationOptions[lcid:Integer]:OleVariant read Get_ConsolidationOptions;
		property ConsolidationSources[lcid:Integer]:OleVariant read Get_ConsolidationSources;
		property DisplayAutomaticPageBreaks[lcid:Integer]:WordBool read Get_DisplayAutomaticPageBreaks
			write Set_DisplayAutomaticPageBreaks;
		property EnableAutoFilter[lcid:Integer]:WordBool read Get_EnableAutoFilter write Set_EnableAutoFilter;
		property EnableSelection:XlEnableSelection read Get_EnableSelection write Set_EnableSelection;
		property EnableOutlining[lcid:Integer]:WordBool read Get_EnableOutlining write Set_EnableOutlining;
		property EnablePivotTable[lcid:Integer]:WordBool read Get_EnablePivotTable write Set_EnablePivotTable;
		property FilterMode[lcid:Integer]:WordBool read Get_FilterMode;
		property Names:Names read Get_Names;
		property OnCalculate[lcid:Integer]:WideString read Get_OnCalculate write Set_OnCalculate;
		property OnData[lcid:Integer]:WideString read Get_OnData write Set_OnData;
		property OnEntry[lcid:Integer]:WideString read Get_OnEntry write Set_OnEntry;
		property Outline:Outline read Get_Outline;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange read Get_Range;
		property Rows:ExcelRange read Get_Rows;
		property ScrollArea:WideString read Get_ScrollArea write Set_ScrollArea;
		property StandardHeight[lcid:Integer]:Double read Get_StandardHeight;
		property StandardWidth[lcid:Integer]:Double read Get_StandardWidth write Set_StandardWidth;
		property TransitionFormEntry[lcid:Integer]:WordBool read Get_TransitionFormEntry write Set_TransitionFormEntry;
		property Type_[lcid:Integer]:XlSheetType read Get_type_;
		property UsedRange[lcid:Integer]:ExcelRange read Get_UsedRange;
		property HPageBreaks:HPageBreaks read Get_HPageBreaks;
		property VPageBreaks:VPageBreaks read Get_VPageBreaks;
		property QueryTables:QueryTables read Get_QueryTables;
		property DisplayPageBreaks:WordBool read Get_DisplayPageBreaks write Set_DisplayPageBreaks;
		property Comments:Comments read Get_Comments;
		property Hyperlinks:Hyperlinks read Get_Hyperlinks;
		property _DisplayRightToLeft[lcid:Integer]:Integer read Get__DisplayRightToLeft write Set__DisplayRightToLeft;
		property _AutoFilter:AutoFilter read Get__AutoFilter;
		property DisplayRightToLeft[lcid:Integer]:WordBool read Get_DisplayRightToLeft write Set_DisplayRightToLeft;
		property Scripts:Scripts read Get_Scripts;
		property Tab:Tab read Get_Tab;
		property MailEnvelope:MsoEnvelope read Get_MailEnvelope;
		property CustomProperties:CustomProperties read Get_CustomProperties;
		property SmartTags:SmartTags read Get_SmartTags;
		property Protection:Protection read Get_Protection;
		property ListObjects:ListObjects read Get_ListObjects;
		property EnableFormatConditionsCalculation:WordBool read Get_EnableFormatConditionsCalculation
			write Set_EnableFormatConditionsCalculation;
		property _Sort:Sort read Get__Sort;
		property PrintedCommentPages:Integer read Get_PrintedCommentPages;
		property CommentsThreaded:CommentsThreaded read Get_CommentsThreaded;
		property AutoFilter:AutoFilter read Get_AutoFilter;
		property Sort:Sort read Get_Sort;
		property NamedSheetViews:NamedSheetViewCollection read Get_NamedSheetViews;
	end;

	// *********************************************************************//
	// DispIntf:  _WorksheetDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D8-0000-0000-C000-000000000046}
	// *********************************************************************//
	_WorksheetDisp=dispinterface
		['{000208D8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate(lcid:Integer);dispid 304;
		procedure Copy(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 551;
		procedure Delete(lcid:Integer);dispid 117;
		property CodeName:WideString readonly dispid 1373;
		property _CodeName:WideString dispid-2147418112;
		property Index[lcid:Integer]:Integer readonly dispid 486;
		procedure Move(Before:OleVariant;After:OleVariant;lcid:Integer);dispid 637;
		property Name:WideString dispid 110;
		property Next:IDispatch readonly dispid 502;
		property OnDoubleClick[lcid:Integer]:WideString dispid 628;
		property OnSheetActivate[lcid:Integer]:WideString dispid 1031;
		property OnSheetDeactivate[lcid:Integer]:WideString dispid 1081;
		property PageSetup:PageSetup readonly dispid 998;
		property Previous:IDispatch readonly dispid 503;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);dispid 281;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer);dispid 282;
		property ProtectContents[lcid:Integer]:WordBool readonly dispid 292;
		property ProtectDrawingObjects[lcid:Integer]:WordBool readonly dispid 293;
		property ProtectionMode[lcid:Integer]:WordBool readonly dispid 1159;
		property ProtectScenarios[lcid:Integer]:WordBool readonly dispid 294;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);dispid 284;
		procedure Select(Replace:OleVariant;lcid:Integer);dispid 235;
		procedure Unprotect(Password:OleVariant;lcid:Integer);dispid 285;
		property Visible[lcid:Integer]:XlSheetVisibility dispid 558;
		property Shapes:Shapes readonly dispid 1377;
		property TransitionExpEval[lcid:Integer]:WordBool dispid 401;
		function Arcs(Index:OleVariant;lcid:Integer):IDispatch;dispid 760;
		property AutoFilterMode[lcid:Integer]:WordBool dispid 792;
		procedure SetBackgroundPicture(const Filename:WideString);dispid 1188;
		function Buttons(Index:OleVariant;lcid:Integer):IDispatch;dispid 557;
		procedure Calculate(lcid:Integer);dispid 279;
		property EnableCalculation:WordBool dispid 1424;
		property Cells:ExcelRange readonly dispid 238;
		function ChartObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 1060;
		function CheckBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 824;
		procedure CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;lcid:Integer);dispid 505;
		property CircularReference[lcid:Integer]:ExcelRange readonly dispid 1069;
		procedure ClearArrows(lcid:Integer);dispid 970;
		property Columns:ExcelRange readonly dispid 241;
		property ConsolidationFunction[lcid:Integer]:XlConsolidationFunction readonly dispid 789;
		property ConsolidationOptions[lcid:Integer]:OleVariant readonly dispid 790;
		property ConsolidationSources[lcid:Integer]:OleVariant readonly dispid 791;
		property DisplayAutomaticPageBreaks[lcid:Integer]:WordBool dispid 643;
		function Drawings(Index:OleVariant;lcid:Integer):IDispatch;dispid 772;
		function DrawingObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 88;
		function DropDowns(Index:OleVariant;lcid:Integer):IDispatch;dispid 836;
		property EnableAutoFilter[lcid:Integer]:WordBool dispid 1156;
		property EnableSelection:XlEnableSelection dispid 1425;
		property EnableOutlining[lcid:Integer]:WordBool dispid 1157;
		property EnablePivotTable[lcid:Integer]:WordBool dispid 1158;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid 1;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid-5;
		property FilterMode[lcid:Integer]:WordBool readonly dispid 800;
		procedure ResetAllPageBreaks;dispid 1426;
		function GroupBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 834;
		function GroupObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 1113;
		function Labels(Index:OleVariant;lcid:Integer):IDispatch;dispid 841;
		function Lines(Index:OleVariant;lcid:Integer):IDispatch;dispid 767;
		function ListBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 832;
		property Names:Names readonly dispid 442;
		function OLEObjects(Index:OleVariant;lcid:Integer):IDispatch;dispid 799;
		property OnCalculate[lcid:Integer]:WideString dispid 625;
		property OnData[lcid:Integer]:WideString dispid 629;
		property OnEntry[lcid:Integer]:WideString dispid 627;
		function OptionButtons(Index:OleVariant;lcid:Integer):IDispatch;dispid 826;
		property Outline:Outline readonly dispid 102;
		function Ovals(Index:OleVariant;lcid:Integer):IDispatch;dispid 801;
		procedure Paste(Destination:OleVariant;Link:OleVariant;lcid:Integer);dispid 211;
		procedure _PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;lcid:Integer);dispid 1027;
		function Pictures(Index:OleVariant;lcid:Integer):IDispatch;dispid 771;
		function PivotTables(Index:OleVariant;lcid:Integer):IDispatch;dispid 690;
		function PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant;lcid:Integer)
			:PivotTable;dispid 684;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange readonly dispid 197;
		function Rectangles(Index:OleVariant;lcid:Integer):IDispatch;dispid 774;
		property Rows:ExcelRange readonly dispid 258;
		function Scenarios(Index:OleVariant;lcid:Integer):IDispatch;dispid 908;
		property ScrollArea:WideString dispid 1433;
		function ScrollBars(Index:OleVariant;lcid:Integer):IDispatch;dispid 830;
		procedure ShowAllData(lcid:Integer);dispid 794;
		procedure ShowDataForm(lcid:Integer);dispid 409;
		function Spinners(Index:OleVariant;lcid:Integer):IDispatch;dispid 838;
		property StandardHeight[lcid:Integer]:Double readonly dispid 407;
		property StandardWidth[lcid:Integer]:Double dispid 408;
		function TextBoxes(Index:OleVariant;lcid:Integer):IDispatch;dispid 777;
		property TransitionFormEntry[lcid:Integer]:WordBool dispid 402;
		property Type_[lcid:Integer]:XlSheetType readonly dispid 108;
		property UsedRange[lcid:Integer]:ExcelRange readonly dispid 412;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property QueryTables:QueryTables readonly dispid 1434;
		property DisplayPageBreaks:WordBool dispid 1435;
		property Comments:Comments readonly dispid 575;
		property Hyperlinks:Hyperlinks readonly dispid 1393;
		procedure ClearCircles;dispid 1436;
		procedure CircleInvalid;dispid 1437;
		property _DisplayRightToLeft[lcid:Integer]:Integer dispid 648;
		property _AutoFilter:AutoFilter readonly dispid 793;
		property DisplayRightToLeft[lcid:Integer]:WordBool dispid 1774;
		property Scripts:Scripts readonly dispid 1816;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);dispid 1772;
		procedure _CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;IgnoreFinalYaa:OleVariant;SpellScript:OleVariant;lcid:Integer);dispid 1817;
		property Tab:Tab readonly dispid 1041;
		property MailEnvelope:MsoEnvelope readonly dispid 2021;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 1925;
		property CustomProperties:CustomProperties readonly dispid 2030;
		property SmartTags:SmartTags readonly dispid 2016;
		property Protection:Protection readonly dispid 176;
		procedure PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;NoHTMLFormatting:OleVariant;lcid:Integer);dispid 1928;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;AllowFormattingCells:OleVariant;AllowFormattingColumns:OleVariant;
			AllowFormattingRows:OleVariant;AllowInsertingColumns:OleVariant;AllowInsertingRows:OleVariant;
			AllowInsertingHyperlinks:OleVariant;AllowDeletingColumns:OleVariant;AllowDeletingRows:OleVariant;
			AllowSorting:OleVariant;AllowFiltering:OleVariant;AllowUsingPivotTables:OleVariant);dispid 2029;
		property ListObjects:ListObjects readonly dispid 2259;
		function XmlDataQuery(const XPath:WideString;SelectionNamespaces:OleVariant;Map:OleVariant):ExcelRange;dispid 2260;
		function XmlMapQuery(const XPath:WideString;SelectionNamespaces:OleVariant;Map:OleVariant):ExcelRange;dispid 2263;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;lcid:Integer);
			dispid 2361;
		property EnableFormatConditionsCalculation:WordBool dispid 2511;
		property _Sort:Sort readonly dispid 880;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);dispid 2493;
		property PrintedCommentPages:Integer readonly dispid 2857;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);dispid 3175;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 3174;
		property CommentsThreaded:CommentsThreaded readonly dispid 3282;
		property AutoFilter:AutoFilter readonly dispid 3289;
		property Sort:Sort readonly dispid 3288;
		property NamedSheetViews:NamedSheetViewCollection readonly dispid 3309;
	end;

	// *********************************************************************//
	// Interface: IStyle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020852-0001-0000-C000-000000000046}
	// *********************************************************************//
	IStyle=interface(IDispatch)
		['{00020852-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_BuiltIn(out RHS:WordBool):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_FormulaHidden(out RHS:WordBool):HResult;stdcall;
		function Set_FormulaHidden(RHS:WordBool):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:XlHAlign):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:XlHAlign):HResult;stdcall;
		function Get_IncludeAlignment(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeAlignment(RHS:WordBool):HResult;stdcall;
		function Get_IncludeBorder(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeBorder(RHS:WordBool):HResult;stdcall;
		function Get_IncludeFont(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeFont(RHS:WordBool):HResult;stdcall;
		function Get_IncludeNumber(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeNumber(RHS:WordBool):HResult;stdcall;
		function Get_IncludePatterns(out RHS:WordBool):HResult;stdcall;
		function Set_IncludePatterns(RHS:WordBool):HResult;stdcall;
		function Get_IncludeProtection(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeProtection(RHS:WordBool):HResult;stdcall;
		function Get_IndentLevel(out RHS:Integer):HResult;stdcall;
		function Set_IndentLevel(RHS:Integer):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_MergeCells(out RHS:OleVariant):HResult;stdcall;
		function Set_MergeCells(RHS:OleVariant):HResult;stdcall;
		function Get_Name(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Get_NameLocal(out RHS:WideString):HResult;stdcall;
		function Get_NumberFormat(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormat(const RHS:WideString):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormatLocal(const RHS:WideString):HResult;stdcall;
		function Get_Orientation(out RHS:XlOrientation):HResult;stdcall;
		function Set_Orientation(RHS:XlOrientation):HResult;stdcall;
		function Get_ShrinkToFit(out RHS:WordBool):HResult;stdcall;
		function Set_ShrinkToFit(RHS:WordBool):HResult;stdcall;
		function Get_Value(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:XlVAlign):HResult;stdcall;
		function Set_VerticalAlignment(RHS:XlVAlign):HResult;stdcall;
		function Get_WrapText(out RHS:WordBool):HResult;stdcall;
		function Set_WrapText(RHS:WordBool):HResult;stdcall;
		function Get__Default(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IStyles
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020853-0001-0000-C000-000000000046}
	// *********************************************************************//
	IStyles=interface(IDispatch)
		['{00020853-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Name:WideString;BasedOn:OleVariant;out RHS:Style):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;lcid:Integer;out RHS:Style):HResult;stdcall;
		function Merge(Workbook:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;lcid:Integer;out RHS:Style):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IBorders
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020855-0001-0000-C000-000000000046}
	// *********************************************************************//
	IBorders=interface(IDispatch)
		['{00020855-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:OleVariant):HResult;stdcall;
		function Set_ColorIndex(RHS:OleVariant):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:XlBordersIndex;out RHS:Border):HResult;stdcall;
		function Get_LineStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_LineStyle(RHS:OleVariant):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get_Weight(out RHS:OleVariant):HResult;stdcall;
		function Set_Weight(RHS:OleVariant):HResult;stdcall;
		function Get__Default(Index:XlBordersIndex;out RHS:Border):HResult;stdcall;
		function Get_ThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_ThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _Global
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D9-0000-0000-C000-000000000046}
	// *********************************************************************//
	_Global=interface(IDispatch)
		['{000208D9-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:ExcelApplication;safecall;
		function Get_ActiveCell:ExcelRange;safecall;
		function Get_ActiveChart:ExcelChart;safecall;
		function Get_ActiveDialog:DialogSheet;safecall;
		function Get_ActiveMenuBar:MenuBar;safecall;
		function Get_ActivePrinter(lcid:Integer):WideString;safecall;
		procedure Set_ActivePrinter(lcid:Integer;const RHS:WideString);safecall;
		function Get_ActiveSheet:IDispatch;safecall;
		function Get_ActiveWindow:Window;safecall;
		function Get_ActiveWorkbook:ExcelWorkbook;safecall;
		function Get_AddIns:AddIns;safecall;
		function Get_Assistant:Assistant;safecall;
		procedure Calculate(lcid:Integer);safecall;
		function Get_Cells:ExcelRange;safecall;
		function Get_Charts:Sheets;safecall;
		function Get_Columns:ExcelRange;safecall;
		function Get_CommandBars:CommandBars;safecall;
		function Get_DDEAppReturnCode(lcid:Integer):Integer;safecall;
		procedure DDEExecute(Channel:Integer;const String_:WideString;lcid:Integer);safecall;
		function DDEInitiate(const App:WideString;const Topic:WideString;lcid:Integer):Integer;safecall;
		procedure DDEPoke(Channel:Integer;Item:OleVariant;Data:OleVariant;lcid:Integer);safecall;
		function DDERequest(Channel:Integer;const Item:WideString;lcid:Integer):OleVariant;safecall;
		procedure DDETerminate(Channel:Integer;lcid:Integer);safecall;
		function Get_DialogSheets:Sheets;safecall;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;safecall;
		function ExecuteExcel4Macro(const String_:WideString;lcid:Integer):OleVariant;safecall;
		function Intersect(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;safecall;
		function Get_MenuBars:MenuBars;safecall;
		function Get_Modules:Modules;safecall;
		function Get_Names:Names;safecall;
		function Get_Range(Cell1:OleVariant;Cell2:OleVariant):ExcelRange;safecall;
		function Get_Rows:ExcelRange;safecall;
		function Run(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):OleVariant;safecall;
		function _Run2(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Selection(lcid:Integer):IDispatch;safecall;
		procedure SendKeys(Keys:OleVariant;Wait:OleVariant;lcid:Integer);safecall;
		function Get_Sheets:Sheets;safecall;
		function Get_ShortcutMenus(Index:Integer):Menu;safecall;
		function Get_ThisWorkbook(lcid:Integer):ExcelWorkbook;safecall;
		function Get_Toolbars:Toolbars;safecall;
		function Union(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;safecall;
		function Get_Windows:Windows;safecall;
		function Get_Workbooks:Workbooks;safecall;
		function Get_WorksheetFunction:WorksheetFunction;safecall;
		function Get_Worksheets:Sheets;safecall;
		function Get_Excel4IntlMacroSheets:Sheets;safecall;
		function Get_Excel4MacroSheets:Sheets;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:ExcelApplication read Get_Parent;
		property ActiveCell:ExcelRange read Get_ActiveCell;
		property ActiveChart:ExcelChart read Get_ActiveChart;
		property ActiveDialog:DialogSheet read Get_ActiveDialog;
		property ActiveMenuBar:MenuBar read Get_ActiveMenuBar;
		property ActivePrinter[lcid:Integer]:WideString read Get_ActivePrinter write Set_ActivePrinter;
		property ActiveSheet:IDispatch read Get_ActiveSheet;
		property ActiveWindow:Window read Get_ActiveWindow;
		property ActiveWorkbook:ExcelWorkbook read Get_ActiveWorkbook;
		property AddIns:AddIns read Get_AddIns;
		property Assistant:Assistant read Get_Assistant;
		property Cells:ExcelRange read Get_Cells;
		property Charts:Sheets read Get_Charts;
		property Columns:ExcelRange read Get_Columns;
		property CommandBars:CommandBars read Get_CommandBars;
		property DDEAppReturnCode[lcid:Integer]:Integer read Get_DDEAppReturnCode;
		property DialogSheets:Sheets read Get_DialogSheets;
		property MenuBars:MenuBars read Get_MenuBars;
		property Modules:Modules read Get_Modules;
		property Names:Names read Get_Names;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange read Get_Range;
		property Rows:ExcelRange read Get_Rows;
		property Selection[lcid:Integer]:IDispatch read Get_Selection;
		property Sheets:Sheets read Get_Sheets;
		property ShortcutMenus[Index:Integer]:Menu read Get_ShortcutMenus;
		property ThisWorkbook[lcid:Integer]:ExcelWorkbook read Get_ThisWorkbook;
		property Toolbars:Toolbars read Get_Toolbars;
		property Windows:Windows read Get_Windows;
		property Workbooks:Workbooks read Get_Workbooks;
		property WorksheetFunction:WorksheetFunction read Get_WorksheetFunction;
		property Worksheets:Sheets read Get_Worksheets;
		property Excel4IntlMacroSheets:Sheets read Get_Excel4IntlMacroSheets;
		property Excel4MacroSheets:Sheets read Get_Excel4MacroSheets;
	end;

	// *********************************************************************//
	// DispIntf:  _GlobalDisp
	// Flags:     (4560) Hidden Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208D9-0000-0000-C000-000000000046}
	// *********************************************************************//
	_GlobalDisp=dispinterface
		['{000208D9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:ExcelApplication readonly dispid 150;
		property ActiveCell:ExcelRange readonly dispid 305;
		property ActiveChart:ExcelChart readonly dispid 183;
		property ActiveDialog:DialogSheet readonly dispid 815;
		property ActiveMenuBar:MenuBar readonly dispid 758;
		property ActivePrinter[lcid:Integer]:WideString dispid 306;
		property ActiveSheet:IDispatch readonly dispid 307;
		property ActiveWindow:Window readonly dispid 759;
		property ActiveWorkbook:ExcelWorkbook readonly dispid 308;
		property AddIns:AddIns readonly dispid 549;
		property Assistant:Assistant readonly dispid 1438;
		procedure Calculate(lcid:Integer);dispid 279;
		property Cells:ExcelRange readonly dispid 238;
		property Charts:Sheets readonly dispid 121;
		property Columns:ExcelRange readonly dispid 241;
		property CommandBars:CommandBars readonly dispid 1439;
		property DDEAppReturnCode[lcid:Integer]:Integer readonly dispid 332;
		procedure DDEExecute(Channel:Integer;const String_:WideString;lcid:Integer);dispid 333;
		function DDEInitiate(const App:WideString;const Topic:WideString;lcid:Integer):Integer;dispid 334;
		procedure DDEPoke(Channel:Integer;Item:OleVariant;Data:OleVariant;lcid:Integer);dispid 335;
		function DDERequest(Channel:Integer;const Item:WideString;lcid:Integer):OleVariant;dispid 336;
		procedure DDETerminate(Channel:Integer;lcid:Integer);dispid 337;
		property DialogSheets:Sheets readonly dispid 764;
		function Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid 1;
		function _Evaluate(Name:OleVariant;lcid:Integer):OleVariant;dispid-5;
		function ExecuteExcel4Macro(const String_:WideString;lcid:Integer):OleVariant;dispid 350;
		function Intersect(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;dispid 766;
		property MenuBars:MenuBars readonly dispid 589;
		property Modules:Modules readonly dispid 582;
		property Names:Names readonly dispid 442;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange readonly dispid 197;
		property Rows:ExcelRange readonly dispid 258;
		function Run(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):OleVariant;dispid 259;
		function _Run2(Macro:OleVariant;Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):OleVariant;dispid 806;
		property Selection[lcid:Integer]:IDispatch readonly dispid 147;
		procedure SendKeys(Keys:OleVariant;Wait:OleVariant;lcid:Integer);dispid 383;
		property Sheets:Sheets readonly dispid 485;
		property ShortcutMenus[Index:Integer]:Menu readonly dispid 776;
		property ThisWorkbook[lcid:Integer]:ExcelWorkbook readonly dispid 778;
		property Toolbars:Toolbars readonly dispid 552;
		function Union(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant;lcid:Integer):ExcelRange;dispid 779;
		property Windows:Windows readonly dispid 430;
		property Workbooks:Workbooks readonly dispid 572;
		property WorksheetFunction:WorksheetFunction readonly dispid 1440;
		property Worksheets:Sheets readonly dispid 494;
		property Excel4IntlMacroSheets:Sheets readonly dispid 581;
		property Excel4MacroSheets:Sheets readonly dispid 579;
	end;

	// *********************************************************************//
	// Interface: IAddIn
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020857-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAddIn=interface(IDispatch)
		['{00020857-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Author(out RHS:WideString):HResult;stdcall;
		function Get_Comments(out RHS:WideString):HResult;stdcall;
		function Get_FullName(out RHS:WideString):HResult;stdcall;
		function Get_Installed(out RHS:WordBool):HResult;stdcall;
		function Set_Installed(RHS:WordBool):HResult;stdcall;
		function Get_Keywords(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Path(out RHS:WideString):HResult;stdcall;
		function Get_Subject(out RHS:WideString):HResult;stdcall;
		function Get_Title(out RHS:WideString):HResult;stdcall;
		function Get_progID(out RHS:WideString):HResult;stdcall;
		function Get_CLSID(out RHS:WideString):HResult;stdcall;
		function Get_IsOpen(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAddIns
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020858-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAddIns=interface(IDispatch)
		['{00020858-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Filename:WideString;CopyFile:OleVariant;out RHS:AddIn):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:AddIn):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:AddIn):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IToolbar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IToolbar=interface(IDispatch)
		['{0002085C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BuiltIn(out RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Height(out RHS:Integer):HResult;stdcall;
		function Set_Height(RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Integer):HResult;stdcall;
		function Set_Left(RHS:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Position(out RHS:Integer):HResult;stdcall;
		function Set_Position(RHS:Integer):HResult;stdcall;
		function Get_Protection(out RHS:XlToolbarProtection):HResult;stdcall;
		function Set_Protection(RHS:XlToolbarProtection):HResult;stdcall;
		function Reset:HResult;stdcall;
		function Get_ToolbarButtons(out RHS:ToolbarButtons):HResult;stdcall;
		function Get_Top(out RHS:Integer):HResult;stdcall;
		function Set_Top(RHS:Integer):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Integer):HResult;stdcall;
		function Set_Width(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IToolbars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IToolbars=interface(IDispatch)
		['{0002085D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Name:OleVariant;out RHS:Toolbar):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Toolbar):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Toolbar):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IToolbarButton
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IToolbarButton=interface(IDispatch)
		['{0002085E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BuiltIn(out RHS:WordBool):HResult;stdcall;
		function Get_BuiltInFace(out RHS:WordBool):HResult;stdcall;
		function Set_BuiltInFace(RHS:WordBool):HResult;stdcall;
		function Copy(const Toolbar:Toolbar;Before:Integer):HResult;stdcall;
		function CopyFace:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Edit:HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_HelpContextID(out RHS:Integer):HResult;stdcall;
		function Set_HelpContextID(RHS:Integer):HResult;stdcall;
		function Get_HelpFile(out RHS:WideString):HResult;stdcall;
		function Set_HelpFile(const RHS:WideString):HResult;stdcall;
		function Get_ID(out RHS:Integer):HResult;stdcall;
		function Get_IsGap(out RHS:WordBool):HResult;stdcall;
		function Move(const Toolbar:Toolbar;Before:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function PasteFace:HResult;stdcall;
		function Get_Pushed(out RHS:WordBool):HResult;stdcall;
		function Set_Pushed(RHS:WordBool):HResult;stdcall;
		function Reset:HResult;stdcall;
		function Get_StatusBar(out RHS:WideString):HResult;stdcall;
		function Set_StatusBar(const RHS:WideString):HResult;stdcall;
		function Get_Width(out RHS:Integer):HResult;stdcall;
		function Set_Width(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IToolbarButtons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IToolbarButtons=interface(IDispatch)
		['{0002085F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Button:OleVariant;Before:OleVariant;OnAction:OleVariant;Pushed:OleVariant;Enabled:OleVariant;
			StatusBar:OleVariant;HelpFile:OleVariant;HelpContextID:OleVariant;out RHS:ToolbarButton):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:ToolbarButton):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:ToolbarButton):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAreas
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020860-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAreas=interface(IDispatch)
		['{00020860-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:ExcelRange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:ExcelRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorkbookEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024412-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorkbookEvents=interface(IDispatch)
		['{00024412-0001-0000-C000-000000000046}']
		function Open:HResult;stdcall;
		function Activate:HResult;stdcall;
		function Deactivate:HResult;stdcall;
		function BeforeClose(var Cancel:WordBool):HResult;stdcall;
		function BeforeSave(SaveAsUI:WordBool;var Cancel:WordBool):HResult;stdcall;
		function BeforePrint(var Cancel:WordBool):HResult;stdcall;
		function NewSheet(const Sh:IDispatch):HResult;stdcall;
		function AddinInstall:HResult;stdcall;
		function AddinUninstall:HResult;stdcall;
		function WindowResize(const Wn:Window):HResult;stdcall;
		function WindowActivate(const Wn:Window):HResult;stdcall;
		function WindowDeactivate(const Wn:Window):HResult;stdcall;
		function SheetSelectionChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function SheetBeforeDoubleClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function SheetBeforeRightClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool):HResult;stdcall;
		function SheetActivate(const Sh:IDispatch):HResult;stdcall;
		function SheetDeactivate(const Sh:IDispatch):HResult;stdcall;
		function SheetCalculate(const Sh:IDispatch):HResult;stdcall;
		function SheetChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function SheetFollowHyperlink(const Sh:IDispatch;const Target:Hyperlink):HResult;stdcall;
		function SheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
		function PivotTableCloseConnection(const Target:PivotTable):HResult;stdcall;
		function PivotTableOpenConnection(const Target:PivotTable):HResult;stdcall;
		function Sync(SyncEventType:MsoSyncEventType):HResult;stdcall;
		function BeforeXmlImport(const Map:XmlMap;const Url:WideString;IsRefresh:WordBool;var Cancel:WordBool)
			:HResult;stdcall;
		function AfterXmlImport(const Map:XmlMap;IsRefresh:WordBool;Result:XlXmlImportResult):HResult;stdcall;
		function BeforeXmlExport(const Map:XmlMap;const Url:WideString;var Cancel:WordBool):HResult;stdcall;
		function AfterXmlExport(const Map:XmlMap;const Url:WideString;Result:XlXmlExportResult):HResult;stdcall;
		function RowsetComplete(const Description:WideString;const Sheet:WideString;Success:WordBool):HResult;stdcall;
		function SheetPivotTableAfterValueChange(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			const TargetRange:ExcelRange):HResult;stdcall;
		function SheetPivotTableBeforeAllocateChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function SheetPivotTableBeforeCommitChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool):HResult;stdcall;
		function SheetPivotTableBeforeDiscardChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer):HResult;stdcall;
		function SheetPivotTableChangeSync(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
		function AfterSave(Success:WordBool):HResult;stdcall;
		function NewChart(const Ch:ExcelChart):HResult;stdcall;
		function SheetLensGalleryRenderComplete(const Sh:IDispatch):HResult;stdcall;
		function SheetTableUpdate(const Sh:IDispatch;const Target:TableObject):HResult;stdcall;
		function ModelChange(const Changes:ModelChanges):HResult;stdcall;
		function SheetBeforeDelete(const Sh:IDispatch):HResult;stdcall;
		function BeforeRemoteChange:HResult;stdcall;
		function AfterRemoteChange:HResult;stdcall;
		function RemoteSheetChange(const Sh:IDispatch;const Target:ExcelRange):HResult;stdcall;
		function RemoteNewSheet(const Sh:IDispatch):HResult;stdcall;
		function RemoteNewChart(const Ch:ExcelChart):HResult;stdcall;
		function RemoteSheetBeforeDelete(const Sh:IDispatch):HResult;stdcall;
		function RemoteSheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
		function RemoteSheetPivotTableChangeSync(const Sh:IDispatch;const Target:PivotTable):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _Workbook
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {000208DA-0000-0000-C000-000000000046}
	// *********************************************************************//
	_Workbook=interface(IDispatch)
		['{000208DA-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_AcceptLabelsInFormulas:WordBool;safecall;
		procedure Set_AcceptLabelsInFormulas(RHS:WordBool);safecall;
		procedure Activate(lcid:Integer);safecall;
		function Get_ActiveChart:ExcelChart;safecall;
		function Get_ActiveSheet:IDispatch;safecall;
		function Get_Author(lcid:Integer):WideString;safecall;
		procedure Set_Author(lcid:Integer;const RHS:WideString);safecall;
		function Get_AutoUpdateFrequency:Integer;safecall;
		procedure Set_AutoUpdateFrequency(RHS:Integer);safecall;
		function Get_AutoUpdateSaveChanges:WordBool;safecall;
		procedure Set_AutoUpdateSaveChanges(RHS:WordBool);safecall;
		function Get_ChangeHistoryDuration:Integer;safecall;
		procedure Set_ChangeHistoryDuration(RHS:Integer);safecall;
		function Get_BuiltinDocumentProperties:IDispatch;safecall;
		procedure ChangeFileAccess(Mode:XlFileAccess;WritePassword:OleVariant;Notify:OleVariant;lcid:Integer);safecall;
		procedure ChangeLink(const Name:WideString;const NewName:WideString;Type_:XlLinkType;lcid:Integer);safecall;
		function Get_Charts:Sheets;safecall;
		procedure Close(SaveChanges:OleVariant;Filename:OleVariant;RouteWorkbook:OleVariant;lcid:Integer);safecall;
		function Get_CodeName:WideString;safecall;
		function Get__CodeName:WideString;safecall;
		procedure Set__CodeName(const RHS:WideString);safecall;
		function Get_Colors(Index:OleVariant;lcid:Integer):OleVariant;safecall;
		procedure Set_Colors(Index:OleVariant;lcid:Integer;RHS:OleVariant);safecall;
		function Get_CommandBars:CommandBars;safecall;
		function Get_Comments(lcid:Integer):WideString;safecall;
		procedure Set_Comments(lcid:Integer;const RHS:WideString);safecall;
		function Get_ConflictResolution:XlSaveConflictResolution;safecall;
		procedure Set_ConflictResolution(RHS:XlSaveConflictResolution);safecall;
		function Get_Container:IDispatch;safecall;
		function Get_CreateBackup(lcid:Integer):WordBool;safecall;
		function Get_CustomDocumentProperties:IDispatch;safecall;
		function Get_Date1904(lcid:Integer):WordBool;safecall;
		procedure Set_Date1904(lcid:Integer;RHS:WordBool);safecall;
		procedure DeleteNumberFormat(const NumberFormat:WideString;lcid:Integer);safecall;
		function Get_DialogSheets:Sheets;safecall;
		function Get_DisplayDrawingObjects(lcid:Integer):XlDisplayDrawingObjects;safecall;
		procedure Set_DisplayDrawingObjects(lcid:Integer;RHS:XlDisplayDrawingObjects);safecall;
		function ExclusiveAccess(lcid:Integer):WordBool;safecall;
		function Get_FileFormat(lcid:Integer):XlFileFormat;safecall;
		procedure ForwardMailer(lcid:Integer);safecall;
		function Get_FullName(lcid:Integer):WideString;safecall;
		function Get_HasMailer(lcid:Integer):WordBool;safecall;
		procedure Set_HasMailer(lcid:Integer;RHS:WordBool);safecall;
		function Get_HasPassword(lcid:Integer):WordBool;safecall;
		function Get_HasRoutingSlip(lcid:Integer):WordBool;safecall;
		procedure Set_HasRoutingSlip(lcid:Integer;RHS:WordBool);safecall;
		function Get_IsAddin:WordBool;safecall;
		procedure Set_IsAddin(RHS:WordBool);safecall;
		function Get_Keywords(lcid:Integer):WideString;safecall;
		procedure Set_Keywords(lcid:Integer;const RHS:WideString);safecall;
		function LinkInfo(const Name:WideString;LinkInfo:XlLinkInfo;Type_:OleVariant;EditionRef:OleVariant;lcid:Integer)
			:OleVariant;safecall;
		function LinkSources(Type_:OleVariant;lcid:Integer):OleVariant;safecall;
		function Get_Mailer:Mailer;safecall;
		procedure MergeWorkbook(Filename:OleVariant);safecall;
		function Get_Modules:Sheets;safecall;
		function Get_MultiUserEditing(lcid:Integer):WordBool;safecall;
		function Get_Name:WideString;safecall;
		function Get_Names:Names;safecall;
		function NewWindow(lcid:Integer):Window;safecall;
		function Get_OnSave(lcid:Integer):WideString;safecall;
		procedure Set_OnSave(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetActivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetActivate(lcid:Integer;const RHS:WideString);safecall;
		function Get_OnSheetDeactivate(lcid:Integer):WideString;safecall;
		procedure Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString);safecall;
		procedure OpenLinks(const Name:WideString;ReadOnly:OleVariant;Type_:OleVariant;lcid:Integer);safecall;
		function Get_Path(lcid:Integer):WideString;safecall;
		function Get_PersonalViewListSettings:WordBool;safecall;
		procedure Set_PersonalViewListSettings(RHS:WordBool);safecall;
		function Get_PersonalViewPrintSettings:WordBool;safecall;
		procedure Set_PersonalViewPrintSettings(RHS:WordBool);safecall;
		function PivotCaches:PivotCaches;safecall;
		procedure Post(DestName:OleVariant;lcid:Integer);safecall;
		function Get_PrecisionAsDisplayed(lcid:Integer):WordBool;safecall;
		procedure Set_PrecisionAsDisplayed(lcid:Integer;RHS:WordBool);safecall;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);safecall;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);safecall;
		procedure _Protect(Password:OleVariant;Structure:OleVariant;Windows:OleVariant);safecall;
		procedure _ProtectSharing(Filename:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;SharingPassword:OleVariant);safecall;
		function Get_ProtectStructure:WordBool;safecall;
		function Get_ProtectWindows:WordBool;safecall;
		function Get_ReadOnly(lcid:Integer):WordBool;safecall;
		function Get__ReadOnlyRecommended(lcid:Integer):WordBool;safecall;
		procedure RefreshAll;safecall;
		procedure Reply(lcid:Integer);safecall;
		procedure ReplyAll(lcid:Integer);safecall;
		procedure RemoveUser(Index:Integer);safecall;
		function Get_RevisionNumber(lcid:Integer):Integer;safecall;
		procedure Route(lcid:Integer);safecall;
		function Get_Routed(lcid:Integer):WordBool;safecall;
		function Get_RoutingSlip:RoutingSlip;safecall;
		procedure RunAutoMacros(Which:XlRunAutoMacro;lcid:Integer);safecall;
		procedure Save(lcid:Integer);safecall;
		procedure __SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			lcid:Integer);safecall;
		procedure SaveCopyAs(Filename:OleVariant;lcid:Integer);safecall;
		function Get_Saved(lcid:Integer):WordBool;safecall;
		procedure Set_Saved(lcid:Integer;RHS:WordBool);safecall;
		function Get_SaveLinkValues(lcid:Integer):WordBool;safecall;
		procedure Set_SaveLinkValues(lcid:Integer;RHS:WordBool);safecall;
		procedure SendMail(Recipients:OleVariant;Subject:OleVariant;ReturnReceipt:OleVariant;lcid:Integer);safecall;
		procedure SendMailer(FileFormat:OleVariant;Priority:XlPriority;lcid:Integer);safecall;
		procedure SetLinkOnData(const Name:WideString;Procedure_:OleVariant;lcid:Integer);safecall;
		function Get_Sheets:Sheets;safecall;
		function Get_ShowConflictHistory(lcid:Integer):WordBool;safecall;
		procedure Set_ShowConflictHistory(lcid:Integer;RHS:WordBool);safecall;
		function Get_Styles:Styles;safecall;
		function Get_Subject(lcid:Integer):WideString;safecall;
		procedure Set_Subject(lcid:Integer;const RHS:WideString);safecall;
		function Get_Title(lcid:Integer):WideString;safecall;
		procedure Set_Title(lcid:Integer;const RHS:WideString);safecall;
		procedure Unprotect(Password:OleVariant;lcid:Integer);safecall;
		procedure UnprotectSharing(SharingPassword:OleVariant);safecall;
		procedure UpdateFromFile(lcid:Integer);safecall;
		procedure UpdateLink(Name:OleVariant;Type_:OleVariant;lcid:Integer);safecall;
		function Get_UpdateRemoteReferences(lcid:Integer):WordBool;safecall;
		procedure Set_UpdateRemoteReferences(lcid:Integer;RHS:WordBool);safecall;
		function Get_UserControl:WordBool;safecall;
		procedure Set_UserControl(RHS:WordBool);safecall;
		function Get_UserStatus(lcid:Integer):OleVariant;safecall;
		function Get_CustomViews:CustomViews;safecall;
		function Get_Windows:Windows;safecall;
		function Get_Worksheets:Sheets;safecall;
		function Get_WriteReserved(lcid:Integer):WordBool;safecall;
		function Get_WriteReservedBy(lcid:Integer):WideString;safecall;
		function Get_Excel4IntlMacroSheets:Sheets;safecall;
		function Get_Excel4MacroSheets:Sheets;safecall;
		function Get_TemplateRemoveExtData:WordBool;safecall;
		procedure Set_TemplateRemoveExtData(RHS:WordBool);safecall;
		procedure HighlightChangesOptions(When:OleVariant;Who:OleVariant;Where:OleVariant);safecall;
		function Get_HighlightChangesOnScreen:WordBool;safecall;
		procedure Set_HighlightChangesOnScreen(RHS:WordBool);safecall;
		function Get_KeepChangeHistory:WordBool;safecall;
		procedure Set_KeepChangeHistory(RHS:WordBool);safecall;
		function Get_ListChangesOnNewSheet:WordBool;safecall;
		procedure Set_ListChangesOnNewSheet(RHS:WordBool);safecall;
		procedure PurgeChangeHistoryNow(Days:Integer;SharingPassword:OleVariant);safecall;
		procedure AcceptAllChanges(When:OleVariant;Who:OleVariant;Where:OleVariant);safecall;
		procedure RejectAllChanges(When:OleVariant;Who:OleVariant;Where:OleVariant);safecall;
		procedure PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant;
			lcid:Integer);safecall;
		procedure ResetColors;safecall;
		function Get_VBProject:VBProject;safecall;
		procedure FollowHyperlink(const Address:WideString;SubAddress:OleVariant;NewWindow:OleVariant;AddHistory:OleVariant;
			ExtraInfo:OleVariant;Method:OleVariant;HeaderInfo:OleVariant);safecall;
		procedure AddToFavorites;safecall;
		function Get_IsInplace:WordBool;safecall;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);safecall;
		procedure WebPagePreview;safecall;
		function Get_PublishObjects:PublishObjects;safecall;
		function Get_WebOptions:WebOptions;safecall;
		procedure ReloadAs(Encoding:MsoEncoding);safecall;
		function Get_HTMLProject:HTMLProject;safecall;
		function Get_EnvelopeVisible:WordBool;safecall;
		procedure Set_EnvelopeVisible(RHS:WordBool);safecall;
		function Get_CalculationVersion:Integer;safecall;
		procedure Dummy17(calcid:Integer);safecall;
		procedure sblt(const s:WideString);safecall;
		function Get_VBASigned:WordBool;safecall;
		function Get_ShowPivotTableFieldList:WordBool;safecall;
		procedure Set_ShowPivotTableFieldList(RHS:WordBool);safecall;
		function Get_UpdateLinks:XlUpdateLinks;safecall;
		procedure Set_UpdateLinks(RHS:XlUpdateLinks);safecall;
		procedure BreakLink(const Name:WideString;Type_:XlLinkType);safecall;
		procedure Dummy16;safecall;
		procedure _SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			Local:OleVariant;lcid:Integer);safecall;
		function Get_EnableAutoRecover:WordBool;safecall;
		procedure Set_EnableAutoRecover(RHS:WordBool);safecall;
		function Get_RemovePersonalInformation:WordBool;safecall;
		procedure Set_RemovePersonalInformation(RHS:WordBool);safecall;
		function Get_FullNameURLEncoded(lcid:Integer):WideString;safecall;
		procedure CheckIn(SaveChanges:OleVariant;Comments:OleVariant;MakePublic:OleVariant);safecall;
		function CanCheckIn:WordBool;safecall;
		procedure SendForReview(Recipients:OleVariant;Subject:OleVariant;ShowMessage:OleVariant;
			IncludeAttachment:OleVariant);safecall;
		procedure ReplyWithChanges(ShowMessage:OleVariant);safecall;
		procedure EndReview;safecall;
		function Get_Password:WideString;safecall;
		procedure Set_Password(const RHS:WideString);safecall;
		function Get_WritePassword:WideString;safecall;
		procedure Set_WritePassword(const RHS:WideString);safecall;
		function Get_PasswordEncryptionProvider:WideString;safecall;
		function Get_PasswordEncryptionAlgorithm:WideString;safecall;
		function Get_PasswordEncryptionKeyLength:Integer;safecall;
		procedure SetPasswordEncryptionOptions(PasswordEncryptionProvider:OleVariant;PasswordEncryptionAlgorithm:OleVariant;
			PasswordEncryptionKeyLength:OleVariant;PasswordEncryptionFileProperties:OleVariant);safecall;
		function Get_PasswordEncryptionFileProperties:WordBool;safecall;
		function Get_ReadOnlyRecommended:WordBool;safecall;
		procedure Set_ReadOnlyRecommended(RHS:WordBool);safecall;
		procedure Protect(Password:OleVariant;Structure:OleVariant;Windows:OleVariant);safecall;
		function Get_SmartTagOptions:SmartTagOptions;safecall;
		procedure RecheckSmartTags;safecall;
		function Get_Permission:Permission;safecall;
		function Get_SharedWorkspace:SharedWorkspace;safecall;
		function Get_Sync:Sync;safecall;
		procedure SendFaxOverInternet(Recipients:OleVariant;Subject:OleVariant;ShowMessage:OleVariant);safecall;
		function Get_XmlNamespaces:XmlNamespaces;safecall;
		function Get_XmlMaps:XmlMaps;safecall;
		function XmlImport(const Url:WideString;out ImportMap:XmlMap;Overwrite:OleVariant;Destination:OleVariant)
			:XlXmlImportResult;safecall;
		function Get_SmartDocument:SmartDocument;safecall;
		function Get_DocumentLibraryVersions:DocumentLibraryVersions;safecall;
		function Get_InactiveListBorderVisible:WordBool;safecall;
		procedure Set_InactiveListBorderVisible(RHS:WordBool);safecall;
		function Get_DisplayInkComments:WordBool;safecall;
		procedure Set_DisplayInkComments(RHS:WordBool);safecall;
		function XmlImportXml(const Data:WideString;out ImportMap:XmlMap;Overwrite:OleVariant;Destination:OleVariant)
			:XlXmlImportResult;safecall;
		procedure SaveAsXMLData(const Filename:WideString;const Map:XmlMap);safecall;
		procedure ToggleFormsDesign;safecall;
		function Get_ContentTypeProperties:MetaProperties;safecall;
		function Get_Connections:Connections;safecall;
		procedure RemoveDocumentInformation(RemoveDocInfoType:XlRemoveDocInfoType);safecall;
		function Get_Signatures:SignatureSet;safecall;
		procedure CheckInWithVersion(SaveChanges:OleVariant;Comments:OleVariant;MakePublic:OleVariant;
			VersionType:OleVariant);safecall;
		function Get_ServerPolicy:ServerPolicy;safecall;
		procedure LockServerFile;safecall;
		function Get_DocumentInspectors:DocumentInspectors;safecall;
		function GetWorkflowTasks:WorkflowTasks;safecall;
		function GetWorkflowTemplates:WorkflowTemplates;safecall;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;
			lcid:Integer);safecall;
		function Get_ServerViewableItems:ServerViewableItems;safecall;
		function Get_TableStyles:TableStyles;safecall;
		function Get_DefaultTableStyle:OleVariant;safecall;
		procedure Set_DefaultTableStyle(RHS:OleVariant);safecall;
		function Get_DefaultPivotTableStyle:OleVariant;safecall;
		procedure Set_DefaultPivotTableStyle(RHS:OleVariant);safecall;
		function Get_CheckCompatibility:WordBool;safecall;
		procedure Set_CheckCompatibility(RHS:WordBool);safecall;
		function Get_HasVBProject:WordBool;safecall;
		function Get_CustomXMLParts:CustomXMLParts;safecall;
		function Get_Final:WordBool;safecall;
		procedure Set_Final(RHS:WordBool);safecall;
		function Get_Research:Research;safecall;
		function Get_Theme:OfficeTheme;safecall;
		procedure ApplyTheme(const Filename:WideString);safecall;
		function Get_Excel8CompatibilityMode:WordBool;safecall;
		function Get_ConnectionsDisabled:WordBool;safecall;
		procedure EnableConnections;safecall;
		function Get_ShowPivotChartActiveFields:WordBool;safecall;
		procedure Set_ShowPivotChartActiveFields(RHS:WordBool);safecall;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);safecall;
		function Get_IconSets:IconSets;safecall;
		function Get_EncryptionProvider:WideString;safecall;
		procedure Set_EncryptionProvider(const RHS:WideString);safecall;
		function Get_DoNotPromptForConvert:WordBool;safecall;
		procedure Set_DoNotPromptForConvert(RHS:WordBool);safecall;
		function Get_ForceFullCalculation:WordBool;safecall;
		procedure Set_ForceFullCalculation(RHS:WordBool);safecall;
		procedure ProtectSharing(Filename:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;SharingPassword:OleVariant;FileFormat:OleVariant);safecall;
		function Get_SlicerCaches:SlicerCaches;safecall;
		function Get_ActiveSlicer:Slicer;safecall;
		function Get_DefaultSlicerStyle:OleVariant;safecall;
		procedure Set_DefaultSlicerStyle(RHS:OleVariant);safecall;
		procedure Dummy26;safecall;
		procedure Dummy27;safecall;
		function Get_AccuracyVersion:Integer;safecall;
		procedure Set_AccuracyVersion(RHS:Integer);safecall;
		function Get_CaseSensitive:WordBool;safecall;
		function Get_UseWholeCellCriteria:WordBool;safecall;
		function Get_UseWildcards:WordBool;safecall;
		function Get_PivotTables:IDispatch;safecall;
		function Get_Model:Model;safecall;
		function Get_ChartDataPointTrack:WordBool;safecall;
		procedure Set_ChartDataPointTrack(RHS:WordBool);safecall;
		function Get_DefaultTimelineStyle:OleVariant;safecall;
		procedure Set_DefaultTimelineStyle(RHS:OleVariant);safecall;
		function Get_Queries:Queries;safecall;
		procedure CreateForecastSheet(const Timeline:ExcelRange;const Values:ExcelRange;ForecastStart:OleVariant;
			ForecastEnd:OleVariant;ConfInt:OleVariant;Seasonality:OleVariant;DataCompletion:OleVariant;Aggregation:OleVariant;
			ChartType:OleVariant;ShowStatsTable:OleVariant);safecall;
		function Get_WorkIdentity:WideString;safecall;
		procedure Set_WorkIdentity(const RHS:WideString);safecall;
		procedure SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			Local:OleVariant;WorkIdentity:OleVariant;lcid:Integer);safecall;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);safecall;
		function PublishToDocs(const Title:WideString;DisclosureScope:XlPublishToDocsDisclosureScope;
			OverwriteUrl:OleVariant):WideString;safecall;
		function LookUpInDocs(Filename:OleVariant):PublishedDocs;safecall;
		function PublishToPBI(PublishType:OleVariant;nameConflict:OleVariant;bstrGroupName:OleVariant):WideString;safecall;
		function Get_AutoSaveOn:WordBool;safecall;
		procedure Set_AutoSaveOn(RHS:WordBool);safecall;
		procedure ConvertComments;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property AcceptLabelsInFormulas:WordBool read Get_AcceptLabelsInFormulas write Set_AcceptLabelsInFormulas;
		property ActiveChart:ExcelChart read Get_ActiveChart;
		property ActiveSheet:IDispatch read Get_ActiveSheet;
		property Author[lcid:Integer]:WideString read Get_Author write Set_Author;
		property AutoUpdateFrequency:Integer read Get_AutoUpdateFrequency write Set_AutoUpdateFrequency;
		property AutoUpdateSaveChanges:WordBool read Get_AutoUpdateSaveChanges write Set_AutoUpdateSaveChanges;
		property ChangeHistoryDuration:Integer read Get_ChangeHistoryDuration write Set_ChangeHistoryDuration;
		property BuiltinDocumentProperties:IDispatch read Get_BuiltinDocumentProperties;
		property Charts:Sheets read Get_Charts;
		property CodeName:WideString read Get_CodeName;
		property _CodeName:WideString read Get__CodeName write Set__CodeName;
		property Colors[Index:OleVariant;lcid:Integer]:OleVariant read Get_Colors write Set_Colors;
		property CommandBars:CommandBars read Get_CommandBars;
		property Comments[lcid:Integer]:WideString read Get_Comments write Set_Comments;
		property ConflictResolution:XlSaveConflictResolution read Get_ConflictResolution write Set_ConflictResolution;
		property Container:IDispatch read Get_Container;
		property CreateBackup[lcid:Integer]:WordBool read Get_CreateBackup;
		property CustomDocumentProperties:IDispatch read Get_CustomDocumentProperties;
		property Date1904[lcid:Integer]:WordBool read Get_Date1904 write Set_Date1904;
		property DialogSheets:Sheets read Get_DialogSheets;
		property DisplayDrawingObjects[lcid:Integer]:XlDisplayDrawingObjects read Get_DisplayDrawingObjects
			write Set_DisplayDrawingObjects;
		property FileFormat[lcid:Integer]:XlFileFormat read Get_FileFormat;
		property FullName[lcid:Integer]:WideString read Get_FullName;
		property HasMailer[lcid:Integer]:WordBool read Get_HasMailer write Set_HasMailer;
		property HasPassword[lcid:Integer]:WordBool read Get_HasPassword;
		property HasRoutingSlip[lcid:Integer]:WordBool read Get_HasRoutingSlip write Set_HasRoutingSlip;
		property IsAddin:WordBool read Get_IsAddin write Set_IsAddin;
		property Keywords[lcid:Integer]:WideString read Get_Keywords write Set_Keywords;
		property Mailer:Mailer read Get_Mailer;
		property Modules:Sheets read Get_Modules;
		property MultiUserEditing[lcid:Integer]:WordBool read Get_MultiUserEditing;
		property Name:WideString read Get_Name;
		property Names:Names read Get_Names;
		property OnSave[lcid:Integer]:WideString read Get_OnSave write Set_OnSave;
		property OnSheetActivate[lcid:Integer]:WideString read Get_OnSheetActivate write Set_OnSheetActivate;
		property OnSheetDeactivate[lcid:Integer]:WideString read Get_OnSheetDeactivate write Set_OnSheetDeactivate;
		property Path[lcid:Integer]:WideString read Get_Path;
		property PersonalViewListSettings:WordBool read Get_PersonalViewListSettings write Set_PersonalViewListSettings;
		property PersonalViewPrintSettings:WordBool read Get_PersonalViewPrintSettings write Set_PersonalViewPrintSettings;
		property PrecisionAsDisplayed[lcid:Integer]:WordBool read Get_PrecisionAsDisplayed write Set_PrecisionAsDisplayed;
		property ProtectStructure:WordBool read Get_ProtectStructure;
		property ProtectWindows:WordBool read Get_ProtectWindows;
		property readonly[lcid:Integer]:WordBool read Get_ReadOnly;
		property _ReadOnlyRecommended[lcid:Integer]:WordBool read Get__ReadOnlyRecommended;
		property RevisionNumber[lcid:Integer]:Integer read Get_RevisionNumber;
		property Routed[lcid:Integer]:WordBool read Get_Routed;
		property RoutingSlip:RoutingSlip read Get_RoutingSlip;
		property Saved[lcid:Integer]:WordBool read Get_Saved write Set_Saved;
		property SaveLinkValues[lcid:Integer]:WordBool read Get_SaveLinkValues write Set_SaveLinkValues;
		property Sheets:Sheets read Get_Sheets;
		property ShowConflictHistory[lcid:Integer]:WordBool read Get_ShowConflictHistory write Set_ShowConflictHistory;
		property Styles:Styles read Get_Styles;
		property Subject[lcid:Integer]:WideString read Get_Subject write Set_Subject;
		property Title[lcid:Integer]:WideString read Get_Title write Set_Title;
		property UpdateRemoteReferences[lcid:Integer]:WordBool read Get_UpdateRemoteReferences
			write Set_UpdateRemoteReferences;
		property UserControl:WordBool read Get_UserControl write Set_UserControl;
		property UserStatus[lcid:Integer]:OleVariant read Get_UserStatus;
		property CustomViews:CustomViews read Get_CustomViews;
		property Windows:Windows read Get_Windows;
		property Worksheets:Sheets read Get_Worksheets;
		property WriteReserved[lcid:Integer]:WordBool read Get_WriteReserved;
		property WriteReservedBy[lcid:Integer]:WideString read Get_WriteReservedBy;
		property Excel4IntlMacroSheets:Sheets read Get_Excel4IntlMacroSheets;
		property Excel4MacroSheets:Sheets read Get_Excel4MacroSheets;
		property TemplateRemoveExtData:WordBool read Get_TemplateRemoveExtData write Set_TemplateRemoveExtData;
		property HighlightChangesOnScreen:WordBool read Get_HighlightChangesOnScreen write Set_HighlightChangesOnScreen;
		property KeepChangeHistory:WordBool read Get_KeepChangeHistory write Set_KeepChangeHistory;
		property ListChangesOnNewSheet:WordBool read Get_ListChangesOnNewSheet write Set_ListChangesOnNewSheet;
		property VBProject:VBProject read Get_VBProject;
		property IsInplace:WordBool read Get_IsInplace;
		property PublishObjects:PublishObjects read Get_PublishObjects;
		property WebOptions:WebOptions read Get_WebOptions;
		property HTMLProject:HTMLProject read Get_HTMLProject;
		property EnvelopeVisible:WordBool read Get_EnvelopeVisible write Set_EnvelopeVisible;
		property CalculationVersion:Integer read Get_CalculationVersion;
		property VBASigned:WordBool read Get_VBASigned;
		property ShowPivotTableFieldList:WordBool read Get_ShowPivotTableFieldList write Set_ShowPivotTableFieldList;
		property UpdateLinks:XlUpdateLinks read Get_UpdateLinks write Set_UpdateLinks;
		property EnableAutoRecover:WordBool read Get_EnableAutoRecover write Set_EnableAutoRecover;
		property RemovePersonalInformation:WordBool read Get_RemovePersonalInformation write Set_RemovePersonalInformation;
		property FullNameURLEncoded[lcid:Integer]:WideString read Get_FullNameURLEncoded;
		property Password:WideString read Get_Password write Set_Password;
		property WritePassword:WideString read Get_WritePassword write Set_WritePassword;
		property PasswordEncryptionProvider:WideString read Get_PasswordEncryptionProvider;
		property PasswordEncryptionAlgorithm:WideString read Get_PasswordEncryptionAlgorithm;
		property PasswordEncryptionKeyLength:Integer read Get_PasswordEncryptionKeyLength;
		property PasswordEncryptionFileProperties:WordBool read Get_PasswordEncryptionFileProperties;
		property ReadOnlyRecommended:WordBool read Get_ReadOnlyRecommended write Set_ReadOnlyRecommended;
		property SmartTagOptions:SmartTagOptions read Get_SmartTagOptions;
		property Permission:Permission read Get_Permission;
		property SharedWorkspace:SharedWorkspace read Get_SharedWorkspace;
		property Sync:Sync read Get_Sync;
		property XmlNamespaces:XmlNamespaces read Get_XmlNamespaces;
		property XmlMaps:XmlMaps read Get_XmlMaps;
		property SmartDocument:SmartDocument read Get_SmartDocument;
		property DocumentLibraryVersions:DocumentLibraryVersions read Get_DocumentLibraryVersions;
		property InactiveListBorderVisible:WordBool read Get_InactiveListBorderVisible write Set_InactiveListBorderVisible;
		property DisplayInkComments:WordBool read Get_DisplayInkComments write Set_DisplayInkComments;
		property ContentTypeProperties:MetaProperties read Get_ContentTypeProperties;
		property Connections:Connections read Get_Connections;
		property Signatures:SignatureSet read Get_Signatures;
		property ServerPolicy:ServerPolicy read Get_ServerPolicy;
		property DocumentInspectors:DocumentInspectors read Get_DocumentInspectors;
		property ServerViewableItems:ServerViewableItems read Get_ServerViewableItems;
		property TableStyles:TableStyles read Get_TableStyles;
		property DefaultTableStyle:OleVariant read Get_DefaultTableStyle write Set_DefaultTableStyle;
		property DefaultPivotTableStyle:OleVariant read Get_DefaultPivotTableStyle write Set_DefaultPivotTableStyle;
		property CheckCompatibility:WordBool read Get_CheckCompatibility write Set_CheckCompatibility;
		property HasVBProject:WordBool read Get_HasVBProject;
		property CustomXMLParts:CustomXMLParts read Get_CustomXMLParts;
		property Final:WordBool read Get_Final write Set_Final;
		property Research:Research read Get_Research;
		property Theme:OfficeTheme read Get_Theme;
		property Excel8CompatibilityMode:WordBool read Get_Excel8CompatibilityMode;
		property ConnectionsDisabled:WordBool read Get_ConnectionsDisabled;
		property ShowPivotChartActiveFields:WordBool read Get_ShowPivotChartActiveFields
			write Set_ShowPivotChartActiveFields;
		property IconSets:IconSets read Get_IconSets;
		property EncryptionProvider:WideString read Get_EncryptionProvider write Set_EncryptionProvider;
		property DoNotPromptForConvert:WordBool read Get_DoNotPromptForConvert write Set_DoNotPromptForConvert;
		property ForceFullCalculation:WordBool read Get_ForceFullCalculation write Set_ForceFullCalculation;
		property SlicerCaches:SlicerCaches read Get_SlicerCaches;
		property ActiveSlicer:Slicer read Get_ActiveSlicer;
		property DefaultSlicerStyle:OleVariant read Get_DefaultSlicerStyle write Set_DefaultSlicerStyle;
		property AccuracyVersion:Integer read Get_AccuracyVersion write Set_AccuracyVersion;
		property CaseSensitive:WordBool read Get_CaseSensitive;
		property UseWholeCellCriteria:WordBool read Get_UseWholeCellCriteria;
		property UseWildcards:WordBool read Get_UseWildcards;
		property PivotTables:IDispatch read Get_PivotTables;
		property Model:Model read Get_Model;
		property ChartDataPointTrack:WordBool read Get_ChartDataPointTrack write Set_ChartDataPointTrack;
		property DefaultTimelineStyle:OleVariant read Get_DefaultTimelineStyle write Set_DefaultTimelineStyle;
		property Queries:Queries read Get_Queries;
		property WorkIdentity:WideString read Get_WorkIdentity write Set_WorkIdentity;
		property AutoSaveOn:WordBool read Get_AutoSaveOn write Set_AutoSaveOn;
	end;

	// *********************************************************************//
	// DispIntf:  _WorkbookDisp
	// Flags:     (4416) Dual OleAutomation Dispatchable
	// GUID:      {000208DA-0000-0000-C000-000000000046}
	// *********************************************************************//
	_WorkbookDisp=dispinterface
		['{000208DA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AcceptLabelsInFormulas:WordBool dispid 1441;
		procedure Activate(lcid:Integer);dispid 304;
		property ActiveChart:ExcelChart readonly dispid 183;
		property ActiveSheet:IDispatch readonly dispid 307;
		property Author[lcid:Integer]:WideString dispid 574;
		property AutoUpdateFrequency:Integer dispid 1442;
		property AutoUpdateSaveChanges:WordBool dispid 1443;
		property ChangeHistoryDuration:Integer dispid 1444;
		property BuiltinDocumentProperties:IDispatch readonly dispid 1176;
		procedure ChangeFileAccess(Mode:XlFileAccess;WritePassword:OleVariant;Notify:OleVariant;lcid:Integer);dispid 989;
		procedure ChangeLink(const Name:WideString;const NewName:WideString;Type_:XlLinkType;lcid:Integer);dispid 802;
		property Charts:Sheets readonly dispid 121;
		procedure Close(SaveChanges:OleVariant;Filename:OleVariant;RouteWorkbook:OleVariant;lcid:Integer);dispid 277;
		property CodeName:WideString readonly dispid 1373;
		property _CodeName:WideString dispid-2147418112;
		property Colors[Index:OleVariant;lcid:Integer]:OleVariant dispid 286;
		property CommandBars:CommandBars readonly dispid 1439;
		property Comments[lcid:Integer]:WideString dispid 575;
		property ConflictResolution:XlSaveConflictResolution dispid 1175;
		property Container:IDispatch readonly dispid 1190;
		property CreateBackup[lcid:Integer]:WordBool readonly dispid 287;
		property CustomDocumentProperties:IDispatch readonly dispid 1177;
		property Date1904[lcid:Integer]:WordBool dispid 403;
		procedure DeleteNumberFormat(const NumberFormat:WideString;lcid:Integer);dispid 397;
		property DialogSheets:Sheets readonly dispid 764;
		property DisplayDrawingObjects[lcid:Integer]:XlDisplayDrawingObjects dispid 404;
		function ExclusiveAccess(lcid:Integer):WordBool;dispid 1168;
		property FileFormat[lcid:Integer]:XlFileFormat readonly dispid 288;
		procedure ForwardMailer(lcid:Integer);dispid 973;
		property FullName[lcid:Integer]:WideString readonly dispid 289;
		property HasMailer[lcid:Integer]:WordBool dispid 976;
		property HasPassword[lcid:Integer]:WordBool readonly dispid 290;
		property HasRoutingSlip[lcid:Integer]:WordBool dispid 950;
		property IsAddin:WordBool dispid 1445;
		property Keywords[lcid:Integer]:WideString dispid 577;
		function LinkInfo(const Name:WideString;LinkInfo:XlLinkInfo;Type_:OleVariant;EditionRef:OleVariant;lcid:Integer)
			:OleVariant;dispid 807;
		function LinkSources(Type_:OleVariant;lcid:Integer):OleVariant;dispid 808;
		property Mailer:Mailer readonly dispid 979;
		procedure MergeWorkbook(Filename:OleVariant);dispid 1446;
		property Modules:Sheets readonly dispid 582;
		property MultiUserEditing[lcid:Integer]:WordBool readonly dispid 1169;
		property Name:WideString readonly dispid 110;
		property Names:Names readonly dispid 442;
		function NewWindow(lcid:Integer):Window;dispid 280;
		property OnSave[lcid:Integer]:WideString dispid 1178;
		property OnSheetActivate[lcid:Integer]:WideString dispid 1031;
		property OnSheetDeactivate[lcid:Integer]:WideString dispid 1081;
		procedure OpenLinks(const Name:WideString;ReadOnly:OleVariant;Type_:OleVariant;lcid:Integer);dispid 803;
		property Path[lcid:Integer]:WideString readonly dispid 291;
		property PersonalViewListSettings:WordBool dispid 1447;
		property PersonalViewPrintSettings:WordBool dispid 1448;
		function PivotCaches:PivotCaches;dispid 1449;
		procedure Post(DestName:OleVariant;lcid:Integer);dispid 1166;
		property PrecisionAsDisplayed[lcid:Integer]:WordBool dispid 405;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant;lcid:Integer);dispid 281;
		procedure _Protect(Password:OleVariant;Structure:OleVariant;Windows:OleVariant);dispid 282;
		procedure _ProtectSharing(Filename:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;SharingPassword:OleVariant);dispid 1450;
		property ProtectStructure:WordBool readonly dispid 588;
		property ProtectWindows:WordBool readonly dispid 295;
		property readonly[lcid:Integer]:WordBool readonly dispid 296;
		property _ReadOnlyRecommended[lcid:Integer]:WordBool readonly dispid 297;
		procedure RefreshAll;dispid 1452;
		procedure Reply(lcid:Integer);dispid 977;
		procedure ReplyAll(lcid:Integer);dispid 978;
		procedure RemoveUser(Index:Integer);dispid 1453;
		property RevisionNumber[lcid:Integer]:Integer readonly dispid 1172;
		procedure Route(lcid:Integer);dispid 946;
		property Routed[lcid:Integer]:WordBool readonly dispid 951;
		property RoutingSlip:RoutingSlip readonly dispid 949;
		procedure RunAutoMacros(Which:XlRunAutoMacro;lcid:Integer);dispid 634;
		procedure Save(lcid:Integer);dispid 283;
		procedure __SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			lcid:Integer);dispid 284;
		procedure SaveCopyAs(Filename:OleVariant;lcid:Integer);dispid 175;
		property Saved[lcid:Integer]:WordBool dispid 298;
		property SaveLinkValues[lcid:Integer]:WordBool dispid 406;
		procedure SendMail(Recipients:OleVariant;Subject:OleVariant;ReturnReceipt:OleVariant;lcid:Integer);dispid 947;
		procedure SendMailer(FileFormat:OleVariant;Priority:XlPriority;lcid:Integer);dispid 980;
		procedure SetLinkOnData(const Name:WideString;Procedure_:OleVariant;lcid:Integer);dispid 809;
		property Sheets:Sheets readonly dispid 485;
		property ShowConflictHistory[lcid:Integer]:WordBool dispid 1171;
		property Styles:Styles readonly dispid 493;
		property Subject[lcid:Integer]:WideString dispid 953;
		property Title[lcid:Integer]:WideString dispid 199;
		procedure Unprotect(Password:OleVariant;lcid:Integer);dispid 285;
		procedure UnprotectSharing(SharingPassword:OleVariant);dispid 1455;
		procedure UpdateFromFile(lcid:Integer);dispid 995;
		procedure UpdateLink(Name:OleVariant;Type_:OleVariant;lcid:Integer);dispid 804;
		property UpdateRemoteReferences[lcid:Integer]:WordBool dispid 411;
		property UserControl:WordBool dispid 1210;
		property UserStatus[lcid:Integer]:OleVariant readonly dispid 1173;
		property CustomViews:CustomViews readonly dispid 1456;
		property Windows:Windows readonly dispid 430;
		property Worksheets:Sheets readonly dispid 494;
		property WriteReserved[lcid:Integer]:WordBool readonly dispid 299;
		property WriteReservedBy[lcid:Integer]:WideString readonly dispid 300;
		property Excel4IntlMacroSheets:Sheets readonly dispid 581;
		property Excel4MacroSheets:Sheets readonly dispid 579;
		property TemplateRemoveExtData:WordBool dispid 1457;
		procedure HighlightChangesOptions(When:OleVariant;Who:OleVariant;Where:OleVariant);dispid 1458;
		property HighlightChangesOnScreen:WordBool dispid 1461;
		property KeepChangeHistory:WordBool dispid 1462;
		property ListChangesOnNewSheet:WordBool dispid 1463;
		procedure PurgeChangeHistoryNow(Days:Integer;SharingPassword:OleVariant);dispid 1464;
		procedure AcceptAllChanges(When:OleVariant;Who:OleVariant;Where:OleVariant);dispid 1466;
		procedure RejectAllChanges(When:OleVariant;Who:OleVariant;Where:OleVariant);dispid 1467;
		procedure PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant;lcid:Integer);
			dispid 684;
		procedure ResetColors;dispid 1468;
		property VBProject:VBProject readonly dispid 1469;
		procedure FollowHyperlink(const Address:WideString;SubAddress:OleVariant;NewWindow:OleVariant;AddHistory:OleVariant;
			ExtraInfo:OleVariant;Method:OleVariant;HeaderInfo:OleVariant);dispid 1470;
		procedure AddToFavorites;dispid 1476;
		property IsInplace:WordBool readonly dispid 1769;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer);dispid 1772;
		procedure WebPagePreview;dispid 1818;
		property PublishObjects:PublishObjects readonly dispid 1819;
		property WebOptions:WebOptions readonly dispid 1820;
		procedure ReloadAs(Encoding:MsoEncoding);dispid 1821;
		property HTMLProject:HTMLProject readonly dispid 1823;
		property EnvelopeVisible:WordBool dispid 1824;
		property CalculationVersion:Integer readonly dispid 1806;
		procedure Dummy17(calcid:Integer);dispid 2044;
		procedure sblt(const s:WideString);dispid 1826;
		property VBASigned:WordBool readonly dispid 1828;
		property ShowPivotTableFieldList:WordBool dispid 2046;
		property UpdateLinks:XlUpdateLinks dispid 864;
		procedure BreakLink(const Name:WideString;Type_:XlLinkType);dispid 2047;
		procedure Dummy16;dispid 2048;
		procedure _SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			Local:OleVariant;lcid:Integer);dispid 1925;
		property EnableAutoRecover:WordBool dispid 2049;
		property RemovePersonalInformation:WordBool dispid 2050;
		property FullNameURLEncoded[lcid:Integer]:WideString readonly dispid 1927;
		procedure CheckIn(SaveChanges:OleVariant;Comments:OleVariant;MakePublic:OleVariant);dispid 2051;
		function CanCheckIn:WordBool;dispid 2053;
		procedure SendForReview(Recipients:OleVariant;Subject:OleVariant;ShowMessage:OleVariant;
			IncludeAttachment:OleVariant);dispid 2054;
		procedure ReplyWithChanges(ShowMessage:OleVariant);dispid 2057;
		procedure EndReview;dispid 2058;
		property Password:WideString dispid 429;
		property WritePassword:WideString dispid 1128;
		property PasswordEncryptionProvider:WideString readonly dispid 2059;
		property PasswordEncryptionAlgorithm:WideString readonly dispid 2060;
		property PasswordEncryptionKeyLength:Integer readonly dispid 2061;
		procedure SetPasswordEncryptionOptions(PasswordEncryptionProvider:OleVariant;PasswordEncryptionAlgorithm:OleVariant;
			PasswordEncryptionKeyLength:OleVariant;PasswordEncryptionFileProperties:OleVariant);dispid 2062;
		property PasswordEncryptionFileProperties:WordBool readonly dispid 2063;
		property ReadOnlyRecommended:WordBool dispid 2005;
		procedure Protect(Password:OleVariant;Structure:OleVariant;Windows:OleVariant);dispid 2029;
		property SmartTagOptions:SmartTagOptions readonly dispid 2064;
		procedure RecheckSmartTags;dispid 2065;
		property Permission:Permission readonly dispid 2264;
		property SharedWorkspace:SharedWorkspace readonly dispid 2265;
		property Sync:Sync readonly dispid 2266;
		procedure SendFaxOverInternet(Recipients:OleVariant;Subject:OleVariant;ShowMessage:OleVariant);dispid 2267;
		property XmlNamespaces:XmlNamespaces readonly dispid 2268;
		property XmlMaps:XmlMaps readonly dispid 2269;
		function XmlImport(const Url:WideString;out ImportMap:XmlMap;Overwrite:OleVariant;Destination:OleVariant)
			:XlXmlImportResult;dispid 2270;
		property SmartDocument:SmartDocument readonly dispid 2273;
		property DocumentLibraryVersions:DocumentLibraryVersions readonly dispid 2274;
		property InactiveListBorderVisible:WordBool dispid 2275;
		property DisplayInkComments:WordBool dispid 2276;
		function XmlImportXml(const Data:WideString;out ImportMap:XmlMap;Overwrite:OleVariant;Destination:OleVariant)
			:XlXmlImportResult;dispid 2277;
		procedure SaveAsXMLData(const Filename:WideString;const Map:XmlMap);dispid 2278;
		procedure ToggleFormsDesign;dispid 2279;
		property ContentTypeProperties:MetaProperties readonly dispid 2512;
		property Connections:Connections readonly dispid 2513;
		procedure RemoveDocumentInformation(RemoveDocInfoType:XlRemoveDocInfoType);dispid 2514;
		property Signatures:SignatureSet readonly dispid 2516;
		procedure CheckInWithVersion(SaveChanges:OleVariant;Comments:OleVariant;MakePublic:OleVariant;
			VersionType:OleVariant);dispid 2517;
		property ServerPolicy:ServerPolicy readonly dispid 2519;
		procedure LockServerFile;dispid 2520;
		property DocumentInspectors:DocumentInspectors readonly dispid 2521;
		function GetWorkflowTasks:WorkflowTasks;dispid 2522;
		function GetWorkflowTemplates:WorkflowTemplates;dispid 2523;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;lcid:Integer);
			dispid 2361;
		property ServerViewableItems:ServerViewableItems readonly dispid 2524;
		property TableStyles:TableStyles readonly dispid 2525;
		property DefaultTableStyle:OleVariant dispid 2526;
		property DefaultPivotTableStyle:OleVariant dispid 2527;
		property CheckCompatibility:WordBool dispid 2528;
		property HasVBProject:WordBool readonly dispid 2529;
		property CustomXMLParts:CustomXMLParts readonly dispid 2530;
		property Final:WordBool dispid 2531;
		property Research:Research readonly dispid 2532;
		property Theme:OfficeTheme readonly dispid 2533;
		procedure ApplyTheme(const Filename:WideString);dispid 2534;
		property Excel8CompatibilityMode:WordBool readonly dispid 2535;
		property ConnectionsDisabled:WordBool readonly dispid 2536;
		procedure EnableConnections;dispid 2537;
		property ShowPivotChartActiveFields:WordBool dispid 2538;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);dispid 2493;
		property IconSets:IconSets readonly dispid 2539;
		property EncryptionProvider:WideString dispid 2540;
		property DoNotPromptForConvert:WordBool dispid 2541;
		property ForceFullCalculation:WordBool dispid 2542;
		procedure ProtectSharing(Filename:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;SharingPassword:OleVariant;FileFormat:OleVariant);
			dispid 2543;
		property SlicerCaches:SlicerCaches readonly dispid 2866;
		property ActiveSlicer:Slicer readonly dispid 2867;
		property DefaultSlicerStyle:OleVariant dispid 2868;
		procedure Dummy26;dispid 2869;
		procedure Dummy27;dispid 2870;
		property AccuracyVersion:Integer dispid 2871;
		property CaseSensitive:WordBool readonly dispid 3056;
		property UseWholeCellCriteria:WordBool readonly dispid 3057;
		property UseWildcards:WordBool readonly dispid 3058;
		property PivotTables:IDispatch readonly dispid 690;
		property Model:Model readonly dispid 3059;
		property ChartDataPointTrack:WordBool dispid 2998;
		property DefaultTimelineStyle:OleVariant dispid 3060;
		property Queries:Queries readonly dispid 3186;
		procedure CreateForecastSheet(const Timeline:ExcelRange;const Values:ExcelRange;ForecastStart:OleVariant;
			ForecastEnd:OleVariant;ConfInt:OleVariant;Seasonality:OleVariant;DataCompletion:OleVariant;Aggregation:OleVariant;
			ChartType:OleVariant;ShowStatsTable:OleVariant);dispid 3167;
		property WorkIdentity:WideString dispid 3173;
		procedure SaveAs(Filename:OleVariant;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AccessMode:XlSaveAsAccessMode;
			ConflictResolution:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;TextVisualLayout:OleVariant;
			Local:OleVariant;WorkIdentity:OleVariant;lcid:Integer);dispid 3174;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);dispid 3175;
		function PublishToDocs(const Title:WideString;DisclosureScope:XlPublishToDocsDisclosureScope;
			OverwriteUrl:OleVariant):WideString;dispid 3334;
		function LookUpInDocs(Filename:OleVariant):PublishedDocs;dispid 3335;
		function PublishToPBI(PublishType:OleVariant;nameConflict:OleVariant;bstrGroupName:OleVariant):WideString;
			dispid 3257;
		property AutoSaveOn:WordBool dispid 3232;
		procedure ConvertComments;dispid 3279;
	end;

	// *********************************************************************//
	// Interface: Workbooks
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208DB-0000-0000-C000-000000000046}
	// *********************************************************************//
	Workbooks=interface(IDispatch)
		['{000208DB-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Add(Template:OleVariant;lcid:Integer):ExcelWorkbook;safecall;
		procedure Close(lcid:Integer);safecall;
		function Get_Count:Integer;safecall;
		function Get_Item(Index:OleVariant):ExcelWorkbook;safecall;
		function Get__NewEnum:IUnknown;safecall;
		function _Open(const Filename:WideString;UpdateLinks:OleVariant;ReadOnly:OleVariant;Format:OleVariant;
			Password:OleVariant;WriteResPassword:OleVariant;IgnoreReadOnlyRecommended:OleVariant;Origin:OleVariant;
			Delimiter:OleVariant;Editable:OleVariant;Notify:OleVariant;Converter:OleVariant;AddToMru:OleVariant;lcid:Integer)
			:ExcelWorkbook;safecall;
		procedure __OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);safecall;
		function Get__Default(Index:OleVariant):ExcelWorkbook;safecall;
		procedure _OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;DecimalSeparator:OleVariant;ThousandsSeparator:OleVariant;lcid:Integer);safecall;
		function Open(const Filename:WideString;UpdateLinks:OleVariant;ReadOnly:OleVariant;Format:OleVariant;
			Password:OleVariant;WriteResPassword:OleVariant;IgnoreReadOnlyRecommended:OleVariant;Origin:OleVariant;
			Delimiter:OleVariant;Editable:OleVariant;Notify:OleVariant;Converter:OleVariant;AddToMru:OleVariant;
			Local:OleVariant;CorruptLoad:OleVariant;lcid:Integer):ExcelWorkbook;safecall;
		procedure OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;DecimalSeparator:OleVariant;ThousandsSeparator:OleVariant;
			TrailingMinusNumbers:OleVariant;Local:OleVariant;lcid:Integer);safecall;
		function OpenDatabase(const Filename:WideString;CommandText:OleVariant;CommandType:OleVariant;
			BackgroundQuery:OleVariant;ImportDataAs:OleVariant):ExcelWorkbook;safecall;
		procedure CheckOut(const Filename:WideString);safecall;
		function CanCheckOut(const Filename:WideString):WordBool;safecall;
		function _OpenXML(const Filename:WideString;Stylesheets:OleVariant):ExcelWorkbook;safecall;
		function OpenXML(const Filename:WideString;Stylesheets:OleVariant;LoadOption:OleVariant):ExcelWorkbook;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property Count:Integer read Get_Count;
		property Item[Index:OleVariant]:ExcelWorkbook read Get_Item;
		property _NewEnum:IUnknown read Get__NewEnum;
		property _Default[Index:OleVariant]:ExcelWorkbook read Get__Default;default;
	end;

	// *********************************************************************//
	// DispIntf:  WorkbooksDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {000208DB-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorkbooksDisp=dispinterface
		['{000208DB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Template:OleVariant;lcid:Integer):ExcelWorkbook;dispid 181;
		procedure Close(lcid:Integer);dispid 277;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:ExcelWorkbook readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		function _Open(const Filename:WideString;UpdateLinks:OleVariant;ReadOnly:OleVariant;Format:OleVariant;
			Password:OleVariant;WriteResPassword:OleVariant;IgnoreReadOnlyRecommended:OleVariant;Origin:OleVariant;
			Delimiter:OleVariant;Editable:OleVariant;Notify:OleVariant;Converter:OleVariant;AddToMru:OleVariant;lcid:Integer)
			:ExcelWorkbook;dispid 682;
		procedure __OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer);dispid 683;
		property _Default[Index:OleVariant]:ExcelWorkbook readonly dispid 0;default;
		procedure _OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;DecimalSeparator:OleVariant;ThousandsSeparator:OleVariant;lcid:Integer);dispid 1773;
		function Open(const Filename:WideString;UpdateLinks:OleVariant;ReadOnly:OleVariant;Format:OleVariant;
			Password:OleVariant;WriteResPassword:OleVariant;IgnoreReadOnlyRecommended:OleVariant;Origin:OleVariant;
			Delimiter:OleVariant;Editable:OleVariant;Notify:OleVariant;Converter:OleVariant;AddToMru:OleVariant;
			Local:OleVariant;CorruptLoad:OleVariant;lcid:Integer):ExcelWorkbook;dispid 1923;
		procedure OpenText(const Filename:WideString;Origin:OleVariant;StartRow:OleVariant;DataType:OleVariant;
			TextQualifier:XlTextQualifier;ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;
			Comma:OleVariant;Space:OleVariant;Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;
			TextVisualLayout:OleVariant;DecimalSeparator:OleVariant;ThousandsSeparator:OleVariant;
			TrailingMinusNumbers:OleVariant;Local:OleVariant;lcid:Integer);dispid 1924;
		function OpenDatabase(const Filename:WideString;CommandText:OleVariant;CommandType:OleVariant;
			BackgroundQuery:OleVariant;ImportDataAs:OleVariant):ExcelWorkbook;dispid 2067;
		procedure CheckOut(const Filename:WideString);dispid 2069;
		function CanCheckOut(const Filename:WideString):WordBool;dispid 2070;
		function _OpenXML(const Filename:WideString;Stylesheets:OleVariant):ExcelWorkbook;dispid 2071;
		function OpenXML(const Filename:WideString;Stylesheets:OleVariant;LoadOption:OleVariant):ExcelWorkbook;dispid 2280;
	end;

	// *********************************************************************//
	// Interface: IMenuBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020863-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenuBars=interface(IDispatch)
		['{00020863-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Name:OleVariant;out RHS:MenuBar):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:MenuBar):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:MenuBar):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMenuBar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020864-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenuBar=interface(IDispatch)
		['{00020864-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate:HResult;stdcall;
		function Get_BuiltIn(out RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Menus(out RHS:Menus):HResult;stdcall;
		function Reset:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMenus
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020865-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenus=interface(IDispatch)
		['{00020865-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Caption:WideString;Before:OleVariant;Restore:OleVariant;out RHS:Menu):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Menu):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Menu):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMenu
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020866-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenu=interface(IDispatch)
		['{00020866-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_MenuItems(out RHS:MenuItems):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMenuItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020867-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenuItems=interface(IDispatch)
		['{00020867-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Caption:WideString;OnAction:OleVariant;ShortcutKey:OleVariant;Before:OleVariant;
			Restore:OleVariant;StatusBar:OleVariant;HelpFile:OleVariant;HelpContextID:OleVariant;out RHS:MenuItem)
			:HResult;stdcall;
		function AddMenu(const Caption:WideString;Before:OleVariant;Restore:OleVariant;out RHS:Menu):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMenuItem
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020868-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMenuItem=interface(IDispatch)
		['{00020868-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Checked(out RHS:WordBool):HResult;stdcall;
		function Set_Checked(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_HelpContextID(out RHS:Integer):HResult;stdcall;
		function Set_HelpContextID(RHS:Integer):HResult;stdcall;
		function Get_HelpFile(out RHS:WideString):HResult;stdcall;
		function Set_HelpFile(const RHS:WideString):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_StatusBar(out RHS:WideString):HResult;stdcall;
		function Set_StatusBar(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICharts
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086D-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICharts=interface(IDispatch)
		['{0002086D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;out RHS:ExcelChart):HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		procedure _Dummy7;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;lcid:Integer):HResult;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_HPageBreaks(out RHS:HPageBreaks):HResult;stdcall;
		function Get_VPageBreaks(out RHS:VPageBreaks):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):HResult;stdcall;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant;out RHS:ExcelChart)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDrawingObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDrawingObjects=interface(IDispatch)
		['{0002086F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy28;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function AddItem(Text:OleVariant;Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadLength(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadLength(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadWidth(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_CancelButton(out RHS:WordBool):HResult;stdcall;
		function Set_CancelButton(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_DefaultButton(out RHS:WordBool):HResult;stdcall;
		function Set_DefaultButton(RHS:WordBool):HResult;stdcall;
		function Get_DismissButton(out RHS:WordBool):HResult;stdcall;
		function Set_DismissButton(RHS:WordBool):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_DisplayVerticalScrollBar(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayVerticalScrollBar(RHS:WordBool):HResult;stdcall;
		function Get_DropDownLines(out RHS:Integer):HResult;stdcall;
		function Set_DropDownLines(RHS:Integer):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		procedure _Dummy47;stdcall;
		function Get_HelpButton(out RHS:WordBool):HResult;stdcall;
		function Set_HelpButton(RHS:WordBool):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_InputType(out RHS:Integer):HResult;stdcall;
		function Set_InputType(RHS:Integer):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_LargeChange(out RHS:Integer):HResult;stdcall;
		function Set_LargeChange(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		procedure _Dummy54;stdcall;
		function List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		procedure _Dummy56;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_MultiLine(out RHS:WordBool):HResult;stdcall;
		function Set_MultiLine(RHS:WordBool):HResult;stdcall;
		function Get_MultiSelect(out RHS:WordBool):HResult;stdcall;
		function Set_MultiSelect(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function RemoveAllItems(out RHS:OleVariant):HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Reshape(Vertex:Integer;Insert:OleVariant;Left:OleVariant;Top:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Selected(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Ungroup(out RHS:IDispatch):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Vertices(Index1:OleVariant;Index2:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function LinkCombo(Link:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotCache
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotCache=interface(IDispatch)
		['{0002441C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BackgroundQuery(out RHS:WordBool):HResult;stdcall;
		function Set_BackgroundQuery(RHS:WordBool):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_MemoryUsed(out RHS:Integer):HResult;stdcall;
		function Get_OptimizeCache(out RHS:WordBool):HResult;stdcall;
		function Set_OptimizeCache(RHS:WordBool):HResult;stdcall;
		function Get_RecordCount(out RHS:Integer):HResult;stdcall;
		function Refresh:HResult;stdcall;
		function Get_RefreshDate(out RHS:TDateTime):HResult;stdcall;
		function Get_RefreshName(out RHS:WideString):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_Sql(out RHS:OleVariant):HResult;stdcall;
		function Set_Sql(RHS:OleVariant):HResult;stdcall;
		function Get_SavePassword(out RHS:WordBool):HResult;stdcall;
		function Set_SavePassword(RHS:WordBool):HResult;stdcall;
		function Get_SourceData(out RHS:OleVariant):HResult;stdcall;
		function Set_SourceData(RHS:OleVariant):HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_QueryType(out RHS:XlQueryType):HResult;stdcall;
		function Get_MaintainConnection(out RHS:WordBool):HResult;stdcall;
		function Set_MaintainConnection(RHS:WordBool):HResult;stdcall;
		function Get_RefreshPeriod(out RHS:Integer):HResult;stdcall;
		function Set_RefreshPeriod(RHS:Integer):HResult;stdcall;
		function Get_Recordset(out RHS:IDispatch):HResult;stdcall;
		function _Set_Recordset(const RHS:IDispatch):HResult;stdcall;
		function ResetTimer:HResult;stdcall;
		function Get_LocalConnection(out RHS:OleVariant):HResult;stdcall;
		function Set_LocalConnection(RHS:OleVariant):HResult;stdcall;
		function CreatePivotTable(TableDestination:OleVariant;TableName:OleVariant;ReadData:OleVariant;
			DefaultVersion:OleVariant;out RHS:PivotTable):HResult;stdcall;
		function Get_UseLocalConnection(out RHS:WordBool):HResult;stdcall;
		function Set_UseLocalConnection(RHS:WordBool):HResult;stdcall;
		function Get_ADOConnection(out RHS:IDispatch):HResult;stdcall;
		function Get_IsConnected(out RHS:WordBool):HResult;stdcall;
		function MakeConnection:HResult;stdcall;
		function Get_OLAP(out RHS:WordBool):HResult;stdcall;
		function Get_SourceType(out RHS:XlPivotTableSourceType):HResult;stdcall;
		function Get_MissingItemsLimit(out RHS:XlPivotTableMissingItems):HResult;stdcall;
		function Set_MissingItemsLimit(RHS:XlPivotTableMissingItems):HResult;stdcall;
		function Get_SourceConnectionFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceConnectionFile(const RHS:WideString):HResult;stdcall;
		function Get_SourceDataFile(out RHS:WideString):HResult;stdcall;
		function Get_RobustConnect(out RHS:XlRobustConnect):HResult;stdcall;
		function Set_RobustConnect(RHS:XlRobustConnect):HResult;stdcall;
		function SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant):HResult;stdcall;
		function Get_WorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
		function Get_Version(out RHS:XlPivotTableVersionList):HResult;stdcall;
		function Get_UpgradeOnRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_UpgradeOnRefresh(RHS:WordBool):HResult;stdcall;
		function CreatePivotChart(ChartDestination:OleVariant;XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;
			Width:OleVariant;Height:OleVariant;out RHS:Shape):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotCaches
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotCaches=interface(IDispatch)
		['{0002441D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotCache):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotCache):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(SourceType:XlPivotTableSourceType;SourceData:OleVariant;out RHS:PivotCache):HResult;stdcall;
		function Create(SourceType:XlPivotTableSourceType;SourceData:OleVariant;Version:OleVariant;out RHS:PivotCache)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotFormula
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotFormula=interface(IDispatch)
		['{0002441E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Set_Value(const RHS:WideString):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Set_Index(RHS:Integer):HResult;stdcall;
		function Get_StandardFormula(out RHS:WideString):HResult;stdcall;
		function Set_StandardFormula(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotFormulas
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotFormulas=interface(IDispatch)
		['{0002441F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function _Add(const Formula:WideString;out RHS:PivotFormula):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotFormula):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotFormula):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const Formula:WideString;UseStandardFormula:OleVariant;out RHS:PivotFormula):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotTable
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020872-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotTable=interface(IDispatch)
		['{00020872-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function AddFields(RowFields:OleVariant;ColumnFields:OleVariant;PageFields:OleVariant;AddToTable:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Get_ColumnFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_ColumnGrand(out RHS:WordBool):HResult;stdcall;
		function Set_ColumnGrand(RHS:WordBool):HResult;stdcall;
		function Get_ColumnRange(out RHS:ExcelRange):HResult;stdcall;
		function ShowPages(PageField:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_DataBodyRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_DataFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_DataLabelRange(out RHS:ExcelRange):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Get_HasAutoFormat(out RHS:WordBool):HResult;stdcall;
		function Set_HasAutoFormat(RHS:WordBool):HResult;stdcall;
		function Get_HiddenFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_InnerDetail(out RHS:WideString):HResult;stdcall;
		function Set_InnerDetail(const RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_PageFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_PageRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_PageRangeCells(out RHS:ExcelRange):HResult;stdcall;
		function PivotFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_RefreshDate(out RHS:TDateTime):HResult;stdcall;
		function Get_RefreshName(out RHS:WideString):HResult;stdcall;
		function RefreshTable(out RHS:WordBool):HResult;stdcall;
		function Get_RowFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_RowGrand(out RHS:WordBool):HResult;stdcall;
		function Set_RowGrand(RHS:WordBool):HResult;stdcall;
		function Get_RowRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_SaveData(out RHS:WordBool):HResult;stdcall;
		function Set_SaveData(RHS:WordBool):HResult;stdcall;
		function Get_SourceData(out RHS:OleVariant):HResult;stdcall;
		function Set_SourceData(RHS:OleVariant):HResult;stdcall;
		function Get_TableRange1(out RHS:ExcelRange):HResult;stdcall;
		function Get_TableRange2(out RHS:ExcelRange):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Set_Value(const RHS:WideString):HResult;stdcall;
		function Get_VisibleFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_CacheIndex(out RHS:Integer):HResult;stdcall;
		function Set_CacheIndex(RHS:Integer):HResult;stdcall;
		function CalculatedFields(out RHS:CalculatedFields):HResult;stdcall;
		function Get_DisplayErrorString(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayErrorString(RHS:WordBool):HResult;stdcall;
		function Get_DisplayNullString(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayNullString(RHS:WordBool):HResult;stdcall;
		function Get_EnableDrilldown(out RHS:WordBool):HResult;stdcall;
		function Set_EnableDrilldown(RHS:WordBool):HResult;stdcall;
		function Get_EnableFieldDialog(out RHS:WordBool):HResult;stdcall;
		function Set_EnableFieldDialog(RHS:WordBool):HResult;stdcall;
		function Get_EnableWizard(out RHS:WordBool):HResult;stdcall;
		function Set_EnableWizard(RHS:WordBool):HResult;stdcall;
		function Get_ErrorString(out RHS:WideString):HResult;stdcall;
		function Set_ErrorString(const RHS:WideString):HResult;stdcall;
		function GetData(const Name:WideString;out RHS:Double):HResult;stdcall;
		function ListFormulas:HResult;stdcall;
		function Get_ManualUpdate(out RHS:WordBool):HResult;stdcall;
		function Set_ManualUpdate(RHS:WordBool):HResult;stdcall;
		function Get_MergeLabels(out RHS:WordBool):HResult;stdcall;
		function Set_MergeLabels(RHS:WordBool):HResult;stdcall;
		function Get_NullString(out RHS:WideString):HResult;stdcall;
		function Set_NullString(const RHS:WideString):HResult;stdcall;
		function PivotCache(out RHS:PivotCache):HResult;stdcall;
		function Get_PivotFormulas(out RHS:PivotFormulas):HResult;stdcall;
		function PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant)
			:HResult;stdcall;
		function Get_SubtotalHiddenPageItems(out RHS:WordBool):HResult;stdcall;
		function Set_SubtotalHiddenPageItems(RHS:WordBool):HResult;stdcall;
		function Get_PageFieldOrder(out RHS:Integer):HResult;stdcall;
		function Set_PageFieldOrder(RHS:Integer):HResult;stdcall;
		function Get_PageFieldStyle(out RHS:WideString):HResult;stdcall;
		function Set_PageFieldStyle(const RHS:WideString):HResult;stdcall;
		function Get_PageFieldWrapCount(out RHS:Integer):HResult;stdcall;
		function Set_PageFieldWrapCount(RHS:Integer):HResult;stdcall;
		function Get_PreserveFormatting(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveFormatting(RHS:WordBool):HResult;stdcall;
		function _PivotSelect(const Name:WideString;Mode:XlPTSelectionMode):HResult;stdcall;
		function Get_PivotSelection(out RHS:WideString):HResult;stdcall;
		function Set_PivotSelection(const RHS:WideString):HResult;stdcall;
		function Get_SelectionMode(out RHS:XlPTSelectionMode):HResult;stdcall;
		function Set_SelectionMode(RHS:XlPTSelectionMode):HResult;stdcall;
		function Get_TableStyle(out RHS:WideString):HResult;stdcall;
		function Set_TableStyle(const RHS:WideString):HResult;stdcall;
		function Get_Tag(out RHS:WideString):HResult;stdcall;
		function Set_Tag(const RHS:WideString):HResult;stdcall;
		function Update:HResult;stdcall;
		function Get_VacatedStyle(out RHS:WideString):HResult;stdcall;
		function Set_VacatedStyle(const RHS:WideString):HResult;stdcall;
		function Format(Format:XlPivotFormatType):HResult;stdcall;
		function Get_PrintTitles(out RHS:WordBool):HResult;stdcall;
		function Set_PrintTitles(RHS:WordBool):HResult;stdcall;
		function Get_CubeFields(out RHS:CubeFields):HResult;stdcall;
		function Get_GrandTotalName(out RHS:WideString):HResult;stdcall;
		function Set_GrandTotalName(const RHS:WideString):HResult;stdcall;
		function Get_SmallGrid(out RHS:WordBool):HResult;stdcall;
		function Set_SmallGrid(RHS:WordBool):HResult;stdcall;
		function Get_RepeatItemsOnEachPrintedPage(out RHS:WordBool):HResult;stdcall;
		function Set_RepeatItemsOnEachPrintedPage(RHS:WordBool):HResult;stdcall;
		function Get_TotalsAnnotation(out RHS:WordBool):HResult;stdcall;
		function Set_TotalsAnnotation(RHS:WordBool):HResult;stdcall;
		function PivotSelect(const Name:WideString;Mode:XlPTSelectionMode;UseStandardName:OleVariant):HResult;stdcall;
		function Get_PivotSelectionStandard(out RHS:WideString):HResult;stdcall;
		function Set_PivotSelectionStandard(const RHS:WideString):HResult;stdcall;
		function GetPivotData(DataField:OleVariant;Field1:OleVariant;Item1:OleVariant;Field2:OleVariant;Item2:OleVariant;
			Field3:OleVariant;Item3:OleVariant;Field4:OleVariant;Item4:OleVariant;Field5:OleVariant;Item5:OleVariant;
			Field6:OleVariant;Item6:OleVariant;Field7:OleVariant;Item7:OleVariant;Field8:OleVariant;Item8:OleVariant;
			Field9:OleVariant;Item9:OleVariant;Field10:OleVariant;Item10:OleVariant;Field11:OleVariant;Item11:OleVariant;
			Field12:OleVariant;Item12:OleVariant;Field13:OleVariant;Item13:OleVariant;Field14:OleVariant;Item14:OleVariant;
			out RHS:ExcelRange):HResult;stdcall;
		function Get_DataPivotField(out RHS:PivotField):HResult;stdcall;
		function Get_EnableDataValueEditing(out RHS:WordBool):HResult;stdcall;
		function Set_EnableDataValueEditing(RHS:WordBool):HResult;stdcall;
		function AddDataField(const Field:IDispatch;Caption:OleVariant;Function_:OleVariant;out RHS:PivotField)
			:HResult;stdcall;
		function Get_MDX(out RHS:WideString):HResult;stdcall;
		function Get_ViewCalculatedMembers(out RHS:WordBool):HResult;stdcall;
		function Set_ViewCalculatedMembers(RHS:WordBool):HResult;stdcall;
		function Get_CalculatedMembers(out RHS:CalculatedMembers):HResult;stdcall;
		function Get_DisplayImmediateItems(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayImmediateItems(RHS:WordBool):HResult;stdcall;
		function Dummy15(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Get_EnableFieldList(out RHS:WordBool):HResult;stdcall;
		function Set_EnableFieldList(RHS:WordBool):HResult;stdcall;
		function Get_VisualTotals(out RHS:WordBool):HResult;stdcall;
		function Set_VisualTotals(RHS:WordBool):HResult;stdcall;
		function Get_ShowPageMultipleItemLabel(out RHS:WordBool):HResult;stdcall;
		function Set_ShowPageMultipleItemLabel(RHS:WordBool):HResult;stdcall;
		function Get_Version(out RHS:XlPivotTableVersionList):HResult;stdcall;
		function CreateCubeFile(const File_:WideString;Measures:OleVariant;Levels:OleVariant;Members:OleVariant;
			Properties:OleVariant;out RHS:WideString):HResult;stdcall;
		function Get_DisplayEmptyRow(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayEmptyRow(RHS:WordBool):HResult;stdcall;
		function Get_DisplayEmptyColumn(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayEmptyColumn(RHS:WordBool):HResult;stdcall;
		function Get_ShowCellBackgroundFromOLAP(out RHS:WordBool):HResult;stdcall;
		function Set_ShowCellBackgroundFromOLAP(RHS:WordBool):HResult;stdcall;
		function Get_PivotColumnAxis(out RHS:PivotAxis):HResult;stdcall;
		function Get_PivotRowAxis(out RHS:PivotAxis):HResult;stdcall;
		function Get_ShowDrillIndicators(out RHS:WordBool):HResult;stdcall;
		function Set_ShowDrillIndicators(RHS:WordBool):HResult;stdcall;
		function Get_PrintDrillIndicators(out RHS:WordBool):HResult;stdcall;
		function Set_PrintDrillIndicators(RHS:WordBool):HResult;stdcall;
		function Get_DisplayMemberPropertyTooltips(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayMemberPropertyTooltips(RHS:WordBool):HResult;stdcall;
		function Get_DisplayContextTooltips(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayContextTooltips(RHS:WordBool):HResult;stdcall;
		function ClearTable:HResult;stdcall;
		function Get_CompactRowIndent(out RHS:Integer):HResult;stdcall;
		function Set_CompactRowIndent(RHS:Integer):HResult;stdcall;
		function Get_LayoutRowDefault(out RHS:XlLayoutRowType):HResult;stdcall;
		function Set_LayoutRowDefault(RHS:XlLayoutRowType):HResult;stdcall;
		function Get_DisplayFieldCaptions(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayFieldCaptions(RHS:WordBool):HResult;stdcall;
		function RowAxisLayout(RowLayout:XlLayoutRowType):HResult;stdcall;
		function SubtotalLocation(Location:XlSubtototalLocationType):HResult;stdcall;
		function Get_ActiveFilters(out RHS:PivotFilters):HResult;stdcall;
		function Get_InGridDropZones(out RHS:WordBool):HResult;stdcall;
		function Set_InGridDropZones(RHS:WordBool):HResult;stdcall;
		function ClearAllFilters:HResult;stdcall;
		function Get_TableStyle2(out RHS:OleVariant):HResult;stdcall;
		function Set_TableStyle2(RHS:OleVariant):HResult;stdcall;
		function Get_ShowTableStyleLastColumn(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleLastColumn(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleRowStripes(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleRowStripes(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleColumnStripes(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleColumnStripes(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleRowHeaders(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleRowHeaders(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleColumnHeaders(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleColumnHeaders(RHS:WordBool):HResult;stdcall;
		function ConvertToFormulas(ConvertFilters:WordBool):HResult;stdcall;
		function Get_AllowMultipleFilters(out RHS:WordBool):HResult;stdcall;
		function Set_AllowMultipleFilters(RHS:WordBool):HResult;stdcall;
		function Get_CompactLayoutRowHeader(out RHS:WideString):HResult;stdcall;
		function Set_CompactLayoutRowHeader(const RHS:WideString):HResult;stdcall;
		function Get_CompactLayoutColumnHeader(out RHS:WideString):HResult;stdcall;
		function Set_CompactLayoutColumnHeader(const RHS:WideString):HResult;stdcall;
		function Get_FieldListSortAscending(out RHS:WordBool):HResult;stdcall;
		function Set_FieldListSortAscending(RHS:WordBool):HResult;stdcall;
		function Get_SortUsingCustomLists(out RHS:WordBool):HResult;stdcall;
		function Set_SortUsingCustomLists(RHS:WordBool):HResult;stdcall;
		function ChangeConnection(const conn:WorkbookConnection):HResult;stdcall;
		function ChangePivotCache(PivotCache:OleVariant):HResult;stdcall;
		function Get_Location(out RHS:WideString):HResult;stdcall;
		function Set_Location(const RHS:WideString):HResult;stdcall;
		function Get_EnableWriteback(out RHS:WordBool):HResult;stdcall;
		function Set_EnableWriteback(RHS:WordBool):HResult;stdcall;
		function Get_Allocation(out RHS:XlAllocation):HResult;stdcall;
		function Set_Allocation(RHS:XlAllocation):HResult;stdcall;
		function Get_AllocationValue(out RHS:XlAllocationValue):HResult;stdcall;
		function Set_AllocationValue(RHS:XlAllocationValue):HResult;stdcall;
		function Get_AllocationMethod(out RHS:XlAllocationMethod):HResult;stdcall;
		function Set_AllocationMethod(RHS:XlAllocationMethod):HResult;stdcall;
		function Get_AllocationWeightExpression(out RHS:WideString):HResult;stdcall;
		function Set_AllocationWeightExpression(const RHS:WideString):HResult;stdcall;
		function AllocateChanges:HResult;stdcall;
		function CommitChanges:HResult;stdcall;
		function DiscardChanges:HResult;stdcall;
		function RefreshDataSourceValues:HResult;stdcall;
		function RepeatAllLabels(Repeat_:XlPivotFieldRepeatLabels):HResult;stdcall;
		function Get_ChangeList(out RHS:PivotTableChangeList):HResult;stdcall;
		function Get_Slicers(out RHS:Slicers):HResult;stdcall;
		function Get_AlternativeText(out RHS:WideString):HResult;stdcall;
		function Set_AlternativeText(const RHS:WideString):HResult;stdcall;
		function Get_Summary(out RHS:WideString):HResult;stdcall;
		function Set_Summary(const RHS:WideString):HResult;stdcall;
		function Get_VisualTotalsForSets(out RHS:WordBool):HResult;stdcall;
		function Set_VisualTotalsForSets(RHS:WordBool):HResult;stdcall;
		function Get_ShowValuesRow(out RHS:WordBool):HResult;stdcall;
		function Set_ShowValuesRow(RHS:WordBool):HResult;stdcall;
		function Get_CalculatedMembersInFilters(out RHS:WordBool):HResult;stdcall;
		function Set_CalculatedMembersInFilters(RHS:WordBool):HResult;stdcall;
		function PivotValueCell(rowline:OleVariant;columnline:OleVariant;out RHS:PivotValueCell):HResult;stdcall;
		function Get_Hidden(out RHS:WordBool):HResult;stdcall;
		function Get_PivotChart(out RHS:Shape):HResult;stdcall;
		function DrillDown(const PivotItem:PivotItem;PivotLine:OleVariant):HResult;stdcall;
		function DrillUp(const PivotItem:PivotItem;PivotLine:OleVariant;LevelUniqueName:OleVariant):HResult;stdcall;
		function DrillTo(const PivotItem:PivotItem;const CubeField:CubeField;PivotLine:OleVariant):HResult;stdcall;
		function Dummy2(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function ApplyLayout:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotTables
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020873-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotTables=interface(IDispatch)
		['{00020873-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotTable):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const PivotCache:PivotCache;TableDestination:OleVariant;TableName:OleVariant;ReadData:OleVariant;
			DefaultVersion:OleVariant;out RHS:PivotTable):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotField
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020874-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotField=interface(IDispatch)
		['{00020874-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Calculation(out RHS:XlPivotFieldCalculation):HResult;stdcall;
		function Set_Calculation(RHS:XlPivotFieldCalculation):HResult;stdcall;
		function Get_ChildField(out RHS:PivotField):HResult;stdcall;
		function Get_ChildItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_CurrentPage(out RHS:OleVariant):HResult;stdcall;
		function Set_CurrentPage(RHS:OleVariant):HResult;stdcall;
		function Get_DataRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_DataType(out RHS:XlPivotFieldDataType):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Get_Function_(out RHS:XlConsolidationFunction):HResult;stdcall;
		function Set_Function_(RHS:XlConsolidationFunction):HResult;stdcall;
		function Get_GroupLevel(out RHS:OleVariant):HResult;stdcall;
		function Get_HiddenItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LabelRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_NumberFormat(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormat(const RHS:WideString):HResult;stdcall;
		function Get_Orientation(out RHS:XlPivotFieldOrientation):HResult;stdcall;
		function Set_Orientation(RHS:XlPivotFieldOrientation):HResult;stdcall;
		function Get_ShowAllItems(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAllItems(RHS:WordBool):HResult;stdcall;
		function Get_ParentField(out RHS:PivotField):HResult;stdcall;
		function Get_ParentItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function PivotItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Position(out RHS:OleVariant):HResult;stdcall;
		function Set_Position(RHS:OleVariant):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Get_Subtotals(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Subtotals(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_BaseField(out RHS:OleVariant):HResult;stdcall;
		function Set_BaseField(RHS:OleVariant):HResult;stdcall;
		function Get_BaseItem(out RHS:OleVariant):HResult;stdcall;
		function Set_BaseItem(RHS:OleVariant):HResult;stdcall;
		function Get_TotalLevels(out RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Set_Value(const RHS:WideString):HResult;stdcall;
		function Get_VisibleItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function CalculatedItems(out RHS:CalculatedItems):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_DragToColumn(out RHS:WordBool):HResult;stdcall;
		function Set_DragToColumn(RHS:WordBool):HResult;stdcall;
		function Get_DragToHide(out RHS:WordBool):HResult;stdcall;
		function Set_DragToHide(RHS:WordBool):HResult;stdcall;
		function Get_DragToPage(out RHS:WordBool):HResult;stdcall;
		function Set_DragToPage(RHS:WordBool):HResult;stdcall;
		function Get_DragToRow(out RHS:WordBool):HResult;stdcall;
		function Set_DragToRow(RHS:WordBool):HResult;stdcall;
		function Get_DragToData(out RHS:WordBool):HResult;stdcall;
		function Set_DragToData(RHS:WordBool):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_IsCalculated(out RHS:WordBool):HResult;stdcall;
		function Get_MemoryUsed(out RHS:Integer):HResult;stdcall;
		function Get_ServerBased(out RHS:WordBool):HResult;stdcall;
		function Set_ServerBased(RHS:WordBool):HResult;stdcall;
		function _AutoSort(Order:Integer;const Field:WideString):HResult;stdcall;
		function AutoShow(Type_:Integer;Range:Integer;Count:Integer;const Field:WideString):HResult;stdcall;
		function Get_AutoSortOrder(out RHS:Integer):HResult;stdcall;
		function Get_AutoSortField(out RHS:WideString):HResult;stdcall;
		function Get_AutoShowType(out RHS:Integer):HResult;stdcall;
		function Get_AutoShowRange(out RHS:Integer):HResult;stdcall;
		function Get_AutoShowCount(out RHS:Integer):HResult;stdcall;
		function Get_AutoShowField(out RHS:WideString):HResult;stdcall;
		function Get_LayoutBlankLine(out RHS:WordBool):HResult;stdcall;
		function Set_LayoutBlankLine(RHS:WordBool):HResult;stdcall;
		function Get_LayoutSubtotalLocation(out RHS:XlSubtototalLocationType):HResult;stdcall;
		function Set_LayoutSubtotalLocation(RHS:XlSubtototalLocationType):HResult;stdcall;
		function Get_LayoutPageBreak(out RHS:WordBool):HResult;stdcall;
		function Set_LayoutPageBreak(RHS:WordBool):HResult;stdcall;
		function Get_LayoutForm(out RHS:XlLayoutFormType):HResult;stdcall;
		function Set_LayoutForm(RHS:XlLayoutFormType):HResult;stdcall;
		function Get_SubtotalName(out RHS:WideString):HResult;stdcall;
		function Set_SubtotalName(const RHS:WideString):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_DrilledDown(out RHS:WordBool):HResult;stdcall;
		function Set_DrilledDown(RHS:WordBool):HResult;stdcall;
		function Get_CubeField(out RHS:CubeField):HResult;stdcall;
		function Get_CurrentPageName(out RHS:WideString):HResult;stdcall;
		function Set_CurrentPageName(const RHS:WideString):HResult;stdcall;
		function Get_StandardFormula(out RHS:WideString):HResult;stdcall;
		function Set_StandardFormula(const RHS:WideString):HResult;stdcall;
		function Get_HiddenItemsList(out RHS:OleVariant):HResult;stdcall;
		function Set_HiddenItemsList(RHS:OleVariant):HResult;stdcall;
		function Get_DatabaseSort(out RHS:WordBool):HResult;stdcall;
		function Set_DatabaseSort(RHS:WordBool):HResult;stdcall;
		function Get_IsMemberProperty(out RHS:WordBool):HResult;stdcall;
		function Get_PropertyParentField(out RHS:PivotField):HResult;stdcall;
		function Get_PropertyOrder(out RHS:Integer):HResult;stdcall;
		function Set_PropertyOrder(RHS:Integer):HResult;stdcall;
		function Get_EnableItemSelection(out RHS:WordBool):HResult;stdcall;
		function Set_EnableItemSelection(RHS:WordBool):HResult;stdcall;
		function Get_CurrentPageList(out RHS:OleVariant):HResult;stdcall;
		function Set_CurrentPageList(RHS:OleVariant):HResult;stdcall;
		function AddPageItem(const Item:WideString;ClearList:OleVariant):HResult;stdcall;
		function Get_Hidden(out RHS:WordBool):HResult;stdcall;
		function Set_Hidden(RHS:WordBool):HResult;stdcall;
		function DrillTo(const Field:WideString):HResult;stdcall;
		function Get_UseMemberPropertyAsCaption(out RHS:WordBool):HResult;stdcall;
		function Set_UseMemberPropertyAsCaption(RHS:WordBool):HResult;stdcall;
		function Get_MemberPropertyCaption(out RHS:WideString):HResult;stdcall;
		function Set_MemberPropertyCaption(const RHS:WideString):HResult;stdcall;
		function Get_DisplayAsTooltip(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayAsTooltip(RHS:WordBool):HResult;stdcall;
		function Get_DisplayInReport(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayInReport(RHS:WordBool):HResult;stdcall;
		function Get_DisplayAsCaption(out RHS:WordBool):HResult;stdcall;
		function Get_LayoutCompactRow(out RHS:WordBool):HResult;stdcall;
		function Set_LayoutCompactRow(RHS:WordBool):HResult;stdcall;
		function Get_IncludeNewItemsInFilter(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeNewItemsInFilter(RHS:WordBool):HResult;stdcall;
		function Get_VisibleItemsList(out RHS:OleVariant):HResult;stdcall;
		function Set_VisibleItemsList(RHS:OleVariant):HResult;stdcall;
		function Get_PivotFilters(out RHS:PivotFilters):HResult;stdcall;
		function Get_AutoSortPivotLine(out RHS:PivotLine):HResult;stdcall;
		function Get_AutoSortCustomSubtotal(out RHS:Integer):HResult;stdcall;
		function Get_ShowingInAxis(out RHS:WordBool):HResult;stdcall;
		function Get_EnableMultiplePageItems(out RHS:WordBool):HResult;stdcall;
		function Set_EnableMultiplePageItems(RHS:WordBool):HResult;stdcall;
		function Get_AllItemsVisible(out RHS:WordBool):HResult;stdcall;
		function ClearManualFilter:HResult;stdcall;
		function ClearAllFilters:HResult;stdcall;
		function ClearValueFilters:HResult;stdcall;
		function ClearLabelFilters:HResult;stdcall;
		function AutoSort(Order:Integer;const Field:WideString;PivotLine:OleVariant;CustomSubtotal:OleVariant)
			:HResult;stdcall;
		function Get_SourceCaption(out RHS:WideString):HResult;stdcall;
		function Get_ShowDetail(out RHS:WordBool):HResult;stdcall;
		function Set_ShowDetail(RHS:WordBool):HResult;stdcall;
		function Get_RepeatLabels(out RHS:WordBool):HResult;stdcall;
		function Set_RepeatLabels(RHS:WordBool):HResult;stdcall;
		function AutoGroup:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotFields
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020875-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotFields=interface(IDispatch)
		['{00020875-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:PivotTable):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICalculatedFields
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024420-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICalculatedFields=interface(IDispatch)
		['{00024420-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function _Add(const Name:WideString;const Formula:WideString;out RHS:PivotField):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotField):HResult;stdcall;
		function Get__Default(Field:OleVariant;out RHS:PivotField):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const Name:WideString;const Formula:WideString;UseStandardFormula:OleVariant;out RHS:PivotField)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotItem
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020876-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotItem=interface(IDispatch)
		['{00020876-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:PivotField):HResult;stdcall;
		function Get_ChildItems(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_DataRange(out RHS:ExcelRange):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Get_LabelRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_ParentItem(out RHS:PivotItem):HResult;stdcall;
		function Get_ParentShowDetail(out RHS:WordBool):HResult;stdcall;
		function Get_Position(out RHS:Integer):HResult;stdcall;
		function Set_Position(RHS:Integer):HResult;stdcall;
		function Get_ShowDetail(out RHS:WordBool):HResult;stdcall;
		function Set_ShowDetail(RHS:WordBool):HResult;stdcall;
		function Get_SourceName(out RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Set_Value(const RHS:WideString):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_IsCalculated(out RHS:WordBool):HResult;stdcall;
		function Get_RecordCount(out RHS:Integer):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_DrilledDown(out RHS:WordBool):HResult;stdcall;
		function Set_DrilledDown(RHS:WordBool):HResult;stdcall;
		function Get_StandardFormula(out RHS:WideString):HResult;stdcall;
		function Set_StandardFormula(const RHS:WideString):HResult;stdcall;
		function Get_SourceNameStandard(out RHS:WideString):HResult;stdcall;
		function DrillTo(const Field:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020877-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotItems=interface(IDispatch)
		['{00020877-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:PivotField):HResult;stdcall;
		function Add(const Name:WideString):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICalculatedItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024421-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICalculatedItems=interface(IDispatch)
		['{00024421-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function _Add(const Name:WideString;const Formula:WideString;out RHS:PivotItem):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotItem):HResult;stdcall;
		function Get__Default(Field:OleVariant;out RHS:PivotItem):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const Name:WideString;const Formula:WideString;UseStandardFormula:OleVariant;out RHS:PivotItem)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICharacters
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020878-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICharacters=interface(IDispatch)
		['{00020878-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Insert(const String_:WideString;out RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_PhoneticCharacters(out RHS:WideString):HResult;stdcall;
		function Set_PhoneticCharacters(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialogs
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020879-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialogs=interface(IDispatch)
		['{00020879-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:XlBuiltInDialog;out RHS:Dialog):HResult;stdcall;
		function Get__Default(Index:XlBuiltInDialog;out RHS:Dialog):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialog
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialog=interface(IDispatch)
		['{0002087A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Show(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant;
			out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISoundNote
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087B-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISoundNote=interface(IDispatch)
		['{0002087B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Import(const Filename:WideString;out RHS:OleVariant):HResult;stdcall;
		function Play(out RHS:OleVariant):HResult;stdcall;
		function Record_(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IButton
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IButton=interface(IDispatch)
		['{0002087D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_CancelButton(out RHS:WordBool):HResult;stdcall;
		function Set_CancelButton(RHS:WordBool):HResult;stdcall;
		function Get_DefaultButton(out RHS:WordBool):HResult;stdcall;
		function Set_DefaultButton(RHS:WordBool):HResult;stdcall;
		function Get_DismissButton(out RHS:WordBool):HResult;stdcall;
		function Set_DismissButton(RHS:WordBool):HResult;stdcall;
		function Get_HelpButton(out RHS:WordBool):HResult;stdcall;
		function Set_HelpButton(RHS:WordBool):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IButtons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IButtons=interface(IDispatch)
		['{0002087E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_CancelButton(out RHS:WordBool):HResult;stdcall;
		function Set_CancelButton(RHS:WordBool):HResult;stdcall;
		function Get_DefaultButton(out RHS:WordBool):HResult;stdcall;
		function Set_DefaultButton(RHS:WordBool):HResult;stdcall;
		function Get_DismissButton(out RHS:WordBool):HResult;stdcall;
		function Set_DismissButton(RHS:WordBool):HResult;stdcall;
		function Get_HelpButton(out RHS:WordBool):HResult;stdcall;
		function Set_HelpButton(RHS:WordBool):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Button):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICheckBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087F-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICheckBox=interface(IDispatch)
		['{0002087F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICheckBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020880-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICheckBoxes=interface(IDispatch)
		['{00020880-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:CheckBox):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOptionButton
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020881-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOptionButton=interface(IDispatch)
		['{00020881-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get_GroupBox(out RHS:GroupBox):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOptionButtons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020882-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOptionButtons=interface(IDispatch)
		['{00020882-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get_GroupBox(out RHS:GroupBox):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:OptionButton):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IEditBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020883-0001-0000-C000-000000000046}
	// *********************************************************************//
	IEditBox=interface(IDispatch)
		['{00020883-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_DisplayVerticalScrollBar(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayVerticalScrollBar(RHS:WordBool):HResult;stdcall;
		function Get_InputType(out RHS:Integer):HResult;stdcall;
		function Set_InputType(RHS:Integer):HResult;stdcall;
		function Get_LinkedObject(out RHS:WideString):HResult;stdcall;
		function Get_MultiLine(out RHS:WordBool):HResult;stdcall;
		function Set_MultiLine(RHS:WordBool):HResult;stdcall;
		function Get_PasswordEdit(out RHS:WordBool):HResult;stdcall;
		function Set_PasswordEdit(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IEditBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020884-0001-0000-C000-000000000046}
	// *********************************************************************//
	IEditBoxes=interface(IDispatch)
		['{00020884-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_DisplayVerticalScrollBar(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayVerticalScrollBar(RHS:WordBool):HResult;stdcall;
		function Get_InputType(out RHS:Integer):HResult;stdcall;
		function Set_InputType(RHS:Integer):HResult;stdcall;
		procedure _Dummy34;stdcall;
		function Get_MultiLine(out RHS:WordBool):HResult;stdcall;
		function Set_MultiLine(RHS:WordBool):HResult;stdcall;
		function Get_PasswordEdit(out RHS:WordBool):HResult;stdcall;
		function Set_PasswordEdit(RHS:WordBool):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:EditBox):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IScrollBar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020885-0001-0000-C000-000000000046}
	// *********************************************************************//
	IScrollBar=interface(IDispatch)
		['{00020885-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Get_LargeChange(out RHS:Integer):HResult;stdcall;
		function Set_LargeChange(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IScrollBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020886-0001-0000-C000-000000000046}
	// *********************************************************************//
	IScrollBars=interface(IDispatch)
		['{00020886-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Get_LargeChange(out RHS:Integer):HResult;stdcall;
		function Set_LargeChange(RHS:Integer):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:ScrollBar):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020887-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListBox=interface(IDispatch)
		['{00020887-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function AddItem(Text:OleVariant;Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_LinkedObject(out RHS:OleVariant):HResult;stdcall;
		function Get_List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_List(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_ListCount(out RHS:Integer):HResult;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		function Get_MultiSelect(out RHS:Integer):HResult;stdcall;
		function Set_MultiSelect(RHS:Integer):HResult;stdcall;
		function RemoveAllItems(out RHS:OleVariant):HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Selected(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Selected(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020888-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListBoxes=interface(IDispatch)
		['{00020888-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function AddItem(Text:OleVariant;Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		procedure _Dummy31;stdcall;
		function Get_List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_List(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		procedure _Dummy33;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		function Get_MultiSelect(out RHS:Integer):HResult;stdcall;
		function Set_MultiSelect(RHS:Integer):HResult;stdcall;
		function RemoveAllItems(out RHS:OleVariant):HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Selected(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Selected(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:ListBox):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGroupBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020889-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGroupBox=interface(IDispatch)
		['{00020889-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGroupBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGroupBoxes=interface(IDispatch)
		['{0002088A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:GroupBox):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDropDown
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDropDown=interface(IDispatch)
		['{0002088B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function AddItem(Text:OleVariant;Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_LinkedObject(out RHS:OleVariant):HResult;stdcall;
		function Get_List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_List(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_ListCount(out RHS:Integer):HResult;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		procedure _Dummy36;stdcall;
		function RemoveAllItems(out RHS:OleVariant):HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Selected(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Selected(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_DropDownLines(out RHS:Integer):HResult;stdcall;
		function Set_DropDownLines(RHS:Integer):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDropDowns
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDropDowns=interface(IDispatch)
		['{0002088C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function AddItem(Text:OleVariant;Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		procedure _Dummy31;stdcall;
		function Get_List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_List(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		procedure _Dummy33;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		procedure _Dummy36;stdcall;
		function RemoveAllItems(out RHS:OleVariant):HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Selected(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Selected(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_DropDownLines(out RHS:Integer):HResult;stdcall;
		function Set_DropDownLines(RHS:Integer):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;Editable:OleVariant;out RHS:DropDown)
			:HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISpinner
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088D-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISpinner=interface(IDispatch)
		['{0002088D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISpinners
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088E-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISpinners=interface(IDispatch)
		['{0002088E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Display3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Display3DShading(RHS:WordBool):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Spinner):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialogFrame
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialogFrame=interface(IDispatch)
		['{0002088F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		procedure _Dummy4;stdcall;
		procedure _Dummy5;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		procedure _Dummy7;stdcall;
		procedure _Dummy8;stdcall;
		procedure _Dummy9;stdcall;
		procedure _Dummy10;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		procedure _Dummy17;stdcall;
		procedure _Dummy18;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		procedure _Dummy20;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		procedure _Dummy23;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		procedure _Dummy25;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILabel
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020890-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILabel=interface(IDispatch)
		['{00020890-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy33;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILabels
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020891-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILabels=interface(IDispatch)
		['{00020891-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Accelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_Accelerator(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy33;stdcall;
		function Get_PhoneticAccelerator(out RHS:OleVariant):HResult;stdcall;
		function Set_PhoneticAccelerator(RHS:OleVariant):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Label_):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPanes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020894-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPanes=interface(IDispatch)
		['{00020894-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:Pane):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:Pane):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPane
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020895-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPane=interface(IDispatch)
		['{00020895-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate(out RHS:WordBool):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function LargeScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_ScrollColumn(out RHS:Integer):HResult;stdcall;
		function Set_ScrollColumn(RHS:Integer):HResult;stdcall;
		function Get_ScrollRow(out RHS:Integer):HResult;stdcall;
		function Set_ScrollRow(RHS:Integer):HResult;stdcall;
		function SmallScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant;out RHS:OleVariant)
			:HResult;stdcall;
		function Get_VisibleRange(out RHS:ExcelRange):HResult;stdcall;
		function ScrollIntoView(Left:Integer;Top:Integer;Width:Integer;Height:Integer;Start:OleVariant):HResult;stdcall;
		function PointsToScreenPixelsX(Points:Integer;out RHS:Integer):HResult;stdcall;
		function PointsToScreenPixelsY(Points:Integer;out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IScenarios
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020896-0001-0000-C000-000000000046}
	// *********************************************************************//
	IScenarios=interface(IDispatch)
		['{00020896-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Name:WideString;ChangingCells:OleVariant;Values:OleVariant;Comment:OleVariant;Locked:OleVariant;
			Hidden:OleVariant;out RHS:Scenario):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function CreateSummary(ReportType:XlSummaryReportType;ResultCells:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Scenario):HResult;stdcall;
		function Merge(Source:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IScenario
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020897-0001-0000-C000-000000000046}
	// *********************************************************************//
	IScenario=interface(IDispatch)
		['{00020897-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function ChangeScenario(ChangingCells:OleVariant;Values:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ChangingCells(out RHS:ExcelRange):HResult;stdcall;
		function Get_Comment(out RHS:WideString):HResult;stdcall;
		function Set_Comment(const RHS:WideString):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Hidden(out RHS:WordBool):HResult;stdcall;
		function Set_Hidden(RHS:WordBool):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Show(out RHS:OleVariant):HResult;stdcall;
		function Get_Values(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGroupObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020898-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGroupObject=interface(IDispatch)
		['{00020898-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		procedure _Dummy27;stdcall;
		procedure _Dummy28;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		procedure _Dummy30;stdcall;
		function Get_ArrowHeadLength(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadLength(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadWidth(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		procedure _Dummy36;stdcall;
		procedure _Dummy37;stdcall;
		procedure _Dummy38;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		procedure _Dummy41;stdcall;
		procedure _Dummy42;stdcall;
		procedure _Dummy43;stdcall;
		procedure _Dummy44;stdcall;
		procedure _Dummy45;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		procedure _Dummy47;stdcall;
		procedure _Dummy48;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy50;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		procedure _Dummy52;stdcall;
		procedure _Dummy53;stdcall;
		procedure _Dummy54;stdcall;
		procedure _Dummy55;stdcall;
		procedure _Dummy56;stdcall;
		procedure _Dummy57;stdcall;
		procedure _Dummy58;stdcall;
		procedure _Dummy59;stdcall;
		procedure _Dummy60;stdcall;
		procedure _Dummy61;stdcall;
		procedure _Dummy62;stdcall;
		procedure _Dummy63;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy65;stdcall;
		procedure _Dummy66;stdcall;
		procedure _Dummy67;stdcall;
		procedure _Dummy68;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		procedure _Dummy70;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		procedure _Dummy72;stdcall;
		procedure _Dummy73;stdcall;
		function Ungroup(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy75;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy77;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGroupObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020899-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGroupObjects=interface(IDispatch)
		['{00020899-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		procedure _Dummy27;stdcall;
		procedure _Dummy28;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		procedure _Dummy30;stdcall;
		function Get_ArrowHeadLength(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadLength(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadWidth(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		procedure _Dummy36;stdcall;
		procedure _Dummy37;stdcall;
		procedure _Dummy38;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		procedure _Dummy41;stdcall;
		procedure _Dummy42;stdcall;
		procedure _Dummy43;stdcall;
		procedure _Dummy44;stdcall;
		procedure _Dummy45;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		procedure _Dummy47;stdcall;
		procedure _Dummy48;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy50;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		procedure _Dummy52;stdcall;
		procedure _Dummy53;stdcall;
		procedure _Dummy54;stdcall;
		procedure _Dummy55;stdcall;
		procedure _Dummy56;stdcall;
		procedure _Dummy57;stdcall;
		procedure _Dummy58;stdcall;
		procedure _Dummy59;stdcall;
		procedure _Dummy60;stdcall;
		procedure _Dummy61;stdcall;
		procedure _Dummy62;stdcall;
		procedure _Dummy63;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy65;stdcall;
		procedure _Dummy66;stdcall;
		procedure _Dummy67;stdcall;
		procedure _Dummy68;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		procedure _Dummy70;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		procedure _Dummy72;stdcall;
		procedure _Dummy73;stdcall;
		function Ungroup(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy75;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy77;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILine
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089A-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILine=interface(IDispatch)
		['{0002089A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_ArrowHeadLength(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadLength(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadWidth(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089B-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILines=interface(IDispatch)
		['{0002089B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_ArrowHeadLength(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadLength(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ArrowHeadWidth(out RHS:OleVariant):HResult;stdcall;
		function Set_ArrowHeadWidth(RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double;out RHS:Line):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRectangle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRectangle=interface(IDispatch)
		['{0002089C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRectangles
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRectangles=interface(IDispatch)
		['{0002089D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Rectangle):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOval
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOval=interface(IDispatch)
		['{0002089E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOvals
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOvals=interface(IDispatch)
		['{0002089F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Oval):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IArc
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IArc=interface(IDispatch)
		['{000208A0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		procedure _Dummy43;stdcall;
	end;

	// *********************************************************************//
	// Interface: IArcs
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IArcs=interface(IDispatch)
		['{000208A1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		procedure _Dummy43;stdcall;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double;out RHS:Arc):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOLEObjectEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024410-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEObjectEvents=interface(IDispatch)
		['{00024410-0001-0000-C000-000000000046}']
		function GotFocus:HResult;stdcall;
		function LostFocus:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _IOLEObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A2-0001-0000-C000-000000000046}
	// *********************************************************************//
	_IOLEObject=interface(IDispatch)
		['{000208A2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Activate(out RHS:OleVariant):HResult;stdcall;
		function Get_AutoLoad(out RHS:WordBool):HResult;stdcall;
		function Set_AutoLoad(RHS:WordBool):HResult;stdcall;
		function Get_AutoUpdate(out RHS:WordBool):HResult;stdcall;
		function Set_AutoUpdate(RHS:WordBool):HResult;stdcall;
		function Get_Object_(out RHS:IDispatch):HResult;stdcall;
		function Get_OLEType(out RHS:OleVariant):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Set_SourceName(const RHS:WideString):HResult;stdcall;
		function Update(out RHS:OleVariant):HResult;stdcall;
		function Verb(Verb:XlOLEVerb;out RHS:OleVariant):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_progID(out RHS:WideString):HResult;stdcall;
		function Get_AltHTML(out RHS:WideString):HResult;stdcall;
		function Set_AltHTML(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOLEObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEObjects=interface(IDispatch)
		['{000208A3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		procedure _Dummy30;stdcall;
		function Get_AutoLoad(out RHS:WordBool):HResult;stdcall;
		function Set_AutoLoad(RHS:WordBool):HResult;stdcall;
		procedure _Dummy32;stdcall;
		procedure _Dummy33;stdcall;
		procedure _Dummy34;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Set_SourceName(const RHS:WideString):HResult;stdcall;
		procedure _Dummy36;stdcall;
		procedure _Dummy37;stdcall;
		procedure _Dummy38;stdcall;
		procedure _Dummy39;stdcall;
		procedure _Dummy40;stdcall;
		procedure _Dummy41;stdcall;
		function Add(ClassType:OleVariant;Filename:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;
			IconFileName:OleVariant;IconIndex:OleVariant;IconLabel:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant;out RHS:ExcelOLEObject):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITextBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A4-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITextBox=interface(IDispatch)
		['{000208A4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITextBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A5-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITextBoxes=interface(IDispatch)
		['{000208A5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:TextBox):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPicture
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A6-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPicture=interface(IDispatch)
		['{000208A6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPictures
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A7-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPictures=interface(IDispatch)
		['{000208A7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:Picture):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Insert(const Filename:WideString;Converter:OleVariant;out RHS:Picture):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Paste(Link:OleVariant;out RHS:Picture):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDrawing
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A8-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDrawing=interface(IDispatch)
		['{000208A8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function AddVertex(Left:Double;Top:Double;out RHS:OleVariant):HResult;stdcall;
		function Reshape(Vertex:Integer;Insert:WordBool;Left:OleVariant;Top:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Vertices(Index1:OleVariant;Index2:OleVariant;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDrawings
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A9-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDrawings=interface(IDispatch)
		['{000208A9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Get_AddIndent(out RHS:WordBool):HResult;stdcall;
		function Set_AddIndent(RHS:WordBool):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		procedure _Dummy44;stdcall;
		function Reshape(Vertex:Integer;Insert:WordBool;Left:OleVariant;Top:OleVariant;out RHS:OleVariant):HResult;stdcall;
		procedure _Dummy46;stdcall;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double;Closed:WordBool;out RHS:Drawing):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRoutingSlip
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AA-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRoutingSlip=interface(IDispatch)
		['{000208AA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Delivery(out RHS:XlRoutingSlipDelivery):HResult;stdcall;
		function Set_Delivery(RHS:XlRoutingSlipDelivery):HResult;stdcall;
		function Get_Message(out RHS:OleVariant):HResult;stdcall;
		function Set_Message(RHS:OleVariant):HResult;stdcall;
		function Get_Recipients(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_Recipients(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Reset(out RHS:OleVariant):HResult;stdcall;
		function Get_ReturnWhenDone(out RHS:WordBool):HResult;stdcall;
		function Set_ReturnWhenDone(RHS:WordBool):HResult;stdcall;
		function Get_Status(out RHS:XlRoutingSlipStatus):HResult;stdcall;
		function Get_Subject(out RHS:OleVariant):HResult;stdcall;
		function Set_Subject(RHS:OleVariant):HResult;stdcall;
		function Get_TrackStatus(out RHS:WordBool):HResult;stdcall;
		function Set_TrackStatus(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOutline
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AB-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOutline=interface(IDispatch)
		['{000208AB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AutomaticStyles(out RHS:WordBool):HResult;stdcall;
		function Set_AutomaticStyles(RHS:WordBool):HResult;stdcall;
		function ShowLevels(RowLevels:OleVariant;ColumnLevels:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_SummaryColumn(out RHS:XlSummaryColumn):HResult;stdcall;
		function Set_SummaryColumn(RHS:XlSummaryColumn):HResult;stdcall;
		function Get_SummaryRow(out RHS:XlSummaryRow):HResult;stdcall;
		function Set_SummaryRow(RHS:XlSummaryRow):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModule
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AD-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModule=interface(IDispatch)
		['{000208AD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate(lcid:Integer):HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		function Get_CodeName(out RHS:WideString):HResult;stdcall;
		function Get__CodeName(out RHS:WideString):HResult;stdcall;
		function Set__CodeName(const RHS:WideString):HResult;stdcall;
		function Get_Index(lcid:Integer;out RHS:Integer):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Next(out RHS:IDispatch):HResult;stdcall;
		function Get_OnDoubleClick(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnDoubleClick(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_OnSheetActivate(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnSheetActivate(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_OnSheetDeactivate(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_PageSetup(out RHS:PageSetup):HResult;stdcall;
		function Get_Previous(out RHS:IDispatch):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		procedure _Dummy18;stdcall;
		function _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_ProtectContents(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		procedure _Dummy21;stdcall;
		function Get_ProtectionMode(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		procedure _Dummy23;stdcall;
		function __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer):HResult;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Unprotect(Password:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:XlSheetVisibility):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:XlSheetVisibility):HResult;stdcall;
		function Get_Shapes(out RHS:Shapes):HResult;stdcall;
		function InsertFile(Filename:OleVariant;Merge:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant):HResult;stdcall;
		function Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant):HResult;stdcall;
		function SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModules
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModules=interface(IDispatch)
		['{000208AE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;out RHS:Module):HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		procedure _Dummy7;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_HPageBreaks(out RHS:HPageBreaks):HResult;stdcall;
		function Get_VPageBreaks(out RHS:VPageBreaks):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;lcid:Integer)
			:HResult;stdcall;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant;out RHS:IDispatch)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialogSheet
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AF-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialogSheet=interface(IDispatch)
		['{000208AF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate(lcid:Integer):HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		function Get_CodeName(out RHS:WideString):HResult;stdcall;
		function Get__CodeName(out RHS:WideString):HResult;stdcall;
		function Set__CodeName(const RHS:WideString):HResult;stdcall;
		function Get_Index(lcid:Integer;out RHS:Integer):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Next(out RHS:IDispatch):HResult;stdcall;
		function Get_OnDoubleClick(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnDoubleClick(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_OnSheetActivate(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnSheetActivate(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_OnSheetDeactivate(lcid:Integer;out RHS:WideString):HResult;stdcall;
		function Set_OnSheetDeactivate(lcid:Integer;const RHS:WideString):HResult;stdcall;
		function Get_PageSetup(out RHS:PageSetup):HResult;stdcall;
		function Get_Previous(out RHS:IDispatch):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;lcid:Integer):HResult;stdcall;
		function _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_ProtectContents(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Get_ProtectDrawingObjects(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Get_ProtectionMode(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Get_ProtectScenarios(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;lcid:Integer):HResult;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Unprotect(Password:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:XlSheetVisibility):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:XlSheetVisibility):HResult;stdcall;
		function Get_Shapes(out RHS:Shapes):HResult;stdcall;
		procedure _Dummy29;stdcall;
		function Arcs(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy31;stdcall;
		procedure _Dummy32;stdcall;
		function Buttons(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy34;stdcall;
		function Get_EnableCalculation(out RHS:WordBool):HResult;stdcall;
		function Set_EnableCalculation(RHS:WordBool):HResult;stdcall;
		procedure _Dummy36;stdcall;
		function ChartObjects(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function CheckBoxes(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;lcid:Integer):HResult;stdcall;
		procedure _Dummy40;stdcall;
		procedure _Dummy41;stdcall;
		procedure _Dummy42;stdcall;
		procedure _Dummy43;stdcall;
		procedure _Dummy44;stdcall;
		procedure _Dummy45;stdcall;
		function Get_DisplayAutomaticPageBreaks(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Set_DisplayAutomaticPageBreaks(lcid:Integer;RHS:WordBool):HResult;stdcall;
		function Drawings(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function DrawingObjects(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function DropDowns(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Get_EnableAutoFilter(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Set_EnableAutoFilter(lcid:Integer;RHS:WordBool):HResult;stdcall;
		function Get_EnableSelection(out RHS:XlEnableSelection):HResult;stdcall;
		function Set_EnableSelection(RHS:XlEnableSelection):HResult;stdcall;
		function Get_EnableOutlining(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Set_EnableOutlining(lcid:Integer;RHS:WordBool):HResult;stdcall;
		function Get_EnablePivotTable(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Set_EnablePivotTable(lcid:Integer;RHS:WordBool):HResult;stdcall;
		function Evaluate(Name:OleVariant;lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function _Evaluate(Name:OleVariant;lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		procedure _Dummy56;stdcall;
		function ResetAllPageBreaks:HResult;stdcall;
		function GroupBoxes(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function GroupObjects(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Labels(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Lines(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function ListBoxes(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Get_Names(out RHS:Names):HResult;stdcall;
		function OLEObjects(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy65;stdcall;
		procedure _Dummy66;stdcall;
		procedure _Dummy67;stdcall;
		function OptionButtons(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy69;stdcall;
		function Ovals(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Paste(Destination:OleVariant;Link:OleVariant;lcid:Integer):HResult;stdcall;
		function _PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;lcid:Integer):HResult;stdcall;
		function Pictures(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy74;stdcall;
		procedure _Dummy75;stdcall;
		procedure _Dummy76;stdcall;
		function Rectangles(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy78;stdcall;
		procedure _Dummy79;stdcall;
		function Get_ScrollArea(out RHS:WideString):HResult;stdcall;
		function Set_ScrollArea(const RHS:WideString):HResult;stdcall;
		function ScrollBars(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy82;stdcall;
		procedure _Dummy83;stdcall;
		function Spinners(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy85;stdcall;
		procedure _Dummy86;stdcall;
		function TextBoxes(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy88;stdcall;
		procedure _Dummy89;stdcall;
		procedure _Dummy90;stdcall;
		function Get_HPageBreaks(out RHS:HPageBreaks):HResult;stdcall;
		function Get_VPageBreaks(out RHS:VPageBreaks):HResult;stdcall;
		function Get_QueryTables(out RHS:QueryTables):HResult;stdcall;
		function Get_DisplayPageBreaks(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayPageBreaks(RHS:WordBool):HResult;stdcall;
		function Get_Comments(out RHS:Comments):HResult;stdcall;
		function Get_Hyperlinks(out RHS:Hyperlinks):HResult;stdcall;
		function ClearCircles:HResult;stdcall;
		function CircleInvalid:HResult;stdcall;
		function Get__DisplayRightToLeft(lcid:Integer;out RHS:Integer):HResult;stdcall;
		function Set__DisplayRightToLeft(lcid:Integer;RHS:Integer):HResult;stdcall;
		function Get__AutoFilter(out RHS:AutoFilter):HResult;stdcall;
		function Get_DisplayRightToLeft(lcid:Integer;out RHS:WordBool):HResult;stdcall;
		function Set_DisplayRightToLeft(lcid:Integer;RHS:WordBool):HResult;stdcall;
		function Get_Scripts(out RHS:Scripts):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer):HResult;stdcall;
		function _CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;IgnoreFinalYaa:OleVariant;SpellScript:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Tab(out RHS:Tab):HResult;stdcall;
		function Get_MailEnvelope(out RHS:MsoEnvelope):HResult;stdcall;
		function _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant):HResult;stdcall;
		function Get_CustomProperties(out RHS:CustomProperties):HResult;stdcall;
		function Get_SmartTags(out RHS:SmartTags):HResult;stdcall;
		function Get_Protection(out RHS:Protection):HResult;stdcall;
		function PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;NoHTMLFormatting:OleVariant;lcid:Integer):HResult;stdcall;
		function Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;AllowFormattingCells:OleVariant;AllowFormattingColumns:OleVariant;
			AllowFormattingRows:OleVariant;AllowInsertingColumns:OleVariant;AllowInsertingRows:OleVariant;
			AllowInsertingHyperlinks:OleVariant;AllowDeletingColumns:OleVariant;AllowDeletingRows:OleVariant;
			AllowSorting:OleVariant;AllowFiltering:OleVariant;AllowUsingPivotTables:OleVariant):HResult;stdcall;
		procedure _Dummy113;stdcall;
		procedure _Dummy114;stdcall;
		procedure _Dummy115;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):HResult;stdcall;
		function Get_EnableFormatConditionsCalculation(out RHS:WordBool):HResult;stdcall;
		function Set_EnableFormatConditionsCalculation(RHS:WordBool):HResult;stdcall;
		function Get__Sort(out RHS:Sort):HResult;stdcall;
		function _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant):HResult;stdcall;
		function Get_PrintedCommentPages(out RHS:Integer):HResult;stdcall;
		function ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant):HResult;stdcall;
		function SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant):HResult;stdcall;
		function Get_CommentsThreaded(out RHS:CommentsThreaded):HResult;stdcall;
		function Get_AutoFilter(out RHS:AutoFilter):HResult;stdcall;
		function Get_Sort(out RHS:Sort):HResult;stdcall;
		function Get_NamedSheetViews(out RHS:NamedSheetViewCollection):HResult;stdcall;
		function Get_DefaultButton(out RHS:OleVariant):HResult;stdcall;
		function Set_DefaultButton(RHS:OleVariant):HResult;stdcall;
		function Get_DialogFrame(out RHS:DialogFrame):HResult;stdcall;
		function EditBoxes(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_Focus(out RHS:OleVariant):HResult;stdcall;
		function Set_Focus(RHS:OleVariant):HResult;stdcall;
		function Hide(Cancel:OleVariant;out RHS:WordBool):HResult;stdcall;
		function Show(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialogSheets
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialogSheets=interface(IDispatch)
		['{000208B0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;out RHS:DialogSheet):HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		procedure _Dummy7;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;lcid:Integer):HResult;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_HPageBreaks(out RHS:HPageBreaks):HResult;stdcall;
		function Get_VPageBreaks(out RHS:VPageBreaks):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):HResult;stdcall;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant;out RHS:IDispatch)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorksheets
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorksheets=interface(IDispatch)
		['{000208B1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;Type_:OleVariant;lcid:Integer;out RHS:IDispatch)
			:HResult;stdcall;
		function Copy(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Delete(lcid:Integer):HResult;stdcall;
		function FillAcrossSheets(const Range:ExcelRange;Type_:XlFillWith;lcid:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Move(Before:OleVariant;After:OleVariant;lcid:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintPreview(EnableChanges:OleVariant;lcid:Integer):HResult;stdcall;
		function Select(Replace:OleVariant;lcid:Integer):HResult;stdcall;
		function Get_HPageBreaks(out RHS:HPageBreaks):HResult;stdcall;
		function Get_VPageBreaks(out RHS:VPageBreaks):HResult;stdcall;
		function Get_Visible(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_Visible(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;lcid:Integer):HResult;stdcall;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant;lcid:Integer)
			:HResult;stdcall;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant;out RHS:IDispatch)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPageSetup
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPageSetup=interface(IDispatch)
		['{000208B4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BlackAndWhite(out RHS:WordBool):HResult;stdcall;
		function Set_BlackAndWhite(RHS:WordBool):HResult;stdcall;
		function Get_BottomMargin(out RHS:Double):HResult;stdcall;
		function Set_BottomMargin(RHS:Double):HResult;stdcall;
		function Get_CenterFooter(out RHS:WideString):HResult;stdcall;
		function Set_CenterFooter(const RHS:WideString):HResult;stdcall;
		function Get_CenterHeader(out RHS:WideString):HResult;stdcall;
		function Set_CenterHeader(const RHS:WideString):HResult;stdcall;
		function Get_CenterHorizontally(out RHS:WordBool):HResult;stdcall;
		function Set_CenterHorizontally(RHS:WordBool):HResult;stdcall;
		function Get_CenterVertically(out RHS:WordBool):HResult;stdcall;
		function Set_CenterVertically(RHS:WordBool):HResult;stdcall;
		function Get_ChartSize(out RHS:XlObjectSize):HResult;stdcall;
		function Set_ChartSize(RHS:XlObjectSize):HResult;stdcall;
		function Get_Draft(out RHS:WordBool):HResult;stdcall;
		function Set_Draft(RHS:WordBool):HResult;stdcall;
		function Get_FirstPageNumber(out RHS:Integer):HResult;stdcall;
		function Set_FirstPageNumber(RHS:Integer):HResult;stdcall;
		function Get_FitToPagesTall(out RHS:OleVariant):HResult;stdcall;
		function Set_FitToPagesTall(RHS:OleVariant):HResult;stdcall;
		function Get_FitToPagesWide(out RHS:OleVariant):HResult;stdcall;
		function Set_FitToPagesWide(RHS:OleVariant):HResult;stdcall;
		function Get_FooterMargin(out RHS:Double):HResult;stdcall;
		function Set_FooterMargin(RHS:Double):HResult;stdcall;
		function Get_HeaderMargin(out RHS:Double):HResult;stdcall;
		function Set_HeaderMargin(RHS:Double):HResult;stdcall;
		function Get_LeftFooter(out RHS:WideString):HResult;stdcall;
		function Set_LeftFooter(const RHS:WideString):HResult;stdcall;
		function Get_LeftHeader(out RHS:WideString):HResult;stdcall;
		function Set_LeftHeader(const RHS:WideString):HResult;stdcall;
		function Get_LeftMargin(out RHS:Double):HResult;stdcall;
		function Set_LeftMargin(RHS:Double):HResult;stdcall;
		function Get_Order(out RHS:XlOrder):HResult;stdcall;
		function Set_Order(RHS:XlOrder):HResult;stdcall;
		function Get_Orientation(out RHS:XlPageOrientation):HResult;stdcall;
		function Set_Orientation(RHS:XlPageOrientation):HResult;stdcall;
		function Get_PaperSize(out RHS:XlPaperSize):HResult;stdcall;
		function Set_PaperSize(RHS:XlPaperSize):HResult;stdcall;
		function Get_PrintArea(out RHS:WideString):HResult;stdcall;
		function Set_PrintArea(const RHS:WideString):HResult;stdcall;
		function Get_PrintGridlines(out RHS:WordBool):HResult;stdcall;
		function Set_PrintGridlines(RHS:WordBool):HResult;stdcall;
		function Get_PrintHeadings(out RHS:WordBool):HResult;stdcall;
		function Set_PrintHeadings(RHS:WordBool):HResult;stdcall;
		function Get_PrintNotes(out RHS:WordBool):HResult;stdcall;
		function Set_PrintNotes(RHS:WordBool):HResult;stdcall;
		function Get_PrintQuality(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_PrintQuality(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_PrintTitleColumns(out RHS:WideString):HResult;stdcall;
		function Set_PrintTitleColumns(const RHS:WideString):HResult;stdcall;
		function Get_PrintTitleRows(out RHS:WideString):HResult;stdcall;
		function Set_PrintTitleRows(const RHS:WideString):HResult;stdcall;
		function Get_RightFooter(out RHS:WideString):HResult;stdcall;
		function Set_RightFooter(const RHS:WideString):HResult;stdcall;
		function Get_RightHeader(out RHS:WideString):HResult;stdcall;
		function Set_RightHeader(const RHS:WideString):HResult;stdcall;
		function Get_RightMargin(out RHS:Double):HResult;stdcall;
		function Set_RightMargin(RHS:Double):HResult;stdcall;
		function Get_TopMargin(out RHS:Double):HResult;stdcall;
		function Set_TopMargin(RHS:Double):HResult;stdcall;
		function Get_Zoom(out RHS:OleVariant):HResult;stdcall;
		function Set_Zoom(RHS:OleVariant):HResult;stdcall;
		function Get_PrintComments(out RHS:XlPrintLocation):HResult;stdcall;
		function Set_PrintComments(RHS:XlPrintLocation):HResult;stdcall;
		function Get_PrintErrors(out RHS:XlPrintErrors):HResult;stdcall;
		function Set_PrintErrors(RHS:XlPrintErrors):HResult;stdcall;
		function Get_CenterHeaderPicture(out RHS:Graphic):HResult;stdcall;
		function Get_CenterFooterPicture(out RHS:Graphic):HResult;stdcall;
		function Get_LeftHeaderPicture(out RHS:Graphic):HResult;stdcall;
		function Get_LeftFooterPicture(out RHS:Graphic):HResult;stdcall;
		function Get_RightHeaderPicture(out RHS:Graphic):HResult;stdcall;
		function Get_RightFooterPicture(out RHS:Graphic):HResult;stdcall;
		function Get_OddAndEvenPagesHeaderFooter(out RHS:WordBool):HResult;stdcall;
		function Set_OddAndEvenPagesHeaderFooter(RHS:WordBool):HResult;stdcall;
		function Get_DifferentFirstPageHeaderFooter(out RHS:WordBool):HResult;stdcall;
		function Set_DifferentFirstPageHeaderFooter(RHS:WordBool):HResult;stdcall;
		function Get_ScaleWithDocHeaderFooter(out RHS:WordBool):HResult;stdcall;
		function Set_ScaleWithDocHeaderFooter(RHS:WordBool):HResult;stdcall;
		function Get_AlignMarginsHeaderFooter(out RHS:WordBool):HResult;stdcall;
		function Set_AlignMarginsHeaderFooter(RHS:WordBool):HResult;stdcall;
		function Get_Pages(out RHS:Pages):HResult;stdcall;
		function Get_EvenPage(out RHS:Page):HResult;stdcall;
		function Get_FirstPage(out RHS:Page):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: INames
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B8-0001-0000-C000-000000000046}
	// *********************************************************************//
	INames=interface(IDispatch)
		['{000208B8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Name:OleVariant;RefersTo:OleVariant;Visible:OleVariant;MacroType:OleVariant;ShortcutKey:OleVariant;
			Category:OleVariant;NameLocal:OleVariant;RefersToLocal:OleVariant;CategoryLocal:OleVariant;
			RefersToR1C1:OleVariant;RefersToR1C1Local:OleVariant;out RHS:Name):HResult;stdcall;
		function Item(Index:OleVariant;IndexLocal:OleVariant;RefersTo:OleVariant;lcid:Integer;out RHS:Name):HResult;stdcall;
		function _Default(Index:OleVariant;IndexLocal:OleVariant;RefersTo:OleVariant;lcid:Integer;out RHS:Name)
			:HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IName
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B9-0001-0000-C000-000000000046}
	// *********************************************************************//
	IName=interface(IDispatch)
		['{000208B9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Category(lcidIn:Integer;out RHS:WideString):HResult;stdcall;
		function Set_Category(lcidIn:Integer;const RHS:WideString):HResult;stdcall;
		function Get_CategoryLocal(out RHS:WideString):HResult;stdcall;
		function Set_CategoryLocal(const RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_MacroType(out RHS:XlXLMMacroType):HResult;stdcall;
		function Set_MacroType(RHS:XlXLMMacroType):HResult;stdcall;
		function Get_Name(lcidIn:Integer;out RHS:WideString):HResult;stdcall;
		function Set_Name(lcidIn:Integer;const RHS:WideString):HResult;stdcall;
		function Get_RefersTo(lcidIn:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_RefersTo(lcidIn:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_ShortcutKey(out RHS:WideString):HResult;stdcall;
		function Set_ShortcutKey(const RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Set_Value(const RHS:WideString):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_NameLocal(out RHS:WideString):HResult;stdcall;
		function Set_NameLocal(const RHS:WideString):HResult;stdcall;
		function Get_RefersToLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_RefersToLocal(RHS:OleVariant):HResult;stdcall;
		function Get_RefersToR1C1(lcidIn:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_RefersToR1C1(lcidIn:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_RefersToR1C1Local(out RHS:OleVariant):HResult;stdcall;
		function Set_RefersToR1C1Local(RHS:OleVariant):HResult;stdcall;
		function Get_RefersToRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Comment(out RHS:WideString):HResult;stdcall;
		function Set_Comment(const RHS:WideString):HResult;stdcall;
		function Get_WorkbookParameter(out RHS:WordBool):HResult;stdcall;
		function Set_WorkbookParameter(RHS:WordBool):HResult;stdcall;
		function Get_ValidWorkbookParameter(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208CF-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartObject=interface(IDispatch)
		['{000208CF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function _Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_ZOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		function Activate(out RHS:OleVariant):HResult;stdcall;
		function Get_Chart(out RHS:ExcelChart):HResult;stdcall;
		function Get_ProtectChartObject(out RHS:WordBool):HResult;stdcall;
		function Set_ProtectChartObject(RHS:WordBool):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208D0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartObjects=interface(IDispatch)
		['{000208D0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		procedure _Dummy3;stdcall;
		function BringToFront(out RHS:OleVariant):HResult;stdcall;
		function _Copy(out RHS:OleVariant):HResult;stdcall;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat;out RHS:OleVariant):HResult;stdcall;
		function Cut(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Duplicate(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		procedure _Dummy12;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		procedure _Dummy15;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Placement(out RHS:OleVariant):HResult;stdcall;
		function Set_Placement(RHS:OleVariant):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Select(Replace:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function SendToBack(out RHS:OleVariant):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		procedure _Dummy22;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		procedure _Dummy25;stdcall;
		function Get_ShapeRange(out RHS:ShapeRange):HResult;stdcall;
		procedure _Dummy27;stdcall;
		procedure _Dummy28;stdcall;
		function Get_ProtectChartObject(out RHS:WordBool):HResult;stdcall;
		function Set_ProtectChartObject(RHS:WordBool):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;out RHS:ChartObject):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Group(out RHS:GroupObject):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMailer
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208D1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMailer=interface(IDispatch)
		['{000208D1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BCCRecipients(out RHS:OleVariant):HResult;stdcall;
		function Set_BCCRecipients(RHS:OleVariant):HResult;stdcall;
		function Get_CCRecipients(out RHS:OleVariant):HResult;stdcall;
		function Set_CCRecipients(RHS:OleVariant):HResult;stdcall;
		function Get_Enclosures(out RHS:OleVariant):HResult;stdcall;
		function Set_Enclosures(RHS:OleVariant):HResult;stdcall;
		function Get_Received(out RHS:WordBool):HResult;stdcall;
		function Get_SendDateTime(out RHS:TDateTime):HResult;stdcall;
		function Get_Sender(out RHS:WideString):HResult;stdcall;
		function Get_Subject(out RHS:WideString):HResult;stdcall;
		function Set_Subject(const RHS:WideString):HResult;stdcall;
		function Get_ToRecipients(out RHS:OleVariant):HResult;stdcall;
		function Set_ToRecipients(RHS:OleVariant):HResult;stdcall;
		function Get_WhichAddress(out RHS:OleVariant):HResult;stdcall;
		function Set_WhichAddress(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICustomViews
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024422-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICustomViews=interface(IDispatch)
		['{00024422-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(ViewName:OleVariant;out RHS:CustomView):HResult;stdcall;
		function Add(const ViewName:WideString;PrintSettings:OleVariant;RowColSettings:OleVariant;out RHS:CustomView)
			:HResult;stdcall;
		function Get__Default(ViewName:OleVariant;out RHS:CustomView):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICustomView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024423-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICustomView=interface(IDispatch)
		['{00024423-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_PrintSettings(out RHS:WordBool):HResult;stdcall;
		function Get_RowColSettings(out RHS:WordBool):HResult;stdcall;
		function Show:HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFormatConditions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024424-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFormatConditions=interface(IDispatch)
		['{00024424-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Add(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant;
			String_:OleVariant;TextOperator:OleVariant;DateOperator:OleVariant;ScopeType:OleVariant;out RHS:IDispatch)
			:HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Delete:HResult;stdcall;
		function AddColorScale(ColorScaleType:Integer;out RHS:IDispatch):HResult;stdcall;
		function AddDatabar(out RHS:IDispatch):HResult;stdcall;
		function AddIconSetCondition(out RHS:IDispatch):HResult;stdcall;
		function AddTop10(out RHS:IDispatch):HResult;stdcall;
		function AddAboveAverage(out RHS:IDispatch):HResult;stdcall;
		function AddUniqueValues(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFormatCondition
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024425-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFormatCondition=interface(IDispatch)
		['{00024425-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _Modify(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant)
			:HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Get_Operator_(out RHS:Integer):HResult;stdcall;
		function Get_Formula1(out RHS:WideString):HResult;stdcall;
		function Get_Formula2(out RHS:WideString):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Modify(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant;
			String_:OleVariant;Operator2:OleVariant):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_TextOperator(out RHS:XlContainsOperator):HResult;stdcall;
		function Set_TextOperator(RHS:XlContainsOperator):HResult;stdcall;
		function Get_DateOperator(out RHS:XlTimePeriods):HResult;stdcall;
		function Set_DateOperator(RHS:XlTimePeriods):HResult;stdcall;
		function Get_NumberFormat(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(RHS:OleVariant):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Set_StopIfTrue(RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IComments
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024426-0001-0000-C000-000000000046}
	// *********************************************************************//
	IComments=interface(IDispatch)
		['{00024426-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:Comment):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:Comment):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IComment
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024427-0001-0000-C000-000000000046}
	// *********************************************************************//
	IComment=interface(IDispatch)
		['{00024427-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Author(out RHS:WideString):HResult;stdcall;
		function Get_Shape(out RHS:Shape):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Text(Text:OleVariant;Start:OleVariant;Overwrite:OleVariant;out RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Next(out RHS:Comment):HResult;stdcall;
		function Previous(out RHS:Comment):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRefreshEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRefreshEvents=interface(IDispatch)
		['{0002441B-0001-0000-C000-000000000046}']
		function BeforeRefresh(var Cancel:WordBool):HResult;stdcall;
		function AfterRefresh(Success:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: _IQueryTable
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024428-0001-0000-C000-000000000046}
	// *********************************************************************//
	_IQueryTable=interface(IDispatch)
		['{00024428-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_FieldNames(out RHS:WordBool):HResult;stdcall;
		function Set_FieldNames(RHS:WordBool):HResult;stdcall;
		function Get_RowNumbers(out RHS:WordBool):HResult;stdcall;
		function Set_RowNumbers(RHS:WordBool):HResult;stdcall;
		function Get_FillAdjacentFormulas(out RHS:WordBool):HResult;stdcall;
		function Set_FillAdjacentFormulas(RHS:WordBool):HResult;stdcall;
		function Get_HasAutoFormat(out RHS:WordBool):HResult;stdcall;
		function Set_HasAutoFormat(RHS:WordBool):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_Refreshing(out RHS:WordBool):HResult;stdcall;
		function Get_FetchedRowOverflow(out RHS:WordBool):HResult;stdcall;
		function Get_BackgroundQuery(out RHS:WordBool):HResult;stdcall;
		function Set_BackgroundQuery(RHS:WordBool):HResult;stdcall;
		function CancelRefresh:HResult;stdcall;
		function Get_RefreshStyle(out RHS:XlCellInsertionMode):HResult;stdcall;
		function Set_RefreshStyle(RHS:XlCellInsertionMode):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Get_SavePassword(out RHS:WordBool):HResult;stdcall;
		function Set_SavePassword(RHS:WordBool):HResult;stdcall;
		function Get_Destination(out RHS:ExcelRange):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_Sql(out RHS:OleVariant):HResult;stdcall;
		function Set_Sql(RHS:OleVariant):HResult;stdcall;
		function Get_PostText(out RHS:WideString):HResult;stdcall;
		function Set_PostText(const RHS:WideString):HResult;stdcall;
		function Get_ResultRange(out RHS:ExcelRange):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Refresh(BackgroundQuery:OleVariant;out RHS:WordBool):HResult;stdcall;
		function Get_Parameters(out RHS:Parameters):HResult;stdcall;
		function Get_Recordset(out RHS:IDispatch):HResult;stdcall;
		function _Set_Recordset(const RHS:IDispatch):HResult;stdcall;
		function Get_SaveData(out RHS:WordBool):HResult;stdcall;
		function Set_SaveData(RHS:WordBool):HResult;stdcall;
		function Get_TablesOnlyFromHTML(out RHS:WordBool):HResult;stdcall;
		function Set_TablesOnlyFromHTML(RHS:WordBool):HResult;stdcall;
		function Get_EnableEditing(out RHS:WordBool):HResult;stdcall;
		function Set_EnableEditing(RHS:WordBool):HResult;stdcall;
		function Get_TextFilePlatform(out RHS:Integer):HResult;stdcall;
		function Set_TextFilePlatform(RHS:Integer):HResult;stdcall;
		function Get_TextFileStartRow(out RHS:Integer):HResult;stdcall;
		function Set_TextFileStartRow(RHS:Integer):HResult;stdcall;
		function Get_TextFileParseType(out RHS:XlTextParsingType):HResult;stdcall;
		function Set_TextFileParseType(RHS:XlTextParsingType):HResult;stdcall;
		function Get_TextFileTextQualifier(out RHS:XlTextQualifier):HResult;stdcall;
		function Set_TextFileTextQualifier(RHS:XlTextQualifier):HResult;stdcall;
		function Get_TextFileConsecutiveDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileConsecutiveDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileTabDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileTabDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileSemicolonDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileSemicolonDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileCommaDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileCommaDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileSpaceDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileSpaceDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileOtherDelimiter(out RHS:WideString):HResult;stdcall;
		function Set_TextFileOtherDelimiter(const RHS:WideString):HResult;stdcall;
		function Get_TextFileColumnDataTypes(out RHS:OleVariant):HResult;stdcall;
		function Set_TextFileColumnDataTypes(RHS:OleVariant):HResult;stdcall;
		function Get_TextFileFixedColumnWidths(out RHS:OleVariant):HResult;stdcall;
		function Set_TextFileFixedColumnWidths(RHS:OleVariant):HResult;stdcall;
		function Get_PreserveColumnInfo(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveColumnInfo(RHS:WordBool):HResult;stdcall;
		function Get_PreserveFormatting(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveFormatting(RHS:WordBool):HResult;stdcall;
		function Get_AdjustColumnWidth(out RHS:WordBool):HResult;stdcall;
		function Set_AdjustColumnWidth(RHS:WordBool):HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_TextFilePromptOnRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_TextFilePromptOnRefresh(RHS:WordBool):HResult;stdcall;
		function Get_QueryType(out RHS:XlQueryType):HResult;stdcall;
		function Get_MaintainConnection(out RHS:WordBool):HResult;stdcall;
		function Set_MaintainConnection(RHS:WordBool):HResult;stdcall;
		function Get_TextFileDecimalSeparator(out RHS:WideString):HResult;stdcall;
		function Set_TextFileDecimalSeparator(const RHS:WideString):HResult;stdcall;
		function Get_TextFileThousandsSeparator(out RHS:WideString):HResult;stdcall;
		function Set_TextFileThousandsSeparator(const RHS:WideString):HResult;stdcall;
		function Get_RefreshPeriod(out RHS:Integer):HResult;stdcall;
		function Set_RefreshPeriod(RHS:Integer):HResult;stdcall;
		function ResetTimer:HResult;stdcall;
		function Get_WebSelectionType(out RHS:XlWebSelectionType):HResult;stdcall;
		function Set_WebSelectionType(RHS:XlWebSelectionType):HResult;stdcall;
		function Get_WebFormatting(out RHS:XlWebFormatting):HResult;stdcall;
		function Set_WebFormatting(RHS:XlWebFormatting):HResult;stdcall;
		function Get_WebTables(out RHS:WideString):HResult;stdcall;
		function Set_WebTables(const RHS:WideString):HResult;stdcall;
		function Get_WebPreFormattedTextToColumns(out RHS:WordBool):HResult;stdcall;
		function Set_WebPreFormattedTextToColumns(RHS:WordBool):HResult;stdcall;
		function Get_WebSingleBlockTextImport(out RHS:WordBool):HResult;stdcall;
		function Set_WebSingleBlockTextImport(RHS:WordBool):HResult;stdcall;
		function Get_WebDisableDateRecognition(out RHS:WordBool):HResult;stdcall;
		function Set_WebDisableDateRecognition(RHS:WordBool):HResult;stdcall;
		function Get_WebConsecutiveDelimitersAsOne(out RHS:WordBool):HResult;stdcall;
		function Set_WebConsecutiveDelimitersAsOne(RHS:WordBool):HResult;stdcall;
		function Get_WebDisableRedirections(out RHS:WordBool):HResult;stdcall;
		function Set_WebDisableRedirections(RHS:WordBool):HResult;stdcall;
		function Get_EditWebPage(out RHS:OleVariant):HResult;stdcall;
		function Set_EditWebPage(RHS:OleVariant):HResult;stdcall;
		function Get_SourceConnectionFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceConnectionFile(const RHS:WideString):HResult;stdcall;
		function Get_SourceDataFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceDataFile(const RHS:WideString):HResult;stdcall;
		function Get_RobustConnect(out RHS:XlRobustConnect):HResult;stdcall;
		function Set_RobustConnect(RHS:XlRobustConnect):HResult;stdcall;
		function Get_TextFileTrailingMinusNumbers(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileTrailingMinusNumbers(RHS:WordBool):HResult;stdcall;
		function SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant):HResult;stdcall;
		function Get_ListObject(out RHS:ListObject):HResult;stdcall;
		function Get_TextFileVisualLayout(out RHS:XlTextVisualLayoutType):HResult;stdcall;
		function Set_TextFileVisualLayout(RHS:XlTextVisualLayoutType):HResult;stdcall;
		function Get_WorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
		function Get__Sort(out RHS:Sort):HResult;stdcall;
		function Get_Sort(out RHS:Sort):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IQueryTables
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024429-0001-0000-C000-000000000046}
	// *********************************************************************//
	IQueryTables=interface(IDispatch)
		['{00024429-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(Connection:OleVariant;const Destination:ExcelRange;Sql:OleVariant;out RHS:ExcelQueryTable)
			:HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ExcelQueryTable):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ExcelQueryTable):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IParameter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IParameter=interface(IDispatch)
		['{0002442A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_DataType(out RHS:XlParameterDataType):HResult;stdcall;
		function Set_DataType(RHS:XlParameterDataType):HResult;stdcall;
		function Get_type_(out RHS:XlParameterType):HResult;stdcall;
		function Get_PromptString(out RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Get_SourceRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function SetParam(Type_:XlParameterType;Value:OleVariant):HResult;stdcall;
		function Get_RefreshOnChange(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnChange(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IParameters
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IParameters=interface(IDispatch)
		['{0002442B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Name:WideString;iDataType:OleVariant;out RHS:Parameter):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Parameter):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Parameter):HResult;stdcall;
		function Delete:HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IODBCError
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IODBCError=interface(IDispatch)
		['{0002442C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_SqlState(out RHS:WideString):HResult;stdcall;
		function Get_ErrorString(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IODBCErrors
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IODBCErrors=interface(IDispatch)
		['{0002442D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:ODBCError):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:ODBCError):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IValidation
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IValidation=interface(IDispatch)
		['{0002442F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Type_:XlDVType;AlertStyle:OleVariant;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant)
			:HResult;stdcall;
		function Get_AlertStyle(out RHS:Integer):HResult;stdcall;
		function Get_IgnoreBlank(out RHS:WordBool):HResult;stdcall;
		function Set_IgnoreBlank(RHS:WordBool):HResult;stdcall;
		function Get_IMEMode(out RHS:Integer):HResult;stdcall;
		function Set_IMEMode(RHS:Integer):HResult;stdcall;
		function Get_InCellDropdown(out RHS:WordBool):HResult;stdcall;
		function Set_InCellDropdown(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_ErrorMessage(out RHS:WideString):HResult;stdcall;
		function Set_ErrorMessage(const RHS:WideString):HResult;stdcall;
		function Get_ErrorTitle(out RHS:WideString):HResult;stdcall;
		function Set_ErrorTitle(const RHS:WideString):HResult;stdcall;
		function Get_InputMessage(out RHS:WideString):HResult;stdcall;
		function Set_InputMessage(const RHS:WideString):HResult;stdcall;
		function Get_InputTitle(out RHS:WideString):HResult;stdcall;
		function Set_InputTitle(const RHS:WideString):HResult;stdcall;
		function Get_Formula1(out RHS:WideString):HResult;stdcall;
		function Get_Formula2(out RHS:WideString):HResult;stdcall;
		function Modify(Type_:OleVariant;AlertStyle:OleVariant;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant)
			:HResult;stdcall;
		function Get_Operator_(out RHS:Integer):HResult;stdcall;
		function Get_ShowError(out RHS:WordBool):HResult;stdcall;
		function Set_ShowError(RHS:WordBool):HResult;stdcall;
		function Get_ShowInput(out RHS:WordBool):HResult;stdcall;
		function Set_ShowInput(RHS:WordBool):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHyperlinks
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024430-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHyperlinks=interface(IDispatch)
		['{00024430-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Anchor:IDispatch;const Address:WideString;SubAddress:OleVariant;ScreenTip:OleVariant;
			TextToDisplay:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Hyperlink):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Hyperlink):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHyperlink
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024431-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHyperlink=interface(IDispatch)
		['{00024431-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Get_Shape(out RHS:Shape):HResult;stdcall;
		function Get_SubAddress(out RHS:WideString):HResult;stdcall;
		function Set_SubAddress(const RHS:WideString):HResult;stdcall;
		function Get_Address(out RHS:WideString):HResult;stdcall;
		function Set_Address(const RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function AddToFavorites:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Follow(NewWindow:OleVariant;AddHistory:OleVariant;ExtraInfo:OleVariant;Method:OleVariant;
			HeaderInfo:OleVariant):HResult;stdcall;
		function Get_EmailSubject(out RHS:WideString):HResult;stdcall;
		function Set_EmailSubject(const RHS:WideString):HResult;stdcall;
		function Get_ScreenTip(out RHS:WideString):HResult;stdcall;
		function Set_ScreenTip(const RHS:WideString):HResult;stdcall;
		function Get_TextToDisplay(out RHS:WideString):HResult;stdcall;
		function Set_TextToDisplay(const RHS:WideString):HResult;stdcall;
		function CreateNewDocument(const Filename:WideString;EditNow:WordBool;Overwrite:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAutoFilter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024432-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAutoFilter=interface(IDispatch)
		['{00024432-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Get_Filters(out RHS:Filters):HResult;stdcall;
		function Get_FilterMode(out RHS:WordBool):HResult;stdcall;
		function Get__Sort(out RHS:Sort):HResult;stdcall;
		function ApplyFilter:HResult;stdcall;
		function ShowAllData:HResult;stdcall;
		function Get_Sort(out RHS:Sort):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFilters
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024433-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFilters=interface(IDispatch)
		['{00024433-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:Filter):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:Filter):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFilter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024434-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFilter=interface(IDispatch)
		['{00024434-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_On_(out RHS:WordBool):HResult;stdcall;
		function Get_Criteria1(out RHS:OleVariant):HResult;stdcall;
		function Get__Operator(out RHS:XlAutoFilterOperator):HResult;stdcall;
		function Get_Criteria2(out RHS:OleVariant):HResult;stdcall;
		function Get_Operator_(out RHS:XlAutoFilterOperator):HResult;stdcall;
		function Set_Operator_(RHS:XlAutoFilterOperator):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAutoCorrect
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208D4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAutoCorrect=interface(IDispatch)
		['{000208D4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function AddReplacement(const What:WideString;const Replacement:WideString;out RHS:OleVariant):HResult;stdcall;
		function Get_CapitalizeNamesOfDays(out RHS:WordBool):HResult;stdcall;
		function Set_CapitalizeNamesOfDays(RHS:WordBool):HResult;stdcall;
		function DeleteReplacement(const What:WideString;out RHS:OleVariant):HResult;stdcall;
		function Get_ReplacementList(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Set_ReplacementList(Index:OleVariant;RHS:OleVariant):HResult;stdcall;
		function Get_ReplaceText(out RHS:WordBool):HResult;stdcall;
		function Set_ReplaceText(RHS:WordBool):HResult;stdcall;
		function Get_TwoInitialCapitals(out RHS:WordBool):HResult;stdcall;
		function Set_TwoInitialCapitals(RHS:WordBool):HResult;stdcall;
		function Get_CorrectSentenceCap(out RHS:WordBool):HResult;stdcall;
		function Set_CorrectSentenceCap(RHS:WordBool):HResult;stdcall;
		function Get_CorrectCapsLock(out RHS:WordBool):HResult;stdcall;
		function Set_CorrectCapsLock(RHS:WordBool):HResult;stdcall;
		function Get_DisplayAutoCorrectOptions(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayAutoCorrectOptions(RHS:WordBool):HResult;stdcall;
		function Get_AutoExpandListRange(out RHS:WordBool):HResult;stdcall;
		function Set_AutoExpandListRange(RHS:WordBool):HResult;stdcall;
		function Get_AutoFillFormulasInLists(out RHS:WordBool):HResult;stdcall;
		function Set_AutoFillFormulasInLists(RHS:WordBool):HResult;stdcall;
		function Get_KeepGeneralFormatLeadingZerosAsText(out RHS:WordBool):HResult;stdcall;
		function Set_KeepGeneralFormatLeadingZerosAsText(RHS:WordBool):HResult;stdcall;
		function Get_KeepGeneralFormatLargeNumbersAsText(out RHS:WordBool):HResult;stdcall;
		function Set_KeepGeneralFormatLargeNumbersAsText(RHS:WordBool):HResult;stdcall;
		function Get_KeepGeneralFormatDigitsWithEAsText(out RHS:WordBool):HResult;stdcall;
		function Set_KeepGeneralFormatDigitsWithEAsText(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IBorder
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020854-0001-0000-C000-000000000046}
	// *********************************************************************//
	IBorder=interface(IDispatch)
		['{00020854-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:OleVariant):HResult;stdcall;
		function Set_ColorIndex(RHS:OleVariant):HResult;stdcall;
		function Get_LineStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_LineStyle(RHS:OleVariant):HResult;stdcall;
		function Get_Weight(out RHS:OleVariant):HResult;stdcall;
		function Set_Weight(RHS:OleVariant):HResult;stdcall;
		function Get_ThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_ThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IInterior
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020870-0001-0000-C000-000000000046}
	// *********************************************************************//
	IInterior=interface(IDispatch)
		['{00020870-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:OleVariant):HResult;stdcall;
		function Set_ColorIndex(RHS:OleVariant):HResult;stdcall;
		function Get_InvertIfNegative(out RHS:OleVariant):HResult;stdcall;
		function Set_InvertIfNegative(RHS:OleVariant):HResult;stdcall;
		function Get_Pattern(out RHS:OleVariant):HResult;stdcall;
		function Set_Pattern(RHS:OleVariant):HResult;stdcall;
		function Get_PatternColor(out RHS:OleVariant):HResult;stdcall;
		function Set_PatternColor(RHS:OleVariant):HResult;stdcall;
		function Get_PatternColorIndex(out RHS:OleVariant):HResult;stdcall;
		function Set_PatternColorIndex(RHS:OleVariant):HResult;stdcall;
		function Get_ThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_ThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
		function Get_PatternThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_PatternThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_PatternTintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_PatternTintAndShade(RHS:OleVariant):HResult;stdcall;
		function Get_Gradient(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartFillFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024435-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartFillFormat=interface(IDispatch)
		['{00024435-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function OneColorGradient(Style:MsoGradientStyle;Variant:Integer;Degree:Single):HResult;stdcall;
		function TwoColorGradient(Style:MsoGradientStyle;Variant:Integer):HResult;stdcall;
		function PresetTextured(PresetTexture:MsoPresetTexture):HResult;stdcall;
		function Solid:HResult;stdcall;
		function Patterned(Pattern:MsoPatternType):HResult;stdcall;
		function UserPicture(PictureFile:OleVariant;PictureFormat:OleVariant;PictureStackUnit:OleVariant;
			PicturePlacement:OleVariant):HResult;stdcall;
		function UserTextured(const TextureFile:WideString):HResult;stdcall;
		function PresetGradient(Style:MsoGradientStyle;Variant:Integer;PresetGradientType:MsoPresetGradientType)
			:HResult;stdcall;
		function Get_BackColor(out RHS:ChartColorFormat):HResult;stdcall;
		function Get_ForeColor(out RHS:ChartColorFormat):HResult;stdcall;
		function Get_GradientColorType(out RHS:MsoGradientColorType):HResult;stdcall;
		function Get_GradientDegree(out RHS:Single):HResult;stdcall;
		function Get_GradientStyle(out RHS:MsoGradientStyle):HResult;stdcall;
		function Get_GradientVariant(out RHS:Integer):HResult;stdcall;
		function Get_Pattern(out RHS:MsoPatternType):HResult;stdcall;
		function Get_PresetGradientType(out RHS:MsoPresetGradientType):HResult;stdcall;
		function Get_PresetTexture(out RHS:MsoPresetTexture):HResult;stdcall;
		function Get_TextureName(out RHS:WideString):HResult;stdcall;
		function Get_TextureType(out RHS:MsoTextureType):HResult;stdcall;
		function Get_type_(out RHS:MsoFillType):HResult;stdcall;
		function Get_Visible(out RHS:MsoTriState):HResult;stdcall;
		function Set_Visible(RHS:MsoTriState):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartColorFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024436-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartColorFormat=interface(IDispatch)
		['{00024436-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_SchemeColor(out RHS:Integer):HResult;stdcall;
		function Set_SchemeColor(RHS:Integer):HResult;stdcall;
		function Get_RGB(out RHS:Integer):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAxis
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020848-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAxis=interface(IDispatch)
		['{00020848-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AxisBetweenCategories(out RHS:WordBool):HResult;stdcall;
		function Set_AxisBetweenCategories(RHS:WordBool):HResult;stdcall;
		function Get_AxisGroup(out RHS:XlAxisGroup):HResult;stdcall;
		function Get_AxisTitle(out RHS:AxisTitle):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_CategoryNames(out RHS:OleVariant):HResult;stdcall;
		function Set_CategoryNames(RHS:OleVariant):HResult;stdcall;
		function Get_Crosses(out RHS:XlAxisCrosses):HResult;stdcall;
		function Set_Crosses(RHS:XlAxisCrosses):HResult;stdcall;
		function Get_CrossesAt(out RHS:Double):HResult;stdcall;
		function Set_CrossesAt(RHS:Double):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_HasMajorGridlines(out RHS:WordBool):HResult;stdcall;
		function Set_HasMajorGridlines(RHS:WordBool):HResult;stdcall;
		function Get_HasMinorGridlines(out RHS:WordBool):HResult;stdcall;
		function Set_HasMinorGridlines(RHS:WordBool):HResult;stdcall;
		function Get_HasTitle(out RHS:WordBool):HResult;stdcall;
		function Set_HasTitle(RHS:WordBool):HResult;stdcall;
		function Get_MajorGridlines(out RHS:Gridlines):HResult;stdcall;
		function Get_MajorTickMark(out RHS:XlTickMark):HResult;stdcall;
		function Set_MajorTickMark(RHS:XlTickMark):HResult;stdcall;
		function Get_MajorUnit(out RHS:Double):HResult;stdcall;
		function Set_MajorUnit(RHS:Double):HResult;stdcall;
		function Get_MajorUnitIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_MajorUnitIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_MaximumScale(out RHS:Double):HResult;stdcall;
		function Set_MaximumScale(RHS:Double):HResult;stdcall;
		function Get_MaximumScaleIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_MaximumScaleIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_MinimumScale(out RHS:Double):HResult;stdcall;
		function Set_MinimumScale(RHS:Double):HResult;stdcall;
		function Get_MinimumScaleIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_MinimumScaleIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_MinorGridlines(out RHS:Gridlines):HResult;stdcall;
		function Get_MinorTickMark(out RHS:XlTickMark):HResult;stdcall;
		function Set_MinorTickMark(RHS:XlTickMark):HResult;stdcall;
		function Get_MinorUnit(out RHS:Double):HResult;stdcall;
		function Set_MinorUnit(RHS:Double):HResult;stdcall;
		function Get_MinorUnitIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_MinorUnitIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_ReversePlotOrder(out RHS:WordBool):HResult;stdcall;
		function Set_ReversePlotOrder(RHS:WordBool):HResult;stdcall;
		function Get_ScaleType(out RHS:XlScaleType):HResult;stdcall;
		function Set_ScaleType(RHS:XlScaleType):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_TickLabelPosition(out RHS:XlTickLabelPosition):HResult;stdcall;
		function Set_TickLabelPosition(RHS:XlTickLabelPosition):HResult;stdcall;
		function Get_TickLabels(out RHS:TickLabels):HResult;stdcall;
		function Get_TickLabelSpacing(out RHS:Integer):HResult;stdcall;
		function Set_TickLabelSpacing(RHS:Integer):HResult;stdcall;
		function Get_TickMarkSpacing(out RHS:Integer):HResult;stdcall;
		function Set_TickMarkSpacing(RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:XlAxisType):HResult;stdcall;
		function Set_type_(RHS:XlAxisType):HResult;stdcall;
		function Get_BaseUnit(out RHS:XlTimeUnit):HResult;stdcall;
		function Set_BaseUnit(RHS:XlTimeUnit):HResult;stdcall;
		function Get_BaseUnitIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_BaseUnitIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_MajorUnitScale(out RHS:XlTimeUnit):HResult;stdcall;
		function Set_MajorUnitScale(RHS:XlTimeUnit):HResult;stdcall;
		function Get_MinorUnitScale(out RHS:XlTimeUnit):HResult;stdcall;
		function Set_MinorUnitScale(RHS:XlTimeUnit):HResult;stdcall;
		function Get_CategoryType(out RHS:XlCategoryType):HResult;stdcall;
		function Set_CategoryType(RHS:XlCategoryType):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_DisplayUnit(out RHS:XlDisplayUnit):HResult;stdcall;
		function Set_DisplayUnit(RHS:XlDisplayUnit):HResult;stdcall;
		function Get_DisplayUnitCustom(out RHS:Double):HResult;stdcall;
		function Set_DisplayUnitCustom(RHS:Double):HResult;stdcall;
		function Get_HasDisplayUnitLabel(out RHS:WordBool):HResult;stdcall;
		function Set_HasDisplayUnitLabel(RHS:WordBool):HResult;stdcall;
		function Get_DisplayUnitLabel(out RHS:DisplayUnitLabel):HResult;stdcall;
		function Get_LogBase(out RHS:Double):HResult;stdcall;
		function Set_LogBase(RHS:Double):HResult;stdcall;
		function Get_TickLabelSpacingIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_TickLabelSpacingIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_CategorySortOrder(out RHS:XlCategorySortOrder):HResult;stdcall;
		function Set_CategorySortOrder(RHS:XlCategorySortOrder):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartTitle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020849-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartTitle=interface(IDispatch)
		['{00020849-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_IncludeInLayout(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeInLayout(RHS:WordBool):HResult;stdcall;
		function Get_Position(out RHS:XlChartElementPosition):HResult;stdcall;
		function Set_Position(RHS:XlChartElementPosition):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1(const RHS:WideString):HResult;stdcall;
		function Get_FormulaLocal(out RHS:WideString):HResult;stdcall;
		function Set_FormulaLocal(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1Local(const RHS:WideString):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAxisTitle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002084A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAxisTitle=interface(IDispatch)
		['{0002084A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_IncludeInLayout(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeInLayout(RHS:WordBool):HResult;stdcall;
		function Get_Position(out RHS:XlChartElementPosition):HResult;stdcall;
		function Set_Position(RHS:XlChartElementPosition):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1(const RHS:WideString):HResult;stdcall;
		function Get_FormulaLocal(out RHS:WideString):HResult;stdcall;
		function Set_FormulaLocal(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1Local(const RHS:WideString):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartGroup
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020859-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartGroup=interface(IDispatch)
		['{00020859-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AxisGroup(out RHS:XlAxisGroup):HResult;stdcall;
		function Set_AxisGroup(RHS:XlAxisGroup):HResult;stdcall;
		function Get_DoughnutHoleSize(out RHS:Integer):HResult;stdcall;
		function Set_DoughnutHoleSize(RHS:Integer):HResult;stdcall;
		function Get_DownBars(out RHS:DownBars):HResult;stdcall;
		function Get_DropLines(out RHS:DropLines):HResult;stdcall;
		function Get_FirstSliceAngle(out RHS:Integer):HResult;stdcall;
		function Set_FirstSliceAngle(RHS:Integer):HResult;stdcall;
		function Get_GapWidth(out RHS:Integer):HResult;stdcall;
		function Set_GapWidth(RHS:Integer):HResult;stdcall;
		function Get_HasDropLines(out RHS:WordBool):HResult;stdcall;
		function Set_HasDropLines(RHS:WordBool):HResult;stdcall;
		function Get_HasHiLoLines(out RHS:WordBool):HResult;stdcall;
		function Set_HasHiLoLines(RHS:WordBool):HResult;stdcall;
		function Get_HasRadarAxisLabels(out RHS:WordBool):HResult;stdcall;
		function Set_HasRadarAxisLabels(RHS:WordBool):HResult;stdcall;
		function Get_HasSeriesLines(out RHS:WordBool):HResult;stdcall;
		function Set_HasSeriesLines(RHS:WordBool):HResult;stdcall;
		function Get_HasUpDownBars(out RHS:WordBool):HResult;stdcall;
		function Set_HasUpDownBars(RHS:WordBool):HResult;stdcall;
		function Get_HiLoLines(out RHS:HiLoLines):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Overlap(out RHS:Integer):HResult;stdcall;
		function Set_Overlap(RHS:Integer):HResult;stdcall;
		function Get_RadarAxisLabels(out RHS:TickLabels):HResult;stdcall;
		function SeriesCollection(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_SeriesLines(out RHS:SeriesLines):HResult;stdcall;
		function Get_SubType(out RHS:Integer):HResult;stdcall;
		function Set_SubType(RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Set_type_(RHS:Integer):HResult;stdcall;
		function Get_UpBars(out RHS:UpBars):HResult;stdcall;
		function Get_VaryByCategories(out RHS:WordBool):HResult;stdcall;
		function Set_VaryByCategories(RHS:WordBool):HResult;stdcall;
		function Get_SizeRepresents(out RHS:XlSizeRepresents):HResult;stdcall;
		function Set_SizeRepresents(RHS:XlSizeRepresents):HResult;stdcall;
		function Get_BubbleScale(out RHS:Integer):HResult;stdcall;
		function Set_BubbleScale(RHS:Integer):HResult;stdcall;
		function Get_ShowNegativeBubbles(out RHS:WordBool):HResult;stdcall;
		function Set_ShowNegativeBubbles(RHS:WordBool):HResult;stdcall;
		function Get_SplitType(out RHS:XlChartSplitType):HResult;stdcall;
		function Set_SplitType(RHS:XlChartSplitType):HResult;stdcall;
		function Get_SplitValue(out RHS:OleVariant):HResult;stdcall;
		function Set_SplitValue(RHS:OleVariant):HResult;stdcall;
		function Get_SecondPlotSize(out RHS:Integer):HResult;stdcall;
		function Set_SecondPlotSize(RHS:Integer):HResult;stdcall;
		function Get_Has3DShading(out RHS:WordBool):HResult;stdcall;
		function Set_Has3DShading(RHS:WordBool):HResult;stdcall;
		function FullCategoryCollection(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function CategoryCollection(Index:OleVariant;lcid:Integer;out RHS:IDispatch):HResult;stdcall;
		function Get_BinsType(out RHS:XlBinsType):HResult;stdcall;
		function Set_BinsType(RHS:XlBinsType):HResult;stdcall;
		function Get_BinWidthValue(out RHS:Double):HResult;stdcall;
		function Set_BinWidthValue(RHS:Double):HResult;stdcall;
		function Get_BinsCountValue(out RHS:Integer):HResult;stdcall;
		function Set_BinsCountValue(RHS:Integer):HResult;stdcall;
		function Get_BinsOverflowEnabled(out RHS:WordBool):HResult;stdcall;
		function Set_BinsOverflowEnabled(RHS:WordBool):HResult;stdcall;
		function Get_BinsOverflowValue(out RHS:Double):HResult;stdcall;
		function Set_BinsOverflowValue(RHS:Double):HResult;stdcall;
		function Get_BinsUnderflowEnabled(out RHS:WordBool):HResult;stdcall;
		function Set_BinsUnderflowEnabled(RHS:WordBool):HResult;stdcall;
		function Get_BinsUnderflowValue(out RHS:Double):HResult;stdcall;
		function Set_BinsUnderflowValue(RHS:Double):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartGroups
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartGroups=interface(IDispatch)
		['{0002085A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ChartGroup):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAxes=interface(IDispatch)
		['{0002085B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Type_:XlAxisType;AxisGroup:XlAxisGroup;out RHS:Axis):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Type_:XlAxisType;AxisGroup:XlAxisGroup;out RHS:Axis):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPoints
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020869-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPoints=interface(IDispatch)
		['{00020869-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:Point):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:Integer;out RHS:Point):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPoint
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPoint=interface(IDispatch)
		['{0002086A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function Get_DataLabel(out RHS:DataLabel):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Explosion(out RHS:Integer):HResult;stdcall;
		function Set_Explosion(RHS:Integer):HResult;stdcall;
		function Get_HasDataLabel(out RHS:WordBool):HResult;stdcall;
		function Set_HasDataLabel(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_InvertIfNegative(out RHS:WordBool):HResult;stdcall;
		function Set_InvertIfNegative(RHS:WordBool):HResult;stdcall;
		function Get_MarkerBackgroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerBackgroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerBackgroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerBackgroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerForegroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerForegroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerForegroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerForegroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerSize(out RHS:Integer):HResult;stdcall;
		function Set_MarkerSize(RHS:Integer):HResult;stdcall;
		function Get_MarkerStyle(out RHS:XlMarkerStyle):HResult;stdcall;
		function Set_MarkerStyle(RHS:XlMarkerStyle):HResult;stdcall;
		function Paste(out RHS:OleVariant):HResult;stdcall;
		function Get_PictureType(out RHS:XlChartPictureType):HResult;stdcall;
		function Set_PictureType(RHS:XlChartPictureType):HResult;stdcall;
		function Get_PictureUnit(out RHS:Integer):HResult;stdcall;
		function Set_PictureUnit(RHS:Integer):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_ApplyPictToSides(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToSides(RHS:WordBool):HResult;stdcall;
		function Get_ApplyPictToFront(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToFront(RHS:WordBool):HResult;stdcall;
		function Get_ApplyPictToEnd(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToEnd(RHS:WordBool):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_SecondaryPlot(out RHS:WordBool):HResult;stdcall;
		function Set_SecondaryPlot(RHS:WordBool):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_Has3DEffect(out RHS:WordBool):HResult;stdcall;
		function Set_Has3DEffect(RHS:WordBool):HResult;stdcall;
		function Get_PictureUnit2(out RHS:Double):HResult;stdcall;
		function Set_PictureUnit2(RHS:Double):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function PieSliceLocation(loc:XlPieSliceLocation;Index:XlPieSliceIndex;out RHS:Double):HResult;stdcall;
		function Get_IsTotal(out RHS:WordBool):HResult;stdcall;
		function Set_IsTotal(RHS:WordBool):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISeries
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086B-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISeries=interface(IDispatch)
		['{0002086B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			out RHS:OleVariant):HResult;stdcall;
		function Get_AxisGroup(out RHS:XlAxisGroup):HResult;stdcall;
		function Set_AxisGroup(RHS:XlAxisGroup):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function DataLabels(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function ErrorBar(Direction:XlErrorBarDirection;Include:XlErrorBarInclude;Type_:XlErrorBarType;Amount:OleVariant;
			MinusValues:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ErrorBars(out RHS:ErrorBars):HResult;stdcall;
		function Get_Explosion(out RHS:Integer):HResult;stdcall;
		function Set_Explosion(RHS:Integer):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormulaLocal(out RHS:WideString):HResult;stdcall;
		function Set_FormulaLocal(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1Local(const RHS:WideString):HResult;stdcall;
		function Get_HasDataLabels(out RHS:WordBool):HResult;stdcall;
		function Set_HasDataLabels(RHS:WordBool):HResult;stdcall;
		function Get_HasErrorBars(out RHS:WordBool):HResult;stdcall;
		function Set_HasErrorBars(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_InvertIfNegative(out RHS:WordBool):HResult;stdcall;
		function Set_InvertIfNegative(RHS:WordBool):HResult;stdcall;
		function Get_MarkerBackgroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerBackgroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerBackgroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerBackgroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerForegroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerForegroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerForegroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerForegroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerSize(out RHS:Integer):HResult;stdcall;
		function Set_MarkerSize(RHS:Integer):HResult;stdcall;
		function Get_MarkerStyle(out RHS:XlMarkerStyle):HResult;stdcall;
		function Set_MarkerStyle(RHS:XlMarkerStyle):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Paste(out RHS:OleVariant):HResult;stdcall;
		function Get_PictureType(out RHS:XlChartPictureType):HResult;stdcall;
		function Set_PictureType(RHS:XlChartPictureType):HResult;stdcall;
		function Get_PictureUnit(out RHS:Integer):HResult;stdcall;
		function Set_PictureUnit(RHS:Integer):HResult;stdcall;
		function Get_PlotOrder(out RHS:Integer):HResult;stdcall;
		function Set_PlotOrder(RHS:Integer):HResult;stdcall;
		function Points(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Smooth(out RHS:WordBool):HResult;stdcall;
		function Set_Smooth(RHS:WordBool):HResult;stdcall;
		function Trendlines(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Set_type_(RHS:Integer):HResult;stdcall;
		function Get_ChartType(out RHS:XlChartType):HResult;stdcall;
		function Set_ChartType(RHS:XlChartType):HResult;stdcall;
		function ApplyCustomType(ChartType:XlChartType):HResult;stdcall;
		function Get_Values(out RHS:OleVariant):HResult;stdcall;
		function Set_Values(RHS:OleVariant):HResult;stdcall;
		function Get_XValues(out RHS:OleVariant):HResult;stdcall;
		function Set_XValues(RHS:OleVariant):HResult;stdcall;
		function Get_BubbleSizes(out RHS:OleVariant):HResult;stdcall;
		function Set_BubbleSizes(RHS:OleVariant):HResult;stdcall;
		function Get_BarShape(out RHS:XlBarShape):HResult;stdcall;
		function Set_BarShape(RHS:XlBarShape):HResult;stdcall;
		function Get_ApplyPictToSides(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToSides(RHS:WordBool):HResult;stdcall;
		function Get_ApplyPictToFront(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToFront(RHS:WordBool):HResult;stdcall;
		function Get_ApplyPictToEnd(out RHS:WordBool):HResult;stdcall;
		function Set_ApplyPictToEnd(RHS:WordBool):HResult;stdcall;
		function Get_Has3DEffect(out RHS:WordBool):HResult;stdcall;
		function Set_Has3DEffect(RHS:WordBool):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_HasLeaderLines(out RHS:WordBool):HResult;stdcall;
		function Set_HasLeaderLines(RHS:WordBool):HResult;stdcall;
		function Get_LeaderLines(out RHS:LeaderLines):HResult;stdcall;
		function ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_PictureUnit2(out RHS:Double):HResult;stdcall;
		function Set_PictureUnit2(RHS:Double):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_PlotColorIndex(out RHS:Integer):HResult;stdcall;
		function Get_InvertColor(out RHS:Integer):HResult;stdcall;
		function Set_InvertColor(RHS:Integer):HResult;stdcall;
		function Get_InvertColorIndex(out RHS:Integer):HResult;stdcall;
		function Set_InvertColorIndex(RHS:Integer):HResult;stdcall;
		function Get_IsFiltered(out RHS:WordBool):HResult;stdcall;
		function Set_IsFiltered(RHS:WordBool):HResult;stdcall;
		function Get_ParentDataLabelOption(out RHS:XlParentDataLabelOptions):HResult;stdcall;
		function Set_ParentDataLabelOption(RHS:XlParentDataLabelOptions):HResult;stdcall;
		function Get_QuartileCalculationInclusiveMedian(out RHS:WordBool):HResult;stdcall;
		function Set_QuartileCalculationInclusiveMedian(RHS:WordBool):HResult;stdcall;
		function Get_ValueSortOrder(out RHS:XlValueSortOrder):HResult;stdcall;
		function Set_ValueSortOrder(RHS:XlValueSortOrder):HResult;stdcall;
		function Get_GeoProjectionType(out RHS:XlGeoProjectionType):HResult;stdcall;
		function Set_GeoProjectionType(RHS:XlGeoProjectionType):HResult;stdcall;
		function Get_GeoMappingLevel(out RHS:XlGeoMappingLevel):HResult;stdcall;
		function Set_GeoMappingLevel(RHS:XlGeoMappingLevel):HResult;stdcall;
		function Get_RegionLabelOption(out RHS:XlRegionLabelOptions):HResult;stdcall;
		function Set_RegionLabelOption(RHS:XlRegionLabelOptions):HResult;stdcall;
		function Get_SeriesColorGradientStyle(out RHS:XlSeriesColorGradientStyle):HResult;stdcall;
		function Set_SeriesColorGradientStyle(RHS:XlSeriesColorGradientStyle):HResult;stdcall;
		function Get_SeriesColorMinGradientStop(out RHS:ChartSeriesGradientStopData):HResult;stdcall;
		function Get_SeriesColorMidGradientStop(out RHS:ChartSeriesGradientStopData):HResult;stdcall;
		function Get_SeriesColorMaxGradientStop(out RHS:ChartSeriesGradientStopData):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISeriesCollection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086C-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISeriesCollection=interface(IDispatch)
		['{0002086C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Source:OleVariant;Rowcol:XlRowCol;SeriesLabels:OleVariant;CategoryLabels:OleVariant;Replace:OleVariant;
			out RHS:Series):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Extend(Source:OleVariant;Rowcol:OleVariant;CategoryLabels:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Series):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Paste(Rowcol:XlRowCol;SeriesLabels:OleVariant;CategoryLabels:OleVariant;Replace:OleVariant;
			NewSeries:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function NewSeries(out RHS:Series):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Series):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDataLabel
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDataLabel=interface(IDispatch)
		['{000208B2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoText(out RHS:WordBool):HResult;stdcall;
		function Set_AutoText(RHS:WordBool):HResult;stdcall;
		function Get_NumberFormat(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormat(const RHS:WideString):HResult;stdcall;
		function Get_NumberFormatLinked(out RHS:WordBool):HResult;stdcall;
		function Set_NumberFormatLinked(RHS:WordBool):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormatLocal(RHS:OleVariant):HResult;stdcall;
		function Get_ShowLegendKey(out RHS:WordBool):HResult;stdcall;
		function Set_ShowLegendKey(RHS:WordBool):HResult;stdcall;
		function Get_type_(out RHS:OleVariant):HResult;stdcall;
		function Set_type_(RHS:OleVariant):HResult;stdcall;
		function Get_Position(out RHS:XlDataLabelPosition):HResult;stdcall;
		function Set_Position(RHS:XlDataLabelPosition):HResult;stdcall;
		function Get_ShowSeriesName(out RHS:WordBool):HResult;stdcall;
		function Set_ShowSeriesName(RHS:WordBool):HResult;stdcall;
		function Get_ShowCategoryName(out RHS:WordBool):HResult;stdcall;
		function Set_ShowCategoryName(RHS:WordBool):HResult;stdcall;
		function Get_ShowValue(out RHS:WordBool):HResult;stdcall;
		function Set_ShowValue(RHS:WordBool):HResult;stdcall;
		function Get_ShowPercentage(out RHS:WordBool):HResult;stdcall;
		function Set_ShowPercentage(RHS:WordBool):HResult;stdcall;
		function Get_ShowBubbleSize(out RHS:WordBool):HResult;stdcall;
		function Set_ShowBubbleSize(RHS:WordBool):HResult;stdcall;
		function Get_Separator(out RHS:OleVariant):HResult;stdcall;
		function Set_Separator(RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get__Height(out RHS:Double):HResult;stdcall;
		function Get__Width(out RHS:Double):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1(const RHS:WideString):HResult;stdcall;
		function Get_FormulaLocal(out RHS:WideString):HResult;stdcall;
		function Set_FormulaLocal(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1Local(const RHS:WideString):HResult;stdcall;
		function Get_ShowRange(out RHS:WordBool):HResult;stdcall;
		function Set_ShowRange(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDataLabels
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDataLabels=interface(IDispatch)
		['{000208B3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		procedure _Dummy9;stdcall;
		procedure _Dummy10;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy13;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		procedure _Dummy16;stdcall;
		procedure _Dummy17;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_AutoText(out RHS:WordBool):HResult;stdcall;
		function Set_AutoText(RHS:WordBool):HResult;stdcall;
		function Get_NumberFormat(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormat(const RHS:WideString):HResult;stdcall;
		function Get_NumberFormatLinked(out RHS:WordBool):HResult;stdcall;
		function Set_NumberFormatLinked(RHS:WordBool):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormatLocal(RHS:OleVariant):HResult;stdcall;
		function Get_ShowLegendKey(out RHS:WordBool):HResult;stdcall;
		function Set_ShowLegendKey(RHS:WordBool):HResult;stdcall;
		function Get_type_(out RHS:OleVariant):HResult;stdcall;
		function Set_type_(RHS:OleVariant):HResult;stdcall;
		function Get_Position(out RHS:XlDataLabelPosition):HResult;stdcall;
		function Set_Position(RHS:XlDataLabelPosition):HResult;stdcall;
		function Get_ShowSeriesName(out RHS:WordBool):HResult;stdcall;
		function Set_ShowSeriesName(RHS:WordBool):HResult;stdcall;
		function Get_ShowCategoryName(out RHS:WordBool):HResult;stdcall;
		function Set_ShowCategoryName(RHS:WordBool):HResult;stdcall;
		function Get_ShowValue(out RHS:WordBool):HResult;stdcall;
		function Set_ShowValue(RHS:WordBool):HResult;stdcall;
		function Get_ShowPercentage(out RHS:WordBool):HResult;stdcall;
		function Set_ShowPercentage(RHS:WordBool):HResult;stdcall;
		function Get_ShowBubbleSize(out RHS:WordBool):HResult;stdcall;
		function Set_ShowBubbleSize(RHS:WordBool):HResult;stdcall;
		function Get_Separator(out RHS:OleVariant):HResult;stdcall;
		function Set_Separator(RHS:OleVariant):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:DataLabel):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:DataLabel):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Propagate(Index:OleVariant):HResult;stdcall;
		function Get_ShowRange(out RHS:WordBool):HResult;stdcall;
		function Set_ShowRange(RHS:WordBool):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILegendEntry
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208BA-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILegendEntry=interface(IDispatch)
		['{000208BA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_LegendKey(out RHS:LegendKey):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILegendEntries
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208BB-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILegendEntries=interface(IDispatch)
		['{000208BB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:LegendEntry):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:LegendEntry):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILegendKey
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208BC-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILegendKey=interface(IDispatch)
		['{000208BC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_InvertIfNegative(out RHS:WordBool):HResult;stdcall;
		function Set_InvertIfNegative(RHS:WordBool):HResult;stdcall;
		function Get_MarkerBackgroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerBackgroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerBackgroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerBackgroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerForegroundColor(out RHS:Integer):HResult;stdcall;
		function Set_MarkerForegroundColor(RHS:Integer):HResult;stdcall;
		function Get_MarkerForegroundColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_MarkerForegroundColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_MarkerSize(out RHS:Integer):HResult;stdcall;
		function Set_MarkerSize(RHS:Integer):HResult;stdcall;
		function Get_MarkerStyle(out RHS:XlMarkerStyle):HResult;stdcall;
		function Set_MarkerStyle(RHS:XlMarkerStyle):HResult;stdcall;
		function Get_PictureType(out RHS:Integer):HResult;stdcall;
		function Set_PictureType(RHS:Integer):HResult;stdcall;
		function Get_PictureUnit(out RHS:Integer):HResult;stdcall;
		function Set_PictureUnit(RHS:Integer):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Smooth(out RHS:WordBool):HResult;stdcall;
		function Set_Smooth(RHS:WordBool):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_PictureUnit2(out RHS:Double):HResult;stdcall;
		function Set_PictureUnit2(RHS:Double):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITrendlines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208BD-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITrendlines=interface(IDispatch)
		['{000208BD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Type_:XlTrendlineType;Order:OleVariant;Period:OleVariant;Forward:OleVariant;Backward:OleVariant;
			Intercept:OleVariant;DisplayEquation:OleVariant;DisplayRSquared:OleVariant;Name:OleVariant;out RHS:Trendline)
			:HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Trendline):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Trendline):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITrendline
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208BE-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITrendline=interface(IDispatch)
		['{000208BE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Backward(out RHS:Integer):HResult;stdcall;
		function Set_Backward(RHS:Integer):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_DataLabel(out RHS:DataLabel):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_DisplayEquation(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayEquation(RHS:WordBool):HResult;stdcall;
		function Get_DisplayRSquared(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayRSquared(RHS:WordBool):HResult;stdcall;
		function Get_Forward(out RHS:Integer):HResult;stdcall;
		function Set_Forward(RHS:Integer):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Intercept(out RHS:Double):HResult;stdcall;
		function Set_Intercept(RHS:Double):HResult;stdcall;
		function Get_InterceptIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_InterceptIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_NameIsAuto(out RHS:WordBool):HResult;stdcall;
		function Set_NameIsAuto(RHS:WordBool):HResult;stdcall;
		function Get_Order(out RHS:Integer):HResult;stdcall;
		function Set_Order(RHS:Integer):HResult;stdcall;
		function Get_Period(out RHS:Integer):HResult;stdcall;
		function Set_Period(RHS:Integer):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_type_(out RHS:XlTrendlineType):HResult;stdcall;
		function Set_type_(RHS:XlTrendlineType):HResult;stdcall;
		function Get_Backward2(out RHS:Double):HResult;stdcall;
		function Set_Backward2(RHS:Double):HResult;stdcall;
		function Get_Forward2(out RHS:Double):HResult;stdcall;
		function Set_Forward2(RHS:Double):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICorners
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C0-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICorners=interface(IDispatch)
		['{000208C0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISeriesLines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C1-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISeriesLines=interface(IDispatch)
		['{000208C1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHiLoLines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHiLoLines=interface(IDispatch)
		['{000208C2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGridlines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGridlines=interface(IDispatch)
		['{000208C3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDropLines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDropLines=interface(IDispatch)
		['{000208C4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILeaderLines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024437-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILeaderLines=interface(IDispatch)
		['{00024437-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Select:HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IUpBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C5-0001-0000-C000-000000000046}
	// *********************************************************************//
	IUpBars=interface(IDispatch)
		['{000208C5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDownBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C6-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDownBars=interface(IDispatch)
		['{000208C6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFloor
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C7-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFloor=interface(IDispatch)
		['{000208C7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_PictureType(out RHS:OleVariant):HResult;stdcall;
		function Set_PictureType(RHS:OleVariant):HResult;stdcall;
		function Paste:HResult;stdcall;
		function Get_Thickness(out RHS:Integer):HResult;stdcall;
		function Set_Thickness(RHS:Integer):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWalls
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C8-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWalls=interface(IDispatch)
		['{000208C8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_PictureType(out RHS:OleVariant):HResult;stdcall;
		function Set_PictureType(RHS:OleVariant):HResult;stdcall;
		function Paste:HResult;stdcall;
		function Get_PictureUnit(out RHS:OleVariant):HResult;stdcall;
		function Set_PictureUnit(RHS:OleVariant):HResult;stdcall;
		function Get_Thickness(out RHS:Integer):HResult;stdcall;
		function Set_Thickness(RHS:Integer):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITickLabels
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C9-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITickLabels=interface(IDispatch)
		['{000208C9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_NumberFormat(out RHS:WideString):HResult;stdcall;
		function Set_NumberFormat(const RHS:WideString):HResult;stdcall;
		function Get_NumberFormatLinked(out RHS:WordBool):HResult;stdcall;
		function Set_NumberFormatLinked(RHS:WordBool):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormatLocal(RHS:OleVariant):HResult;stdcall;
		function Get_Orientation(out RHS:XlTickLabelOrientation):HResult;stdcall;
		function Set_Orientation(RHS:XlTickLabelOrientation):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_Depth(out RHS:Integer):HResult;stdcall;
		function Get_Offset(out RHS:Integer):HResult;stdcall;
		function Set_Offset(RHS:Integer):HResult;stdcall;
		function Get_Alignment(out RHS:Integer):HResult;stdcall;
		function Set_Alignment(RHS:Integer):HResult;stdcall;
		function Get_MultiLevel(out RHS:WordBool):HResult;stdcall;
		function Set_MultiLevel(RHS:WordBool):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPlotArea
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208CB-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPlotArea=interface(IDispatch)
		['{000208CB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get__InsideLeft(out RHS:Double):HResult;stdcall;
		function Get__InsideTop(out RHS:Double):HResult;stdcall;
		function Get__InsideWidth(out RHS:Double):HResult;stdcall;
		function Get__InsideHeight(out RHS:Double):HResult;stdcall;
		function Get_InsideLeft(out RHS:Double):HResult;stdcall;
		function Set_InsideLeft(RHS:Double):HResult;stdcall;
		function Get_InsideTop(out RHS:Double):HResult;stdcall;
		function Set_InsideTop(RHS:Double):HResult;stdcall;
		function Get_InsideWidth(out RHS:Double):HResult;stdcall;
		function Set_InsideWidth(RHS:Double):HResult;stdcall;
		function Get_InsideHeight(out RHS:Double):HResult;stdcall;
		function Set_InsideHeight(RHS:Double):HResult;stdcall;
		function Get_Position(out RHS:XlChartElementPosition):HResult;stdcall;
		function Set_Position(RHS:XlChartElementPosition):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartArea
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208CC-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartArea=interface(IDispatch)
		['{000208CC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Clear(out RHS:OleVariant):HResult;stdcall;
		function ClearContents(out RHS:OleVariant):HResult;stdcall;
		function Copy(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_RoundedCorners(out RHS:WordBool):HResult;stdcall;
		function Set_RoundedCorners(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILegend
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208CD-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILegend=interface(IDispatch)
		['{000208CD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function LegendEntries(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_Position(out RHS:XlLegendPosition):HResult;stdcall;
		function Set_Position(RHS:XlLegendPosition):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Clear(out RHS:OleVariant):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_IncludeInLayout(out RHS:WordBool):HResult;stdcall;
		function Set_IncludeInLayout(RHS:WordBool):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IErrorBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208CE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IErrorBars=interface(IDispatch)
		['{000208CE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function ClearFormats(out RHS:OleVariant):HResult;stdcall;
		function Get_EndStyle(out RHS:XlEndStyleCap):HResult;stdcall;
		function Set_EndStyle(RHS:XlEndStyleCap):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDataTable
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020843-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDataTable=interface(IDispatch)
		['{00020843-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ShowLegendKey(out RHS:WordBool):HResult;stdcall;
		function Set_ShowLegendKey(RHS:WordBool):HResult;stdcall;
		function Get_HasBorderHorizontal(out RHS:WordBool):HResult;stdcall;
		function Set_HasBorderHorizontal(RHS:WordBool):HResult;stdcall;
		function Get_HasBorderVertical(out RHS:WordBool):HResult;stdcall;
		function Set_HasBorderVertical(RHS:WordBool):HResult;stdcall;
		function Get_HasBorderOutline(out RHS:WordBool):HResult;stdcall;
		function Set_HasBorderOutline(RHS:WordBool):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Select:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPhonetic
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024438-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPhonetic=interface(IDispatch)
		['{00024438-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_CharacterType(out RHS:Integer):HResult;stdcall;
		function Set_CharacterType(RHS:Integer):HResult;stdcall;
		function Get_Alignment(out RHS:Integer):HResult;stdcall;
		function Set_Alignment(RHS:Integer):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IShape
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024439-0001-0000-C000-000000000046}
	// *********************************************************************//
	IShape=interface(IDispatch)
		['{00024439-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Apply:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Duplicate(out RHS:Shape):HResult;stdcall;
		function Flip(FlipCmd:MsoFlipCmd):HResult;stdcall;
		function IncrementLeft(Increment:Single):HResult;stdcall;
		function IncrementRotation(Increment:Single):HResult;stdcall;
		function IncrementTop(Increment:Single):HResult;stdcall;
		function PickUp:HResult;stdcall;
		function RerouteConnections:HResult;stdcall;
		function ScaleHeight(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant):HResult;stdcall;
		function ScaleWidth(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant):HResult;stdcall;
		function Select(Replace:OleVariant):HResult;stdcall;
		function SetShapesDefaultProperties:HResult;stdcall;
		function Ungroup(out RHS:ShapeRange):HResult;stdcall;
		function ZOrder(ZOrderCmd:MsoZOrderCmd):HResult;stdcall;
		function Get_Adjustments(out RHS:Adjustments):HResult;stdcall;
		function Get_TextFrame(out RHS:TextFrame):HResult;stdcall;
		function Get_AutoShapeType(out RHS:MsoAutoShapeType):HResult;stdcall;
		function Set_AutoShapeType(RHS:MsoAutoShapeType):HResult;stdcall;
		function Get_Callout(out RHS:CalloutFormat):HResult;stdcall;
		function Get_ConnectionSiteCount(out RHS:Integer):HResult;stdcall;
		function Get_Connector(out RHS:MsoTriState):HResult;stdcall;
		function Get_ConnectorFormat(out RHS:ConnectorFormat):HResult;stdcall;
		function Get_Fill(out RHS:FillFormat):HResult;stdcall;
		function Get_GroupItems(out RHS:GroupShapes):HResult;stdcall;
		function Get_Height(out RHS:Single):HResult;stdcall;
		function Set_Height(RHS:Single):HResult;stdcall;
		function Get_HorizontalFlip(out RHS:MsoTriState):HResult;stdcall;
		function Get_Left(out RHS:Single):HResult;stdcall;
		function Set_Left(RHS:Single):HResult;stdcall;
		function Get_Line(out RHS:LineFormat):HResult;stdcall;
		function Get_LockAspectRatio(out RHS:MsoTriState):HResult;stdcall;
		function Set_LockAspectRatio(RHS:MsoTriState):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Nodes(out RHS:ShapeNodes):HResult;stdcall;
		function Get_Rotation(out RHS:Single):HResult;stdcall;
		function Set_Rotation(RHS:Single):HResult;stdcall;
		function Get_PictureFormat(out RHS:PictureFormat):HResult;stdcall;
		function Get_Shadow(out RHS:ShadowFormat):HResult;stdcall;
		function Get_TextEffect(out RHS:TextEffectFormat):HResult;stdcall;
		function Get_ThreeD(out RHS:ThreeDFormat):HResult;stdcall;
		function Get_Top(out RHS:Single):HResult;stdcall;
		function Set_Top(RHS:Single):HResult;stdcall;
		function Get_type_(out RHS:MsoShapeType):HResult;stdcall;
		function Get_VerticalFlip(out RHS:MsoTriState):HResult;stdcall;
		function Get_Vertices(out RHS:OleVariant):HResult;stdcall;
		function Get_Visible(out RHS:MsoTriState):HResult;stdcall;
		function Set_Visible(RHS:MsoTriState):HResult;stdcall;
		function Get_Width(out RHS:Single):HResult;stdcall;
		function Set_Width(RHS:Single):HResult;stdcall;
		function Get_ZOrderPosition(out RHS:Integer):HResult;stdcall;
		function Get_Hyperlink(out RHS:Hyperlink):HResult;stdcall;
		function Get_BlackWhiteMode(out RHS:MsoBlackWhiteMode):HResult;stdcall;
		function Set_BlackWhiteMode(RHS:MsoBlackWhiteMode):HResult;stdcall;
		function Get_DrawingObject(out RHS:IDispatch):HResult;stdcall;
		function Get_OnAction(out RHS:WideString):HResult;stdcall;
		function Set_OnAction(const RHS:WideString):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_TopLeftCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_BottomRightCell(out RHS:ExcelRange):HResult;stdcall;
		function Get_Placement(out RHS:XlPlacement):HResult;stdcall;
		function Set_Placement(RHS:XlPlacement):HResult;stdcall;
		function Copy:HResult;stdcall;
		function Cut:HResult;stdcall;
		function CopyPicture(Appearance:OleVariant;Format:OleVariant):HResult;stdcall;
		function Get_ControlFormat(out RHS:ControlFormat):HResult;stdcall;
		function Get_LinkFormat(out RHS:LinkFormat):HResult;stdcall;
		function Get_OLEFormat(out RHS:OLEFormat):HResult;stdcall;
		function Get_FormControlType(out RHS:XlFormControl):HResult;stdcall;
		function Get_AlternativeText(out RHS:WideString):HResult;stdcall;
		function Set_AlternativeText(const RHS:WideString):HResult;stdcall;
		function Get_Script(out RHS:Script):HResult;stdcall;
		function Get_DiagramNode(out RHS:DiagramNode):HResult;stdcall;
		function Get_HasDiagramNode(out RHS:MsoTriState):HResult;stdcall;
		function Get_Diagram(out RHS:Diagram):HResult;stdcall;
		function Get_HasDiagram(out RHS:MsoTriState):HResult;stdcall;
		function Get_Child(out RHS:MsoTriState):HResult;stdcall;
		function Get_ParentGroup(out RHS:Shape):HResult;stdcall;
		function Get_CanvasItems(out RHS:CanvasShapes):HResult;stdcall;
		function Get_ID(out RHS:Integer):HResult;stdcall;
		function CanvasCropLeft(Increment:Single):HResult;stdcall;
		function CanvasCropTop(Increment:Single):HResult;stdcall;
		function CanvasCropRight(Increment:Single):HResult;stdcall;
		function CanvasCropBottom(Increment:Single):HResult;stdcall;
		function Get_Chart(out RHS:ExcelChart):HResult;stdcall;
		function Get_HasChart(out RHS:MsoTriState):HResult;stdcall;
		function Get_TextFrame2(out RHS:TextFrame2):HResult;stdcall;
		function Get_ShapeStyle(out RHS:MsoShapeStyleIndex):HResult;stdcall;
		function Set_ShapeStyle(RHS:MsoShapeStyleIndex):HResult;stdcall;
		function Get_BackgroundStyle(out RHS:MsoBackgroundStyleIndex):HResult;stdcall;
		function Set_BackgroundStyle(RHS:MsoBackgroundStyleIndex):HResult;stdcall;
		function Get_SoftEdge(out RHS:SoftEdgeFormat):HResult;stdcall;
		function Get_Glow(out RHS:GlowFormat):HResult;stdcall;
		function Get_Reflection(out RHS:ReflectionFormat):HResult;stdcall;
		function Get_HasSmartArt(out RHS:MsoTriState):HResult;stdcall;
		function Get_SmartArt(out RHS:SmartArt):HResult;stdcall;
		function Get_Title(out RHS:WideString):HResult;stdcall;
		function Set_Title(const RHS:WideString):HResult;stdcall;
		function Get_GraphicStyle(out RHS:MsoGraphicStyleIndex):HResult;stdcall;
		function Set_GraphicStyle(RHS:MsoGraphicStyleIndex):HResult;stdcall;
		function Get_Model3D(out RHS:Model3DFormat):HResult;stdcall;
		function Get_Decorative(out RHS:MsoTriState):HResult;stdcall;
		function Set_Decorative(RHS:MsoTriState):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IShapes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IShapes=interface(IDispatch)
		['{0002443A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function AddCallout(Type_:MsoCalloutType;Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape)
			:HResult;stdcall;
		function AddConnector(Type_:MsoConnectorType;BeginX:Single;BeginY:Single;EndX:Single;EndY:Single;out RHS:Shape)
			:HResult;stdcall;
		function AddCurve(SafeArrayOfPoints:OleVariant;out RHS:Shape):HResult;stdcall;
		function AddLabel(Orientation:MsoTextOrientation;Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape)
			:HResult;stdcall;
		function AddLine(BeginX:Single;BeginY:Single;EndX:Single;EndY:Single;out RHS:Shape):HResult;stdcall;
		function AddPicture(const Filename:WideString;LinkToFile:MsoTriState;SaveWithDocument:MsoTriState;Left:Single;
			Top:Single;Width:Single;Height:Single;out RHS:Shape):HResult;stdcall;
		function AddPolyline(SafeArrayOfPoints:OleVariant;out RHS:Shape):HResult;stdcall;
		function AddShape(Type_:MsoAutoShapeType;Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape)
			:HResult;stdcall;
		function AddTextEffect(PresetTextEffect:MsoPresetTextEffect;const Text:WideString;const FontName:WideString;
			FontSize:Single;FontBold:MsoTriState;FontItalic:MsoTriState;Left:Single;Top:Single;out RHS:Shape):HResult;stdcall;
		function AddTextbox(Orientation:MsoTextOrientation;Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape)
			:HResult;stdcall;
		function BuildFreeform(EditingType:MsoEditingType;X1:Single;Y1:Single;out RHS:FreeformBuilder):HResult;stdcall;
		function Get_Range(Index:OleVariant;out RHS:ShapeRange):HResult;stdcall;
		function SelectAll:HResult;stdcall;
		function AddFormControl(Type_:XlFormControl;Left:Integer;Top:Integer;Width:Integer;Height:Integer;out RHS:Shape)
			:HResult;stdcall;
		function AddOLEObject(ClassType:OleVariant;Filename:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;
			IconFileName:OleVariant;IconIndex:OleVariant;IconLabel:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant;out RHS:Shape):HResult;stdcall;
		function AddDiagram(Type_:MsoDiagramType;Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape)
			:HResult;stdcall;
		function AddCanvas(Left:Single;Top:Single;Width:Single;Height:Single;out RHS:Shape):HResult;stdcall;
		function AddChart(XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;Height:OleVariant;
			out RHS:Shape):HResult;stdcall;
		function AddSmartArt(const Layout:SmartArtLayout;Left:OleVariant;Top:OleVariant;Width:OleVariant;Height:OleVariant;
			out RHS:Shape):HResult;stdcall;
		function AddChart2(Style:OleVariant;XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant;NewLayout:OleVariant;out RHS:Shape):HResult;stdcall;
		function AddPicture2(const Filename:WideString;LinkToFile:MsoTriState;SaveWithDocument:MsoTriState;Left:Single;
			Top:Single;Width:Single;Height:Single;Compress:MsoPictureCompress;out RHS:Shape):HResult;stdcall;
		function Add3DModel(const Filename:WideString;LinkToFile:OleVariant;SaveWithDocument:OleVariant;Left:OleVariant;
			Top:OleVariant;Width:OleVariant;Height:OleVariant;out RHS:Shape):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IShapeRange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IShapeRange=interface(IDispatch)
		['{0002443B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Align(AlignCmd:MsoAlignCmd;RelativeTo:MsoTriState):HResult;stdcall;
		function Apply:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Distribute(DistributeCmd:MsoDistributeCmd;RelativeTo:MsoTriState):HResult;stdcall;
		function Duplicate(out RHS:ShapeRange):HResult;stdcall;
		function Flip(FlipCmd:MsoFlipCmd):HResult;stdcall;
		function IncrementLeft(Increment:Single):HResult;stdcall;
		function IncrementRotation(Increment:Single):HResult;stdcall;
		function IncrementTop(Increment:Single):HResult;stdcall;
		function Group(out RHS:Shape):HResult;stdcall;
		function PickUp:HResult;stdcall;
		function RerouteConnections:HResult;stdcall;
		function Regroup(out RHS:Shape):HResult;stdcall;
		function ScaleHeight(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant):HResult;stdcall;
		function ScaleWidth(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant):HResult;stdcall;
		function Select(Replace:OleVariant):HResult;stdcall;
		function SetShapesDefaultProperties:HResult;stdcall;
		function Ungroup(out RHS:ShapeRange):HResult;stdcall;
		function ZOrder(ZOrderCmd:MsoZOrderCmd):HResult;stdcall;
		function Get_Adjustments(out RHS:Adjustments):HResult;stdcall;
		function Get_TextFrame(out RHS:TextFrame):HResult;stdcall;
		function Get_AutoShapeType(out RHS:MsoAutoShapeType):HResult;stdcall;
		function Set_AutoShapeType(RHS:MsoAutoShapeType):HResult;stdcall;
		function Get_Callout(out RHS:CalloutFormat):HResult;stdcall;
		function Get_ConnectionSiteCount(out RHS:Integer):HResult;stdcall;
		function Get_Connector(out RHS:MsoTriState):HResult;stdcall;
		function Get_ConnectorFormat(out RHS:ConnectorFormat):HResult;stdcall;
		function Get_Fill(out RHS:FillFormat):HResult;stdcall;
		function Get_GroupItems(out RHS:GroupShapes):HResult;stdcall;
		function Get_Height(out RHS:Single):HResult;stdcall;
		function Set_Height(RHS:Single):HResult;stdcall;
		function Get_HorizontalFlip(out RHS:MsoTriState):HResult;stdcall;
		function Get_Left(out RHS:Single):HResult;stdcall;
		function Set_Left(RHS:Single):HResult;stdcall;
		function Get_Line(out RHS:LineFormat):HResult;stdcall;
		function Get_LockAspectRatio(out RHS:MsoTriState):HResult;stdcall;
		function Set_LockAspectRatio(RHS:MsoTriState):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Nodes(out RHS:ShapeNodes):HResult;stdcall;
		function Get_Rotation(out RHS:Single):HResult;stdcall;
		function Set_Rotation(RHS:Single):HResult;stdcall;
		function Get_PictureFormat(out RHS:PictureFormat):HResult;stdcall;
		function Get_Shadow(out RHS:ShadowFormat):HResult;stdcall;
		function Get_TextEffect(out RHS:TextEffectFormat):HResult;stdcall;
		function Get_ThreeD(out RHS:ThreeDFormat):HResult;stdcall;
		function Get_Top(out RHS:Single):HResult;stdcall;
		function Set_Top(RHS:Single):HResult;stdcall;
		function Get_type_(out RHS:MsoShapeType):HResult;stdcall;
		function Get_VerticalFlip(out RHS:MsoTriState):HResult;stdcall;
		function Get_Vertices(out RHS:OleVariant):HResult;stdcall;
		function Get_Visible(out RHS:MsoTriState):HResult;stdcall;
		function Set_Visible(RHS:MsoTriState):HResult;stdcall;
		function Get_Width(out RHS:Single):HResult;stdcall;
		function Set_Width(RHS:Single):HResult;stdcall;
		function Get_ZOrderPosition(out RHS:Integer):HResult;stdcall;
		function Get_BlackWhiteMode(out RHS:MsoBlackWhiteMode):HResult;stdcall;
		function Set_BlackWhiteMode(RHS:MsoBlackWhiteMode):HResult;stdcall;
		function Get_AlternativeText(out RHS:WideString):HResult;stdcall;
		function Set_AlternativeText(const RHS:WideString):HResult;stdcall;
		function Get_DiagramNode(out RHS:DiagramNode):HResult;stdcall;
		function Get_HasDiagramNode(out RHS:MsoTriState):HResult;stdcall;
		function Get_Diagram(out RHS:Diagram):HResult;stdcall;
		function Get_HasDiagram(out RHS:MsoTriState):HResult;stdcall;
		function Get_Child(out RHS:MsoTriState):HResult;stdcall;
		function Get_ParentGroup(out RHS:Shape):HResult;stdcall;
		function Get_CanvasItems(out RHS:CanvasShapes):HResult;stdcall;
		function Get_ID(out RHS:Integer):HResult;stdcall;
		function CanvasCropLeft(Increment:Single):HResult;stdcall;
		function CanvasCropTop(Increment:Single):HResult;stdcall;
		function CanvasCropRight(Increment:Single):HResult;stdcall;
		function CanvasCropBottom(Increment:Single):HResult;stdcall;
		function Get_Chart(out RHS:ExcelChart):HResult;stdcall;
		function Get_HasChart(out RHS:MsoTriState):HResult;stdcall;
		function Get_TextFrame2(out RHS:TextFrame2):HResult;stdcall;
		function Get_ShapeStyle(out RHS:MsoShapeStyleIndex):HResult;stdcall;
		function Set_ShapeStyle(RHS:MsoShapeStyleIndex):HResult;stdcall;
		function Get_BackgroundStyle(out RHS:MsoBackgroundStyleIndex):HResult;stdcall;
		function Set_BackgroundStyle(RHS:MsoBackgroundStyleIndex):HResult;stdcall;
		function Get_SoftEdge(out RHS:SoftEdgeFormat):HResult;stdcall;
		function Get_Glow(out RHS:GlowFormat):HResult;stdcall;
		function Get_Reflection(out RHS:ReflectionFormat):HResult;stdcall;
		function Get_Title(out RHS:WideString):HResult;stdcall;
		function Set_Title(const RHS:WideString):HResult;stdcall;
		function Get_GraphicStyle(out RHS:MsoGraphicStyleIndex):HResult;stdcall;
		function Set_GraphicStyle(RHS:MsoGraphicStyleIndex):HResult;stdcall;
		function Get_Model3D(out RHS:Model3DFormat):HResult;stdcall;
		function Get_Decorative(out RHS:MsoTriState):HResult;stdcall;
		function Set_Decorative(RHS:MsoTriState):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGroupShapes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGroupShapes=interface(IDispatch)
		['{0002443C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Shape):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Range(Index:OleVariant;out RHS:ShapeRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITextFrame
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443D-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITextFrame=interface(IDispatch)
		['{0002443D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_MarginBottom(out RHS:Single):HResult;stdcall;
		function Set_MarginBottom(RHS:Single):HResult;stdcall;
		function Get_MarginLeft(out RHS:Single):HResult;stdcall;
		function Set_MarginLeft(RHS:Single):HResult;stdcall;
		function Get_MarginRight(out RHS:Single):HResult;stdcall;
		function Set_MarginRight(RHS:Single):HResult;stdcall;
		function Get_MarginTop(out RHS:Single):HResult;stdcall;
		function Set_MarginTop(RHS:Single):HResult;stdcall;
		function Get_Orientation(out RHS:MsoTextOrientation):HResult;stdcall;
		function Set_Orientation(RHS:MsoTextOrientation):HResult;stdcall;
		function Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:XlHAlign):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:XlHAlign):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:XlVAlign):HResult;stdcall;
		function Set_VerticalAlignment(RHS:XlVAlign):HResult;stdcall;
		function Get_AutoSize(out RHS:WordBool):HResult;stdcall;
		function Set_AutoSize(RHS:WordBool):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoMargins(out RHS:WordBool):HResult;stdcall;
		function Set_AutoMargins(RHS:WordBool):HResult;stdcall;
		function Get_VerticalOverflow(out RHS:XlOartVerticalOverflow):HResult;stdcall;
		function Set_VerticalOverflow(RHS:XlOartVerticalOverflow):HResult;stdcall;
		function Get_HorizontalOverflow(out RHS:XlOartHorizontalOverflow):HResult;stdcall;
		function Set_HorizontalOverflow(RHS:XlOartHorizontalOverflow):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IConnectorFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IConnectorFormat=interface(IDispatch)
		['{0002443E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function BeginConnect(const ConnectedShape:Shape;ConnectionSite:Integer):HResult;stdcall;
		function BeginDisconnect:HResult;stdcall;
		function EndConnect(const ConnectedShape:Shape;ConnectionSite:Integer):HResult;stdcall;
		function EndDisconnect:HResult;stdcall;
		function Get_BeginConnected(out RHS:MsoTriState):HResult;stdcall;
		function Get_BeginConnectedShape(out RHS:Shape):HResult;stdcall;
		function Get_BeginConnectionSite(out RHS:Integer):HResult;stdcall;
		function Get_EndConnected(out RHS:MsoTriState):HResult;stdcall;
		function Get_EndConnectedShape(out RHS:Shape):HResult;stdcall;
		function Get_EndConnectionSite(out RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:MsoConnectorType):HResult;stdcall;
		function Set_type_(RHS:MsoConnectorType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFreeformBuilder
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002443F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFreeformBuilder=interface(IDispatch)
		['{0002443F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function AddNodes(SegmentType:MsoSegmentType;EditingType:MsoEditingType;X1:Single;Y1:Single;X2:OleVariant;
			Y2:OleVariant;X3:OleVariant;Y3:OleVariant):HResult;stdcall;
		function ConvertToShape(out RHS:Shape):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IControlFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024440-0001-0000-C000-000000000046}
	// *********************************************************************//
	IControlFormat=interface(IDispatch)
		['{00024440-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function AddItem(const Text:WideString;Index:OleVariant):HResult;stdcall;
		function RemoveAllItems:HResult;stdcall;
		function RemoveItem(Index:Integer;Count:OleVariant):HResult;stdcall;
		function Get_DropDownLines(out RHS:Integer):HResult;stdcall;
		function Set_DropDownLines(RHS:Integer):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_LargeChange(out RHS:Integer):HResult;stdcall;
		function Set_LargeChange(RHS:Integer):HResult;stdcall;
		function Get_LinkedCell(out RHS:WideString):HResult;stdcall;
		function Set_LinkedCell(const RHS:WideString):HResult;stdcall;
		function List(Index:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function Get_ListCount(out RHS:Integer):HResult;stdcall;
		function Set_ListCount(RHS:Integer):HResult;stdcall;
		function Get_ListFillRange(out RHS:WideString):HResult;stdcall;
		function Set_ListFillRange(const RHS:WideString):HResult;stdcall;
		function Get_ListIndex(out RHS:Integer):HResult;stdcall;
		function Set_ListIndex(RHS:Integer):HResult;stdcall;
		function Get_LockedText(out RHS:WordBool):HResult;stdcall;
		function Set_LockedText(RHS:WordBool):HResult;stdcall;
		function Get_Max(out RHS:Integer):HResult;stdcall;
		function Set_Max(RHS:Integer):HResult;stdcall;
		function Get_Min(out RHS:Integer):HResult;stdcall;
		function Set_Min(RHS:Integer):HResult;stdcall;
		function Get_MultiSelect(out RHS:Integer):HResult;stdcall;
		function Set_MultiSelect(RHS:Integer):HResult;stdcall;
		function Get_PrintObject(out RHS:WordBool):HResult;stdcall;
		function Set_PrintObject(RHS:WordBool):HResult;stdcall;
		function Get_SmallChange(out RHS:Integer):HResult;stdcall;
		function Set_SmallChange(RHS:Integer):HResult;stdcall;
		function Get__Default(out RHS:Integer):HResult;stdcall;
		function Set__Default(RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:Integer):HResult;stdcall;
		function Set_Value(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOLEFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024441-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEFormat=interface(IDispatch)
		['{00024441-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Activate:HResult;stdcall;
		function Get_Object_(out RHS:IDispatch):HResult;stdcall;
		function Get_progID(out RHS:WideString):HResult;stdcall;
		function Verb(Verb:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILinkFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024442-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILinkFormat=interface(IDispatch)
		['{00024442-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AutoUpdate(out RHS:WordBool):HResult;stdcall;
		function Set_AutoUpdate(RHS:WordBool):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Update:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPublishObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024443-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPublishObjects=interface(IDispatch)
		['{00024443-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(SourceType:XlSourceType;const Filename:WideString;Sheet:OleVariant;Source:OleVariant;
			HtmlType:OleVariant;DivID:OleVariant;Title:OleVariant;out RHS:PublishObject):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:PublishObject):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PublishObject):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Publish:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: PublishObject
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024444-0000-0000-C000-000000000046}
	// *********************************************************************//
	PublishObject=interface(IDispatch)
		['{00024444-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		procedure Delete;safecall;
		procedure Publish(Create:OleVariant);safecall;
		function Get_DivID:WideString;safecall;
		function Get_Sheet:WideString;safecall;
		function Get_SourceType:XlSourceType;safecall;
		function Get_Source:WideString;safecall;
		function Get_HtmlType:XlHtmlType;safecall;
		procedure Set_HtmlType(RHS:XlHtmlType);safecall;
		function Get_Title:WideString;safecall;
		procedure Set_Title(const RHS:WideString);safecall;
		function Get_Filename:WideString;safecall;
		procedure Set_Filename(const RHS:WideString);safecall;
		function Get_AutoRepublish:WordBool;safecall;
		procedure Set_AutoRepublish(RHS:WordBool);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property DivID:WideString read Get_DivID;
		property Sheet:WideString read Get_Sheet;
		property SourceType:XlSourceType read Get_SourceType;
		property Source:WideString read Get_Source;
		property HtmlType:XlHtmlType read Get_HtmlType write Set_HtmlType;
		property Title:WideString read Get_Title write Set_Title;
		property Filename:WideString read Get_Filename write Set_Filename;
		property AutoRepublish:WordBool read Get_AutoRepublish write Set_AutoRepublish;
	end;

	// *********************************************************************//
	// DispIntf:  PublishObjectDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024444-0000-0000-C000-000000000046}
	// *********************************************************************//
	PublishObjectDisp=dispinterface
		['{00024444-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		procedure Publish(Create:OleVariant);dispid 1895;
		property DivID:WideString readonly dispid 1894;
		property Sheet:WideString readonly dispid 751;
		property SourceType:XlSourceType readonly dispid 685;
		property Source:WideString readonly dispid 222;
		property HtmlType:XlHtmlType dispid 1893;
		property Title:WideString dispid 199;
		property Filename:WideString dispid 1415;
		property AutoRepublish:WordBool dispid 2178;
	end;

	// *********************************************************************//
	// Interface: IOLEDBError
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024445-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEDBError=interface(IDispatch)
		['{00024445-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_SqlState(out RHS:WideString):HResult;stdcall;
		function Get_ErrorString(out RHS:WideString):HResult;stdcall;
		function Get_Native(out RHS:Integer):HResult;stdcall;
		function Get_Number(out RHS:Integer):HResult;stdcall;
		function Get_Stage(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOLEDBErrors
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024446-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEDBErrors=interface(IDispatch)
		['{00024446-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:OLEDBError):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:OLEDBError):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPhonetics
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024447-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPhonetics=interface(IDispatch)
		['{00024447-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Start(out RHS:Integer):HResult;stdcall;
		function Get_Length(out RHS:Integer):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_CharacterType(out RHS:Integer):HResult;stdcall;
		function Set_CharacterType(RHS:Integer):HResult;stdcall;
		function Get_Alignment(out RHS:Integer):HResult;stdcall;
		function Set_Alignment(RHS:Integer):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Item(Index:Integer;out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Add(Start:Integer;Length:Integer;const Text:WideString):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:IDispatch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: DefaultWebOptions
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024448-0000-0000-C000-000000000046}
	// *********************************************************************//
	DefaultWebOptions=interface(IDispatch)
		['{00024448-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_RelyOnCSS:WordBool;safecall;
		procedure Set_RelyOnCSS(RHS:WordBool);safecall;
		function Get_SaveHiddenData:WordBool;safecall;
		procedure Set_SaveHiddenData(RHS:WordBool);safecall;
		function Get_LoadPictures:WordBool;safecall;
		procedure Set_LoadPictures(RHS:WordBool);safecall;
		function Get_OrganizeInFolder:WordBool;safecall;
		procedure Set_OrganizeInFolder(RHS:WordBool);safecall;
		function Get_UpdateLinksOnSave:WordBool;safecall;
		procedure Set_UpdateLinksOnSave(RHS:WordBool);safecall;
		function Get_UseLongFileNames:WordBool;safecall;
		procedure Set_UseLongFileNames(RHS:WordBool);safecall;
		function Get_CheckIfOfficeIsHTMLEditor:WordBool;safecall;
		procedure Set_CheckIfOfficeIsHTMLEditor(RHS:WordBool);safecall;
		function Get_DownloadComponents:WordBool;safecall;
		procedure Set_DownloadComponents(RHS:WordBool);safecall;
		function Get_RelyOnVML:WordBool;safecall;
		procedure Set_RelyOnVML(RHS:WordBool);safecall;
		function Get_AllowPNG:WordBool;safecall;
		procedure Set_AllowPNG(RHS:WordBool);safecall;
		function Get_ScreenSize:MsoScreenSize;safecall;
		procedure Set_ScreenSize(RHS:MsoScreenSize);safecall;
		function Get_PixelsPerInch:Integer;safecall;
		procedure Set_PixelsPerInch(RHS:Integer);safecall;
		function Get_LocationOfComponents:WideString;safecall;
		procedure Set_LocationOfComponents(const RHS:WideString);safecall;
		function Get_Encoding:MsoEncoding;safecall;
		procedure Set_Encoding(RHS:MsoEncoding);safecall;
		function Get_AlwaysSaveInDefaultEncoding:WordBool;safecall;
		procedure Set_AlwaysSaveInDefaultEncoding(RHS:WordBool);safecall;
		function Get_Fonts:WebPageFonts;safecall;
		function Get_FolderSuffix:WideString;safecall;
		function Get_TargetBrowser:MsoTargetBrowser;safecall;
		procedure Set_TargetBrowser(RHS:MsoTargetBrowser);safecall;
		function Get_SaveNewWebPagesAsWebArchives:WordBool;safecall;
		procedure Set_SaveNewWebPagesAsWebArchives(RHS:WordBool);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property RelyOnCSS:WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
		property SaveHiddenData:WordBool read Get_SaveHiddenData write Set_SaveHiddenData;
		property LoadPictures:WordBool read Get_LoadPictures write Set_LoadPictures;
		property OrganizeInFolder:WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
		property UpdateLinksOnSave:WordBool read Get_UpdateLinksOnSave write Set_UpdateLinksOnSave;
		property UseLongFileNames:WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
		property CheckIfOfficeIsHTMLEditor:WordBool read Get_CheckIfOfficeIsHTMLEditor write Set_CheckIfOfficeIsHTMLEditor;
		property DownloadComponents:WordBool read Get_DownloadComponents write Set_DownloadComponents;
		property RelyOnVML:WordBool read Get_RelyOnVML write Set_RelyOnVML;
		property AllowPNG:WordBool read Get_AllowPNG write Set_AllowPNG;
		property ScreenSize:MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
		property PixelsPerInch:Integer read Get_PixelsPerInch write Set_PixelsPerInch;
		property LocationOfComponents:WideString read Get_LocationOfComponents write Set_LocationOfComponents;
		property Encoding:MsoEncoding read Get_Encoding write Set_Encoding;
		property AlwaysSaveInDefaultEncoding:WordBool read Get_AlwaysSaveInDefaultEncoding
			write Set_AlwaysSaveInDefaultEncoding;
		property Fonts:WebPageFonts read Get_Fonts;
		property FolderSuffix:WideString read Get_FolderSuffix;
		property TargetBrowser:MsoTargetBrowser read Get_TargetBrowser write Set_TargetBrowser;
		property SaveNewWebPagesAsWebArchives:WordBool read Get_SaveNewWebPagesAsWebArchives
			write Set_SaveNewWebPagesAsWebArchives;
	end;

	// *********************************************************************//
	// DispIntf:  DefaultWebOptionsDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024448-0000-0000-C000-000000000046}
	// *********************************************************************//
	DefaultWebOptionsDisp=dispinterface
		['{00024448-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property RelyOnCSS:WordBool dispid 1899;
		property SaveHiddenData:WordBool dispid 1900;
		property LoadPictures:WordBool dispid 1901;
		property OrganizeInFolder:WordBool dispid 1902;
		property UpdateLinksOnSave:WordBool dispid 1903;
		property UseLongFileNames:WordBool dispid 1904;
		property CheckIfOfficeIsHTMLEditor:WordBool dispid 1905;
		property DownloadComponents:WordBool dispid 1906;
		property RelyOnVML:WordBool dispid 1907;
		property AllowPNG:WordBool dispid 1908;
		property ScreenSize:MsoScreenSize dispid 1909;
		property PixelsPerInch:Integer dispid 1910;
		property LocationOfComponents:WideString dispid 1911;
		property Encoding:MsoEncoding dispid 1822;
		property AlwaysSaveInDefaultEncoding:WordBool dispid 1912;
		property Fonts:WebPageFonts readonly dispid 1913;
		property FolderSuffix:WideString readonly dispid 1914;
		property TargetBrowser:MsoTargetBrowser dispid 2179;
		property SaveNewWebPagesAsWebArchives:WordBool dispid 2180;
	end;

	// *********************************************************************//
	// Interface: WebOptions
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024449-0000-0000-C000-000000000046}
	// *********************************************************************//
	WebOptions=interface(IDispatch)
		['{00024449-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_RelyOnCSS:WordBool;safecall;
		procedure Set_RelyOnCSS(RHS:WordBool);safecall;
		function Get_OrganizeInFolder:WordBool;safecall;
		procedure Set_OrganizeInFolder(RHS:WordBool);safecall;
		function Get_UseLongFileNames:WordBool;safecall;
		procedure Set_UseLongFileNames(RHS:WordBool);safecall;
		function Get_DownloadComponents:WordBool;safecall;
		procedure Set_DownloadComponents(RHS:WordBool);safecall;
		function Get_RelyOnVML:WordBool;safecall;
		procedure Set_RelyOnVML(RHS:WordBool);safecall;
		function Get_AllowPNG:WordBool;safecall;
		procedure Set_AllowPNG(RHS:WordBool);safecall;
		function Get_ScreenSize:MsoScreenSize;safecall;
		procedure Set_ScreenSize(RHS:MsoScreenSize);safecall;
		function Get_PixelsPerInch:Integer;safecall;
		procedure Set_PixelsPerInch(RHS:Integer);safecall;
		function Get_LocationOfComponents:WideString;safecall;
		procedure Set_LocationOfComponents(const RHS:WideString);safecall;
		function Get_Encoding:MsoEncoding;safecall;
		procedure Set_Encoding(RHS:MsoEncoding);safecall;
		function Get_FolderSuffix:WideString;safecall;
		procedure UseDefaultFolderSuffix;safecall;
		function Get_TargetBrowser:MsoTargetBrowser;safecall;
		procedure Set_TargetBrowser(RHS:MsoTargetBrowser);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property RelyOnCSS:WordBool read Get_RelyOnCSS write Set_RelyOnCSS;
		property OrganizeInFolder:WordBool read Get_OrganizeInFolder write Set_OrganizeInFolder;
		property UseLongFileNames:WordBool read Get_UseLongFileNames write Set_UseLongFileNames;
		property DownloadComponents:WordBool read Get_DownloadComponents write Set_DownloadComponents;
		property RelyOnVML:WordBool read Get_RelyOnVML write Set_RelyOnVML;
		property AllowPNG:WordBool read Get_AllowPNG write Set_AllowPNG;
		property ScreenSize:MsoScreenSize read Get_ScreenSize write Set_ScreenSize;
		property PixelsPerInch:Integer read Get_PixelsPerInch write Set_PixelsPerInch;
		property LocationOfComponents:WideString read Get_LocationOfComponents write Set_LocationOfComponents;
		property Encoding:MsoEncoding read Get_Encoding write Set_Encoding;
		property FolderSuffix:WideString read Get_FolderSuffix;
		property TargetBrowser:MsoTargetBrowser read Get_TargetBrowser write Set_TargetBrowser;
	end;

	// *********************************************************************//
	// DispIntf:  WebOptionsDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {00024449-0000-0000-C000-000000000046}
	// *********************************************************************//
	WebOptionsDisp=dispinterface
		['{00024449-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property RelyOnCSS:WordBool dispid 1899;
		property OrganizeInFolder:WordBool dispid 1902;
		property UseLongFileNames:WordBool dispid 1904;
		property DownloadComponents:WordBool dispid 1906;
		property RelyOnVML:WordBool dispid 1907;
		property AllowPNG:WordBool dispid 1908;
		property ScreenSize:MsoScreenSize dispid 1909;
		property PixelsPerInch:Integer dispid 1910;
		property LocationOfComponents:WideString dispid 1911;
		property Encoding:MsoEncoding dispid 1822;
		property FolderSuffix:WideString readonly dispid 1914;
		procedure UseDefaultFolderSuffix;dispid 1915;
		property TargetBrowser:MsoTargetBrowser dispid 2179;
	end;

	// *********************************************************************//
	// Interface: IPivotLayout
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002444A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotLayout=interface(IDispatch)
		['{0002444A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ColumnFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_DataFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_PageFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_RowFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_HiddenFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_VisibleFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_PivotFields(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_CubeFields(out RHS:CubeFields):HResult;stdcall;
		function Get_PivotCache(out RHS:PivotCache):HResult;stdcall;
		function Get_PivotTable(out RHS:PivotTable):HResult;stdcall;
		function Get_InnerDetail(out RHS:WideString):HResult;stdcall;
		function Set_InnerDetail(const RHS:WideString):HResult;stdcall;
		function AddFields(RowFields:OleVariant;ColumnFields:OleVariant;PageFields:OleVariant;AppendField:OleVariant)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: TreeviewControl
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444B-0000-0000-C000-000000000046}
	// *********************************************************************//
	TreeviewControl=interface(IDispatch)
		['{0002444B-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_Hidden:OleVariant;safecall;
		procedure Set_Hidden(RHS:OleVariant);safecall;
		function Get_Drilled:OleVariant;safecall;
		procedure Set_Drilled(RHS:OleVariant);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property Hidden:OleVariant read Get_Hidden write Set_Hidden;
		property Drilled:OleVariant read Get_Drilled write Set_Drilled;
	end;

	// *********************************************************************//
	// DispIntf:  TreeviewControlDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444B-0000-0000-C000-000000000046}
	// *********************************************************************//
	TreeviewControlDisp=dispinterface
		['{0002444B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Hidden:OleVariant dispid 268;
		property Drilled:OleVariant dispid 1917;
	end;

	// *********************************************************************//
	// Interface: CubeField
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444C-0000-0000-C000-000000000046}
	// *********************************************************************//
	CubeField=interface(IDispatch)
		['{0002444C-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_CubeFieldType:XlCubeFieldType;safecall;
		function Get__Caption:WideString;safecall;
		function Get_Name:WideString;safecall;
		function Get_Value:WideString;safecall;
		function Get_Orientation:XlPivotFieldOrientation;safecall;
		procedure Set_Orientation(RHS:XlPivotFieldOrientation);safecall;
		function Get_Position:Integer;safecall;
		procedure Set_Position(RHS:Integer);safecall;
		function Get_TreeviewControl:TreeviewControl;safecall;
		function Get_DragToColumn:WordBool;safecall;
		procedure Set_DragToColumn(RHS:WordBool);safecall;
		function Get_DragToHide:WordBool;safecall;
		procedure Set_DragToHide(RHS:WordBool);safecall;
		function Get_DragToPage:WordBool;safecall;
		procedure Set_DragToPage(RHS:WordBool);safecall;
		function Get_DragToRow:WordBool;safecall;
		procedure Set_DragToRow(RHS:WordBool);safecall;
		function Get_DragToData:WordBool;safecall;
		procedure Set_DragToData(RHS:WordBool);safecall;
		function Get_HiddenLevels:Integer;safecall;
		procedure Set_HiddenLevels(RHS:Integer);safecall;
		function Get_HasMemberProperties:WordBool;safecall;
		function Get_LayoutForm:XlLayoutFormType;safecall;
		procedure Set_LayoutForm(RHS:XlLayoutFormType);safecall;
		function Get_PivotFields:PivotFields;safecall;
		procedure _AddMemberPropertyField(const Property_:WideString;PropertyOrder:OleVariant);safecall;
		function Get_EnableMultiplePageItems:WordBool;safecall;
		procedure Set_EnableMultiplePageItems(RHS:WordBool);safecall;
		function Get_LayoutSubtotalLocation:XlSubtototalLocationType;safecall;
		procedure Set_LayoutSubtotalLocation(RHS:XlSubtototalLocationType);safecall;
		function Get_ShowInFieldList:WordBool;safecall;
		procedure Set_ShowInFieldList(RHS:WordBool);safecall;
		procedure Delete;safecall;
		procedure AddMemberPropertyField(const Property_:WideString;PropertyOrder:OleVariant;
			PropertyDisplayedIn:OleVariant);safecall;
		function Get_IncludeNewItemsInFilter:WordBool;safecall;
		procedure Set_IncludeNewItemsInFilter(RHS:WordBool);safecall;
		function Get_CubeFieldSubType:XlCubeFieldSubType;safecall;
		function Get_AllItemsVisible:WordBool;safecall;
		procedure ClearManualFilter;safecall;
		procedure CreatePivotFields;safecall;
		function Get_CurrentPageName:WideString;safecall;
		procedure Set_CurrentPageName(const RHS:WideString);safecall;
		function Get_IsDate:WordBool;safecall;
		function Get_Caption:WideString;safecall;
		procedure Set_Caption(const RHS:WideString);safecall;
		function Get_FlattenHierarchies:WordBool;safecall;
		procedure Set_FlattenHierarchies(RHS:WordBool);safecall;
		function Get_HierarchizeDistinct:WordBool;safecall;
		procedure Set_HierarchizeDistinct(RHS:WordBool);safecall;
		procedure AutoGroup(Orientation:OleVariant;Position:OleVariant);safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property CubeFieldType:XlCubeFieldType read Get_CubeFieldType;
		property _Caption:WideString read Get__Caption;
		property Name:WideString read Get_Name;
		property Value:WideString read Get_Value;
		property Orientation:XlPivotFieldOrientation read Get_Orientation write Set_Orientation;
		property Position:Integer read Get_Position write Set_Position;
		property TreeviewControl:TreeviewControl read Get_TreeviewControl;
		property DragToColumn:WordBool read Get_DragToColumn write Set_DragToColumn;
		property DragToHide:WordBool read Get_DragToHide write Set_DragToHide;
		property DragToPage:WordBool read Get_DragToPage write Set_DragToPage;
		property DragToRow:WordBool read Get_DragToRow write Set_DragToRow;
		property DragToData:WordBool read Get_DragToData write Set_DragToData;
		property HiddenLevels:Integer read Get_HiddenLevels write Set_HiddenLevels;
		property HasMemberProperties:WordBool read Get_HasMemberProperties;
		property LayoutForm:XlLayoutFormType read Get_LayoutForm write Set_LayoutForm;
		property PivotFields:PivotFields read Get_PivotFields;
		property EnableMultiplePageItems:WordBool read Get_EnableMultiplePageItems write Set_EnableMultiplePageItems;
		property LayoutSubtotalLocation:XlSubtototalLocationType read Get_LayoutSubtotalLocation
			write Set_LayoutSubtotalLocation;
		property ShowInFieldList:WordBool read Get_ShowInFieldList write Set_ShowInFieldList;
		property IncludeNewItemsInFilter:WordBool read Get_IncludeNewItemsInFilter write Set_IncludeNewItemsInFilter;
		property CubeFieldSubType:XlCubeFieldSubType read Get_CubeFieldSubType;
		property AllItemsVisible:WordBool read Get_AllItemsVisible;
		property CurrentPageName:WideString read Get_CurrentPageName write Set_CurrentPageName;
		property IsDate:WordBool read Get_IsDate;
		property Caption:WideString read Get_Caption write Set_Caption;
		property FlattenHierarchies:WordBool read Get_FlattenHierarchies write Set_FlattenHierarchies;
		property HierarchizeDistinct:WordBool read Get_HierarchizeDistinct write Set_HierarchizeDistinct;
	end;

	// *********************************************************************//
	// DispIntf:  CubeFieldDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444C-0000-0000-C000-000000000046}
	// *********************************************************************//
	CubeFieldDisp=dispinterface
		['{0002444C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property CubeFieldType:XlCubeFieldType readonly dispid 1918;
		property _Caption:WideString readonly dispid 2667;
		property Name:WideString readonly dispid 110;
		property Value:WideString readonly dispid 6;
		property Orientation:XlPivotFieldOrientation dispid 134;
		property Position:Integer dispid 133;
		property TreeviewControl:TreeviewControl readonly dispid 1919;
		property DragToColumn:WordBool dispid 1508;
		property DragToHide:WordBool dispid 1509;
		property DragToPage:WordBool dispid 1510;
		property DragToRow:WordBool dispid 1511;
		property DragToData:WordBool dispid 1844;
		property HiddenLevels:Integer dispid 1920;
		property HasMemberProperties:WordBool readonly dispid 2181;
		property LayoutForm:XlLayoutFormType dispid 1848;
		property PivotFields:PivotFields readonly dispid 718;
		procedure _AddMemberPropertyField(const Property_:WideString;PropertyOrder:OleVariant);dispid 2182;
		property EnableMultiplePageItems:WordBool dispid 2184;
		property LayoutSubtotalLocation:XlSubtototalLocationType dispid 1846;
		property ShowInFieldList:WordBool dispid 2185;
		procedure Delete;dispid 117;
		procedure AddMemberPropertyField(const Property_:WideString;PropertyOrder:OleVariant;
			PropertyDisplayedIn:OleVariant);dispid 2668;
		property IncludeNewItemsInFilter:WordBool dispid 2587;
		property CubeFieldSubType:XlCubeFieldSubType readonly dispid 2670;
		property AllItemsVisible:WordBool readonly dispid 2593;
		procedure ClearManualFilter;dispid 2594;
		procedure CreatePivotFields;dispid 2671;
		property CurrentPageName:WideString dispid 1852;
		property IsDate:WordBool readonly dispid 2672;
		property Caption:WideString dispid 139;
		property FlattenHierarchies:WordBool dispid 2924;
		property HierarchizeDistinct:WordBool dispid 2925;
		procedure AutoGroup(Orientation:OleVariant;Position:OleVariant);dispid 3165;
	end;

	// *********************************************************************//
	// Interface: CubeFields
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444D-0000-0000-C000-000000000046}
	// *********************************************************************//
	CubeFields=interface(IDispatch)
		['{0002444D-0000-0000-C000-000000000046}']
		function Get_Application:ExcelApplication;safecall;
		function Get_Creator:XlCreator;safecall;
		function Get_Parent:IDispatch;safecall;
		function Get_Count:Integer;safecall;
		function Get_Item(Index:OleVariant):CubeField;safecall;
		function Get__Default(Index:OleVariant):CubeField;safecall;
		function Get__NewEnum:IUnknown;safecall;
		function AddSet(const Name:WideString;const Caption:WideString):CubeField;safecall;
		function GetMeasure(AttributeHierarchy:OleVariant;Function_:XlConsolidationFunction;Caption:OleVariant)
			:CubeField;safecall;
		property Application:ExcelApplication read Get_Application;
		property Creator:XlCreator read Get_Creator;
		property Parent:IDispatch read Get_Parent;
		property Count:Integer read Get_Count;
		property Item[Index:OleVariant]:CubeField read Get_Item;
		property _Default[Index:OleVariant]:CubeField read Get__Default;default;
		property _NewEnum:IUnknown read Get__NewEnum;
	end;

	// *********************************************************************//
	// DispIntf:  CubeFieldsDisp
	// Flags:     (4544) Dual NonExtensible OleAutomation Dispatchable
	// GUID:      {0002444D-0000-0000-C000-000000000046}
	// *********************************************************************//
	CubeFieldsDisp=dispinterface
		['{0002444D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:CubeField readonly dispid 170;
		property _Default[Index:OleVariant]:CubeField readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function AddSet(const Name:WideString;const Caption:WideString):CubeField;dispid 2186;
		function GetMeasure(AttributeHierarchy:OleVariant;Function_:XlConsolidationFunction;Caption:OleVariant):CubeField;
			dispid 3089;
	end;

	// *********************************************************************//
	// Interface: IDisplayUnitLabel
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002084C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDisplayUnitLabel=interface(IDispatch)
		['{0002084C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Select(out RHS:OleVariant):HResult;stdcall;
		function Get_Border(out RHS:Border):HResult;stdcall;
		function Delete(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Fill(out RHS:ChartFillFormat):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_Shadow(out RHS:WordBool):HResult;stdcall;
		function Set_Shadow(RHS:WordBool):HResult;stdcall;
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Set_ReadingOrder(RHS:Integer):HResult;stdcall;
		function Get_AutoScaleFont(out RHS:OleVariant):HResult;stdcall;
		function Set_AutoScaleFont(RHS:OleVariant):HResult;stdcall;
		procedure _Dummy21;stdcall;
		function Get_Position(out RHS:XlChartElementPosition):HResult;stdcall;
		function Set_Position(RHS:XlChartElementPosition):HResult;stdcall;
		function Get_Format(out RHS:ChartFormat):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1(const RHS:WideString):HResult;stdcall;
		function Get_FormulaLocal(out RHS:WideString):HResult;stdcall;
		function Set_FormulaLocal(const RHS:WideString):HResult;stdcall;
		function Get_FormulaR1C1Local(out RHS:WideString):HResult;stdcall;
		function Set_FormulaR1C1Local(const RHS:WideString):HResult;stdcall;
		function SetProperty(const ID:WideString;Value:OleVariant):HResult;stdcall;
		function GetProperty(const ID:WideString;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICellFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024450-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICellFormat=interface(IDispatch)
		['{00024450-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function _Set_Borders(const RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function _Set_Font(const RHS:Font):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function _Set_Interior(const RHS:Interior):HResult;stdcall;
		function Get_NumberFormat(lcid:Integer;out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(lcid:Integer;RHS:OleVariant):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormatLocal(RHS:OleVariant):HResult;stdcall;
		function Get_AddIndent(out RHS:OleVariant):HResult;stdcall;
		function Set_AddIndent(RHS:OleVariant):HResult;stdcall;
		function Get_IndentLevel(out RHS:OleVariant):HResult;stdcall;
		function Set_IndentLevel(RHS:OleVariant):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_HorizontalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Set_VerticalAlignment(RHS:OleVariant):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Set_Orientation(RHS:OleVariant):HResult;stdcall;
		function Get_ShrinkToFit(out RHS:OleVariant):HResult;stdcall;
		function Set_ShrinkToFit(RHS:OleVariant):HResult;stdcall;
		function Get_WrapText(out RHS:OleVariant):HResult;stdcall;
		function Set_WrapText(RHS:OleVariant):HResult;stdcall;
		function Get_Locked(out RHS:OleVariant):HResult;stdcall;
		function Set_Locked(RHS:OleVariant):HResult;stdcall;
		function Get_FormulaHidden(out RHS:OleVariant):HResult;stdcall;
		function Set_FormulaHidden(RHS:OleVariant):HResult;stdcall;
		function Get_MergeCells(out RHS:OleVariant):HResult;stdcall;
		function Set_MergeCells(RHS:OleVariant):HResult;stdcall;
		function Clear:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IUsedObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024451-0001-0000-C000-000000000046}
	// *********************************************************************//
	IUsedObjects=interface(IDispatch)
		['{00024451-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICustomProperties
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024452-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICustomProperties=interface(IDispatch)
		['{00024452-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Name:WideString;Value:OleVariant;out RHS:CustomProperty):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:CustomProperty):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:CustomProperty):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICustomProperty
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024453-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICustomProperty=interface(IDispatch)
		['{00024453-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get__Default(out RHS:OleVariant):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICalculatedMembers
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024454-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICalculatedMembers=interface(IDispatch)
		['{00024454-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:CalculatedMember):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:CalculatedMember):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Add(const Name:WideString;const Formula:WideString;SolveOrder:OleVariant;Type_:OleVariant;
			out RHS:CalculatedMember):HResult;stdcall;
		function Add(const Name:WideString;Formula:OleVariant;SolveOrder:OleVariant;Type_:OleVariant;Dynamic:OleVariant;
			DisplayFolder:OleVariant;HierarchizeDistinct:OleVariant;out RHS:CalculatedMember):HResult;stdcall;
		function AddCalculatedMember(const Name:WideString;Formula:OleVariant;SolveOrder:OleVariant;Type_:OleVariant;
			DisplayFolder:OleVariant;MeasureGroup:OleVariant;ParentHierarchy:OleVariant;ParentMember:OleVariant;
			NumberFormat:OleVariant;out RHS:CalculatedMember):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICalculatedMember
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024455-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICalculatedMember=interface(IDispatch)
		['{00024455-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Get_SolveOrder(out RHS:Integer):HResult;stdcall;
		function Get_IsValid(out RHS:WordBool):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_type_(out RHS:XlCalculatedMemberType):HResult;stdcall;
		function Get_Dynamic(out RHS:WordBool):HResult;stdcall;
		function Get_DisplayFolder(out RHS:WideString):HResult;stdcall;
		function Get_HierarchizeDistinct(out RHS:WordBool):HResult;stdcall;
		function Set_HierarchizeDistinct(RHS:WordBool):HResult;stdcall;
		function Get_FlattenHierarchies(out RHS:WordBool):HResult;stdcall;
		function Set_FlattenHierarchies(RHS:WordBool):HResult;stdcall;
		function Get_MeasureGroup(out RHS:WideString):HResult;stdcall;
		function Get_ParentHierarchy(out RHS:WideString):HResult;stdcall;
		function Get_ParentMember(out RHS:WideString):HResult;stdcall;
		function Get_NumberFormat(out RHS:XlCalcMemNumberFormatType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWatches
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024456-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWatches=interface(IDispatch)
		['{00024456-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Source:OleVariant;out RHS:Watch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Watch):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Watch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWatch
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024457-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWatch=interface(IDispatch)
		['{00024457-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Source(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotCell
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024458-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotCell=interface(IDispatch)
		['{00024458-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_PivotCellType(out RHS:XlPivotCellType):HResult;stdcall;
		function Get_PivotTable(out RHS:PivotTable):HResult;stdcall;
		function Get_DataField(out RHS:PivotField):HResult;stdcall;
		function Get_PivotField(out RHS:PivotField):HResult;stdcall;
		function Get_PivotItem(out RHS:PivotItem):HResult;stdcall;
		function Get_RowItems(out RHS:PivotItemList):HResult;stdcall;
		function Get_ColumnItems(out RHS:PivotItemList):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Get_Dummy18(out RHS:WideString):HResult;stdcall;
		function Get_CustomSubtotalFunction(out RHS:XlConsolidationFunction):HResult;stdcall;
		function Get_PivotRowLine(out RHS:PivotLine):HResult;stdcall;
		function Get_PivotColumnLine(out RHS:PivotLine):HResult;stdcall;
		function AllocateChange:HResult;stdcall;
		function DiscardChange:HResult;stdcall;
		function Get_DataSourceValue(out RHS:OleVariant):HResult;stdcall;
		function Get_CellChanged(out RHS:XlCellChangedState):HResult;stdcall;
		function Get_MDX(out RHS:WideString):HResult;stdcall;
		function Get_ServerActions(out RHS:Actions):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IGraphic
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024459-0001-0000-C000-000000000046}
	// *********************************************************************//
	IGraphic=interface(IDispatch)
		['{00024459-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Brightness(out RHS:Single):HResult;stdcall;
		function Set_Brightness(RHS:Single):HResult;stdcall;
		function Get_ColorType(out RHS:MsoPictureColorType):HResult;stdcall;
		function Set_ColorType(RHS:MsoPictureColorType):HResult;stdcall;
		function Get_Contrast(out RHS:Single):HResult;stdcall;
		function Set_Contrast(RHS:Single):HResult;stdcall;
		function Get_CropBottom(out RHS:Single):HResult;stdcall;
		function Set_CropBottom(RHS:Single):HResult;stdcall;
		function Get_CropLeft(out RHS:Single):HResult;stdcall;
		function Set_CropLeft(RHS:Single):HResult;stdcall;
		function Get_CropRight(out RHS:Single):HResult;stdcall;
		function Set_CropRight(RHS:Single):HResult;stdcall;
		function Get_CropTop(out RHS:Single):HResult;stdcall;
		function Set_CropTop(RHS:Single):HResult;stdcall;
		function Get_Filename(out RHS:WideString):HResult;stdcall;
		function Set_Filename(const RHS:WideString):HResult;stdcall;
		function Get_Height(out RHS:Single):HResult;stdcall;
		function Set_Height(RHS:Single):HResult;stdcall;
		function Get_LockAspectRatio(out RHS:MsoTriState):HResult;stdcall;
		function Set_LockAspectRatio(RHS:MsoTriState):HResult;stdcall;
		function Get_Width(out RHS:Single):HResult;stdcall;
		function Set_Width(RHS:Single):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAutoRecover
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAutoRecover=interface(IDispatch)
		['{0002445A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_Time(out RHS:Integer):HResult;stdcall;
		function Set_Time(RHS:Integer):HResult;stdcall;
		function Get_Path(out RHS:WideString):HResult;stdcall;
		function Set_Path(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IErrorCheckingOptions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IErrorCheckingOptions=interface(IDispatch)
		['{0002445B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BackgroundChecking(out RHS:WordBool):HResult;stdcall;
		function Set_BackgroundChecking(RHS:WordBool):HResult;stdcall;
		function Get_IndicatorColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_IndicatorColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_EvaluateToError(out RHS:WordBool):HResult;stdcall;
		function Set_EvaluateToError(RHS:WordBool):HResult;stdcall;
		function Get_TextDate(out RHS:WordBool):HResult;stdcall;
		function Set_TextDate(RHS:WordBool):HResult;stdcall;
		function Get_NumberAsText(out RHS:WordBool):HResult;stdcall;
		function Set_NumberAsText(RHS:WordBool):HResult;stdcall;
		function Get_InconsistentFormula(out RHS:WordBool):HResult;stdcall;
		function Set_InconsistentFormula(RHS:WordBool):HResult;stdcall;
		function Get_OmittedCells(out RHS:WordBool):HResult;stdcall;
		function Set_OmittedCells(RHS:WordBool):HResult;stdcall;
		function Get_UnlockedFormulaCells(out RHS:WordBool):HResult;stdcall;
		function Set_UnlockedFormulaCells(RHS:WordBool):HResult;stdcall;
		function Get_EmptyCellReferences(out RHS:WordBool):HResult;stdcall;
		function Set_EmptyCellReferences(RHS:WordBool):HResult;stdcall;
		function Get_ListDataValidation(out RHS:WordBool):HResult;stdcall;
		function Set_ListDataValidation(RHS:WordBool):HResult;stdcall;
		function Get_InconsistentTableFormula(out RHS:WordBool):HResult;stdcall;
		function Set_InconsistentTableFormula(RHS:WordBool):HResult;stdcall;
		function Get_MisleadingNumberFormats(out RHS:WordBool):HResult;stdcall;
		function Set_MisleadingNumberFormats(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IErrors
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IErrors=interface(IDispatch)
		['{0002445C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Error):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Error):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IError
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IError=interface(IDispatch)
		['{0002445D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Value(out RHS:WordBool):HResult;stdcall;
		function Get_Ignore(out RHS:WordBool):HResult;stdcall;
		function Set_Ignore(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTagAction
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445E-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTagAction=interface(IDispatch)
		['{0002445E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Execute:HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:XlSmartTagControlType):HResult;stdcall;
		function Get_PresentInPane(out RHS:WordBool):HResult;stdcall;
		function Get_ExpandHelp(out RHS:WordBool):HResult;stdcall;
		function Set_ExpandHelp(RHS:WordBool):HResult;stdcall;
		function Get_CheckboxState(out RHS:WordBool):HResult;stdcall;
		function Set_CheckboxState(RHS:WordBool):HResult;stdcall;
		function Get_TextboxText(out RHS:WideString):HResult;stdcall;
		function Set_TextboxText(const RHS:WideString):HResult;stdcall;
		function Get_ListSelection(out RHS:Integer):HResult;stdcall;
		function Set_ListSelection(RHS:Integer):HResult;stdcall;
		function Get_RadioGroupSelection(out RHS:Integer):HResult;stdcall;
		function Set_RadioGroupSelection(RHS:Integer):HResult;stdcall;
		function Get_ActiveXControl(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTagActions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445F-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTagActions=interface(IDispatch)
		['{0002445F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SmartTagAction):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SmartTagAction):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTag
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024460-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTag=interface(IDispatch)
		['{00024460-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_DownloadURL(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_XML(out RHS:WideString):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_SmartTagActions(out RHS:SmartTagActions):HResult;stdcall;
		function Get_Properties(out RHS:CustomProperties):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTags
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024461-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTags=interface(IDispatch)
		['{00024461-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const SmartTagType:WideString;out RHS:SmartTag):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SmartTag):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTagRecognizer
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024462-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTagRecognizer=interface(IDispatch)
		['{00024462-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_progID(out RHS:WideString):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_FullName(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTagRecognizers
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024463-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTagRecognizers=interface(IDispatch)
		['{00024463-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SmartTagRecognizer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SmartTagRecognizer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Recognize(out RHS:WordBool):HResult;stdcall;
		function Set_Recognize(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISmartTagOptions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024464-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISmartTagOptions=interface(IDispatch)
		['{00024464-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_DisplaySmartTags(out RHS:XlSmartTagDisplayMode):HResult;stdcall;
		function Set_DisplaySmartTags(RHS:XlSmartTagDisplayMode):HResult;stdcall;
		function Get_EmbedSmartTags(out RHS:WordBool):HResult;stdcall;
		function Set_EmbedSmartTags(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISpellingOptions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024465-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISpellingOptions=interface(IDispatch)
		['{00024465-0001-0000-C000-000000000046}']
		function Get_DictLang(out RHS:Integer):HResult;stdcall;
		function Set_DictLang(RHS:Integer):HResult;stdcall;
		function Get_UserDict(out RHS:WideString):HResult;stdcall;
		function Set_UserDict(const RHS:WideString):HResult;stdcall;
		function Get_IgnoreCaps(out RHS:WordBool):HResult;stdcall;
		function Set_IgnoreCaps(RHS:WordBool):HResult;stdcall;
		function Get_SuggestMainOnly(out RHS:WordBool):HResult;stdcall;
		function Set_SuggestMainOnly(RHS:WordBool):HResult;stdcall;
		function Get_IgnoreMixedDigits(out RHS:WordBool):HResult;stdcall;
		function Set_IgnoreMixedDigits(RHS:WordBool):HResult;stdcall;
		function Get_IgnoreFileNames(out RHS:WordBool):HResult;stdcall;
		function Set_IgnoreFileNames(RHS:WordBool):HResult;stdcall;
		function Get_GermanPostReform(out RHS:WordBool):HResult;stdcall;
		function Set_GermanPostReform(RHS:WordBool):HResult;stdcall;
		function Get_KoreanCombineAux(out RHS:WordBool):HResult;stdcall;
		function Set_KoreanCombineAux(RHS:WordBool):HResult;stdcall;
		function Get_KoreanUseAutoChangeList(out RHS:WordBool):HResult;stdcall;
		function Set_KoreanUseAutoChangeList(RHS:WordBool):HResult;stdcall;
		function Get_KoreanProcessCompound(out RHS:WordBool):HResult;stdcall;
		function Set_KoreanProcessCompound(RHS:WordBool):HResult;stdcall;
		function Get_HebrewModes(out RHS:XlHebrewModes):HResult;stdcall;
		function Set_HebrewModes(RHS:XlHebrewModes):HResult;stdcall;
		function Get_ArabicModes(out RHS:XlArabicModes):HResult;stdcall;
		function Set_ArabicModes(RHS:XlArabicModes):HResult;stdcall;
		function Get_ArabicStrictAlefHamza(out RHS:WordBool):HResult;stdcall;
		function Set_ArabicStrictAlefHamza(RHS:WordBool):HResult;stdcall;
		function Get_ArabicStrictFinalYaa(out RHS:WordBool):HResult;stdcall;
		function Set_ArabicStrictFinalYaa(RHS:WordBool):HResult;stdcall;
		function Get_ArabicStrictTaaMarboota(out RHS:WordBool):HResult;stdcall;
		function Set_ArabicStrictTaaMarboota(RHS:WordBool):HResult;stdcall;
		function Get_RussianStrictE(out RHS:WordBool):HResult;stdcall;
		function Set_RussianStrictE(RHS:WordBool):HResult;stdcall;
		function Get_SpanishModes(out RHS:XlSpanishModes):HResult;stdcall;
		function Set_SpanishModes(RHS:XlSpanishModes):HResult;stdcall;
		function Get_PortugalReform(out RHS:XlPortugueseReform):HResult;stdcall;
		function Set_PortugalReform(RHS:XlPortugueseReform):HResult;stdcall;
		function Get_BrazilReform(out RHS:XlPortugueseReform):HResult;stdcall;
		function Set_BrazilReform(RHS:XlPortugueseReform):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISpeech
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024466-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISpeech=interface(IDispatch)
		['{00024466-0001-0000-C000-000000000046}']
		function Speak(const Text:WideString;SpeakAsync:OleVariant;SpeakXML:OleVariant;Purge:OleVariant):HResult;stdcall;
		function Get_Direction(out RHS:XlSpeakDirection):HResult;stdcall;
		function Set_Direction(RHS:XlSpeakDirection):HResult;stdcall;
		function Get_SpeakCellOnEnter(out RHS:WordBool):HResult;stdcall;
		function Set_SpeakCellOnEnter(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IProtection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024467-0001-0000-C000-000000000046}
	// *********************************************************************//
	IProtection=interface(IDispatch)
		['{00024467-0001-0000-C000-000000000046}']
		function Get_AllowFormattingCells(out RHS:WordBool):HResult;stdcall;
		function Get_AllowFormattingColumns(out RHS:WordBool):HResult;stdcall;
		function Get_AllowFormattingRows(out RHS:WordBool):HResult;stdcall;
		function Get_AllowInsertingColumns(out RHS:WordBool):HResult;stdcall;
		function Get_AllowInsertingRows(out RHS:WordBool):HResult;stdcall;
		function Get_AllowInsertingHyperlinks(out RHS:WordBool):HResult;stdcall;
		function Get_AllowDeletingColumns(out RHS:WordBool):HResult;stdcall;
		function Get_AllowDeletingRows(out RHS:WordBool):HResult;stdcall;
		function Get_AllowSorting(out RHS:WordBool):HResult;stdcall;
		function Get_AllowFiltering(out RHS:WordBool):HResult;stdcall;
		function Get_AllowUsingPivotTables(out RHS:WordBool):HResult;stdcall;
		function Get_AllowEditRanges(out RHS:AllowEditRanges):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotItemList
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024468-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotItemList=interface(IDispatch)
		['{00024468-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:PivotItem):HResult;stdcall;
		function Get__Default(Field:OleVariant;out RHS:PivotItem):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITab
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024469-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITab=interface(IDispatch)
		['{00024469-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_ColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_ThemeColor(out RHS:XlThemeColor):HResult;stdcall;
		function Set_ThemeColor(RHS:XlThemeColor):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAllowEditRanges
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAllowEditRanges=interface(IDispatch)
		['{0002446A-0001-0000-C000-000000000046}']
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:AllowEditRange):HResult;stdcall;
		function Add(const Title:WideString;const Range:ExcelRange;Password:OleVariant;out RHS:AllowEditRange)
			:HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:AllowEditRange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAllowEditRange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAllowEditRange=interface(IDispatch)
		['{0002446B-0001-0000-C000-000000000046}']
		function Get_Title(out RHS:WideString):HResult;stdcall;
		function Set_Title(const RHS:WideString):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function _Set_Range(const RHS:ExcelRange):HResult;stdcall;
		function ChangePassword(const Password:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Unprotect(Password:OleVariant):HResult;stdcall;
		function Get_Users(out RHS:UserAccessList):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IUserAccessList
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IUserAccessList=interface(IDispatch)
		['{0002446C-0001-0000-C000-000000000046}']
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:UserAccess):HResult;stdcall;
		function Add(const Name:WideString;AllowEdit:WordBool;out RHS:UserAccess):HResult;stdcall;
		function DeleteAll:HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:UserAccess):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IUserAccess
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IUserAccess=interface(IDispatch)
		['{0002446D-0001-0000-C000-000000000046}']
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_AllowEdit(out RHS:WordBool):HResult;stdcall;
		function Set_AllowEdit(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRTD
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRTD=interface(IDispatch)
		['{0002446E-0001-0000-C000-000000000046}']
		function Get_ThrottleInterval(out RHS:Integer):HResult;stdcall;
		function Set_ThrottleInterval(RHS:Integer):HResult;stdcall;
		function RefreshData:HResult;stdcall;
		function RestartServers:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDiagram
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDiagram=interface(IDispatch)
		['{0002446F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Nodes(out RHS:DiagramNodes):HResult;stdcall;
		function Get_type_(out RHS:MsoDiagramType):HResult;stdcall;
		function Get_AutoLayout(out RHS:MsoTriState):HResult;stdcall;
		function Set_AutoLayout(RHS:MsoTriState):HResult;stdcall;
		function Get_Reverse(out RHS:MsoTriState):HResult;stdcall;
		function Set_Reverse(RHS:MsoTriState):HResult;stdcall;
		function Get_AutoFormat(out RHS:MsoTriState):HResult;stdcall;
		function Set_AutoFormat(RHS:MsoTriState):HResult;stdcall;
		function Convert(Type_:MsoDiagramType):HResult;stdcall;
		function FitText:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024470-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListObjects=interface(IDispatch)
		['{00024470-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _Add(SourceType:XlListObjectSourceType;Source:OleVariant;LinkSource:OleVariant;
			XlListObjectHasHeaders:XlYesNoGuess;Destination:OleVariant;out RHS:ListObject):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ListObject):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ListObject):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(SourceType:XlListObjectSourceType;Source:OleVariant;LinkSource:OleVariant;
			XlListObjectHasHeaders:XlYesNoGuess;Destination:OleVariant;TableStyleName:OleVariant;out RHS:ListObject)
			:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024471-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListObject=interface(IDispatch)
		['{00024471-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Publish(Target:OleVariant;LinkSource:WordBool;out RHS:WideString):HResult;stdcall;
		function Refresh:HResult;stdcall;
		function Unlink:HResult;stdcall;
		function Unlist:HResult;stdcall;
		function UpdateChanges(iConflictType:XlListConflict):HResult;stdcall;
		function Resize(const Range:ExcelRange):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Active(out RHS:WordBool):HResult;stdcall;
		function Get_DataBodyRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_DisplayRightToLeft(out RHS:WordBool):HResult;stdcall;
		function Get_HeaderRowRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_InsertRowRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_ListColumns(out RHS:ListColumns):HResult;stdcall;
		function Get_ListRows(out RHS:ListRows):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_QueryTable(out RHS:ExcelQueryTable):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Get_ShowAutoFilter(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAutoFilter(RHS:WordBool):HResult;stdcall;
		function Get_ShowTotals(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTotals(RHS:WordBool):HResult;stdcall;
		function Get_SourceType(out RHS:XlListObjectSourceType):HResult;stdcall;
		function Get_TotalsRowRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_SharePointURL(out RHS:WideString):HResult;stdcall;
		function Get_XmlMap(out RHS:XmlMap):HResult;stdcall;
		function Get_DisplayName(out RHS:WideString):HResult;stdcall;
		function Set_DisplayName(const RHS:WideString):HResult;stdcall;
		function Get_ShowHeaders(out RHS:WordBool):HResult;stdcall;
		function Set_ShowHeaders(RHS:WordBool):HResult;stdcall;
		function Get__AutoFilter(out RHS:AutoFilter):HResult;stdcall;
		function Get_TableStyle(out RHS:OleVariant):HResult;stdcall;
		function Set_TableStyle(RHS:OleVariant):HResult;stdcall;
		function Get_ShowTableStyleFirstColumn(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleFirstColumn(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleLastColumn(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleLastColumn(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleRowStripes(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleRowStripes(RHS:WordBool):HResult;stdcall;
		function Get_ShowTableStyleColumnStripes(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTableStyleColumnStripes(RHS:WordBool):HResult;stdcall;
		function Get__Sort(out RHS:Sort):HResult;stdcall;
		function Get_Comment(out RHS:WideString):HResult;stdcall;
		function Set_Comment(const RHS:WideString):HResult;stdcall;
		function ExportToVisio:HResult;stdcall;
		function Get_AlternativeText(out RHS:WideString):HResult;stdcall;
		function Set_AlternativeText(const RHS:WideString):HResult;stdcall;
		function Get_Summary(out RHS:WideString):HResult;stdcall;
		function Set_Summary(const RHS:WideString):HResult;stdcall;
		function Get_TableObject(out RHS:TableObject):HResult;stdcall;
		function Get_Slicers(out RHS:Slicers):HResult;stdcall;
		function Get_ShowAutoFilterDropDown(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAutoFilterDropDown(RHS:WordBool):HResult;stdcall;
		function Get_AutoFilter(out RHS:AutoFilter):HResult;stdcall;
		function Get_Sort(out RHS:Sort):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListColumns
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024472-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListColumns=interface(IDispatch)
		['{00024472-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Position:OleVariant;out RHS:ListColumn):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ListColumn):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ListColumn):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListColumn
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024473-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListColumn=interface(IDispatch)
		['{00024473-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_ListDataFormat(out RHS:ListDataFormat):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
		function Get_TotalsCalculation(out RHS:XlTotalsCalculation):HResult;stdcall;
		function Set_TotalsCalculation(RHS:XlTotalsCalculation):HResult;stdcall;
		function Get_XPath(out RHS:XPath):HResult;stdcall;
		function Get_SharePointFormula(out RHS:WideString):HResult;stdcall;
		function Get_DataBodyRange(out RHS:ExcelRange):HResult;stdcall;
		function Get_Total(out RHS:ExcelRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListRows
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024474-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListRows=interface(IDispatch)
		['{00024474-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function _Add(Position:OleVariant;out RHS:ListRow):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ListRow):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ListRow):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(Position:OleVariant;AlwaysInsert:OleVariant;out RHS:ListRow):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListRow
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024475-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListRow=interface(IDispatch)
		['{00024475-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_InvalidData(out RHS:WordBool):HResult;stdcall;
		function Get_Range(out RHS:ExcelRange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlNamespace
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024476-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlNamespace=interface(IDispatch)
		['{00024476-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Uri(out RHS:WideString):HResult;stdcall;
		function Get_Prefix(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlNamespaces
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024477-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlNamespaces=interface(IDispatch)
		['{00024477-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:XmlNamespace):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:XmlNamespace):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function InstallManifest(const Path:WideString;InstallForAllUsers:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlDataBinding
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024478-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlDataBinding=interface(IDispatch)
		['{00024478-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Refresh(out RHS:XlXmlImportResult):HResult;stdcall;
		function LoadSettings(const Url:WideString):HResult;stdcall;
		function ClearSettings:HResult;stdcall;
		function Get_SourceUrl(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlSchema
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024479-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlSchema=interface(IDispatch)
		['{00024479-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Namespace(out RHS:XmlNamespace):HResult;stdcall;
		function Get_XML(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlSchemas
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlSchemas=interface(IDispatch)
		['{0002447A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:XmlSchema):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:XmlSchema):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlMap
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlMap=interface(IDispatch)
		['{0002447B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_IsExportable(out RHS:WordBool):HResult;stdcall;
		function Get_ShowImportExportValidationErrors(out RHS:WordBool):HResult;stdcall;
		function Set_ShowImportExportValidationErrors(RHS:WordBool):HResult;stdcall;
		function Get_SaveDataSourceDefinition(out RHS:WordBool):HResult;stdcall;
		function Set_SaveDataSourceDefinition(RHS:WordBool):HResult;stdcall;
		function Get_AdjustColumnWidth(out RHS:WordBool):HResult;stdcall;
		function Set_AdjustColumnWidth(RHS:WordBool):HResult;stdcall;
		function Get_PreserveColumnFilter(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveColumnFilter(RHS:WordBool):HResult;stdcall;
		function Get_PreserveNumberFormatting(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveNumberFormatting(RHS:WordBool):HResult;stdcall;
		function Get_AppendOnImport(out RHS:WordBool):HResult;stdcall;
		function Set_AppendOnImport(RHS:WordBool):HResult;stdcall;
		function Get_RootElementName(out RHS:WideString):HResult;stdcall;
		function Get_RootElementNamespace(out RHS:XmlNamespace):HResult;stdcall;
		function Get_Schemas(out RHS:XmlSchemas):HResult;stdcall;
		function Get_DataBinding(out RHS:XmlDataBinding):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Import(const Url:WideString;Overwrite:OleVariant;out RHS:XlXmlImportResult):HResult;stdcall;
		function ImportXml(const XmlData:WideString;Overwrite:OleVariant;out RHS:XlXmlImportResult):HResult;stdcall;
		function Export(const Url:WideString;Overwrite:OleVariant;out RHS:XlXmlExportResult):HResult;stdcall;
		function ExportXml(out Data:WideString;out RHS:XlXmlExportResult):HResult;stdcall;
		function Get_WorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXmlMaps
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXmlMaps=interface(IDispatch)
		['{0002447C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Schema:WideString;RootElementName:OleVariant;out RHS:XmlMap):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:XmlMap):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:XmlMap):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IListDataFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IListDataFormat=interface(IDispatch)
		['{0002447D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:XlListDataType):HResult;stdcall;
		function Get_Choices(out RHS:OleVariant):HResult;stdcall;
		function Get_DecimalPlaces(out RHS:Integer):HResult;stdcall;
		function Get_DefaultValue(out RHS:OleVariant):HResult;stdcall;
		function Get_IsPercent(out RHS:WordBool):HResult;stdcall;
		function Get_lcid(out RHS:Integer):HResult;stdcall;
		function Get_MaxCharacters(out RHS:Integer):HResult;stdcall;
		function Get_MaxNumber(out RHS:OleVariant):HResult;stdcall;
		function Get_MinNumber(out RHS:OleVariant):HResult;stdcall;
		function Get_Required(out RHS:WordBool):HResult;stdcall;
		function Get_type_(out RHS:XlListDataType):HResult;stdcall;
		function Get_ReadOnly(out RHS:WordBool):HResult;stdcall;
		function Get_AllowFillIn(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IXPath
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IXPath=interface(IDispatch)
		['{0002447E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Get_Map(out RHS:XmlMap):HResult;stdcall;
		function SetValue(const Map:XmlMap;const XPath:WideString;SelectionNamespace:OleVariant;Repeating:OleVariant)
			:HResult;stdcall;
		function Clear:HResult;stdcall;
		function Get_Repeating(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotLineCells
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002447F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotLineCells=interface(IDispatch)
		['{0002447F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotCell):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:PivotCell):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Full(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotLine
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024480-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotLine=interface(IDispatch)
		['{00024480-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_LineType(out RHS:XlPivotLineType):HResult;stdcall;
		function Get_Position(out RHS:Integer):HResult;stdcall;
		function Get_PivotLineCells(out RHS:PivotLineCells):HResult;stdcall;
		function Get_PivotLineCellsFull(out RHS:PivotLineCells):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotLines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024481-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotLines=interface(IDispatch)
		['{00024481-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotLine):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:PivotLine):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotAxis
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024482-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotAxis=interface(IDispatch)
		['{00024482-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_PivotLines(out RHS:PivotLines):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotFilter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024483-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotFilter=interface(IDispatch)
		['{00024483-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Order(out RHS:Integer):HResult;stdcall;
		function Set_Order(RHS:Integer):HResult;stdcall;
		function Get_FilterType(out RHS:XlPivotFilterType):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Description(out RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Active(out RHS:WordBool):HResult;stdcall;
		function Get_PivotField(out RHS:PivotField):HResult;stdcall;
		function Get_DataField(out RHS:PivotField):HResult;stdcall;
		function Get_DataCubeField(out RHS:CubeField):HResult;stdcall;
		function Get_Value1(out RHS:OleVariant):HResult;stdcall;
		function Get_Value2(out RHS:OleVariant):HResult;stdcall;
		function Get_MemberPropertyField(out RHS:PivotField):HResult;stdcall;
		function Get_IsMemberPropertyFilter(out RHS:WordBool):HResult;stdcall;
		function Get_WholeDayFilter(out RHS:WordBool):HResult;stdcall;
		function Set_WholeDayFilter(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotFilters
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024484-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotFilters=interface(IDispatch)
		['{00024484-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotFilter):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:PivotFilter):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(Type_:XlPivotFilterType;DataField:OleVariant;Value1:OleVariant;Value2:OleVariant;Order:OleVariant;
			Name:OleVariant;Description:OleVariant;MemberPropertyField:OleVariant;out RHS:PivotFilter):HResult;stdcall;
		function Add2(Type_:XlPivotFilterType;DataField:OleVariant;Value1:OleVariant;Value2:OleVariant;Order:OleVariant;
			Name:OleVariant;Description:OleVariant;MemberPropertyField:OleVariant;WholeDayFilter:OleVariant;
			out RHS:PivotFilter):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorkbookConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024485-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorkbookConnection=interface(IDispatch)
		['{00024485-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Description(out RHS:WideString):HResult;stdcall;
		function Set_Description(const RHS:WideString):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:XlConnectionType):HResult;stdcall;
		function Get_OLEDBConnection(out RHS:OLEDBConnection):HResult;stdcall;
		function Get_ODBCConnection(out RHS:ODBCConnection):HResult;stdcall;
		function Get_Ranges(out RHS:Ranges):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Refresh:HResult;stdcall;
		function Get_ModelConnection(out RHS:ModelConnection):HResult;stdcall;
		function Get_WorksheetDataConnection(out RHS:WorksheetDataConnection):HResult;stdcall;
		function Get_RefreshWithRefreshAll(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshWithRefreshAll(RHS:WordBool):HResult;stdcall;
		function Get_TextConnection(out RHS:TextConnection):HResult;stdcall;
		function Get_DataFeedConnection(out RHS:DataFeedConnection):HResult;stdcall;
		function Get_InModel(out RHS:WordBool):HResult;stdcall;
		function Get_ModelTables(out RHS:ModelTables):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IConnections
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024486-0001-0000-C000-000000000046}
	// *********************************************************************//
	IConnections=interface(IDispatch)
		['{00024486-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function _AddFromFile(const Filename:WideString;out RHS:WorkbookConnection):HResult;stdcall;
		function Add(const Name:WideString;const Description:WideString;ConnectionString:OleVariant;CommandText:OleVariant;
			lCmdtype:OleVariant;out RHS:WorkbookConnection):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:WorkbookConnection):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:WorkbookConnection):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add2(const Name:WideString;const Description:WideString;ConnectionString:OleVariant;CommandText:OleVariant;
			lCmdtype:OleVariant;CreateModelConnection:OleVariant;ImportRelationships:OleVariant;out RHS:WorkbookConnection)
			:HResult;stdcall;
		function AddFromFile(const Filename:WideString;CreateModelConnection:OleVariant;ImportRelationships:OleVariant;
			out RHS:WorkbookConnection):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorksheetView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024487-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorksheetView=interface(IDispatch)
		['{00024487-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Sheet(out RHS:IDispatch):HResult;stdcall;
		function Get_DisplayGridlines(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayGridlines(RHS:WordBool):HResult;stdcall;
		function Get_DisplayFormulas(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayFormulas(RHS:WordBool):HResult;stdcall;
		function Get_DisplayHeadings(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayHeadings(RHS:WordBool):HResult;stdcall;
		function Get_DisplayOutline(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayOutline(RHS:WordBool):HResult;stdcall;
		function Get_DisplayZeros(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayZeros(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024488-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartView=interface(IDispatch)
		['{00024488-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Sheet(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModuleView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024489-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModuleView=interface(IDispatch)
		['{00024489-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Sheet(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDialogSheetView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002448A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDialogSheetView=interface(IDispatch)
		['{0002448A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Sheet(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISheetViews
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002448C-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISheetViews=interface(IDispatch)
		['{0002448C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IOLEDBConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002448D-0001-0000-C000-000000000046}
	// *********************************************************************//
	IOLEDBConnection=interface(IDispatch)
		['{0002448D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ADOConnection(out RHS:IDispatch):HResult;stdcall;
		function Get_BackgroundQuery(out RHS:WordBool):HResult;stdcall;
		function Set_BackgroundQuery(RHS:WordBool):HResult;stdcall;
		function CancelRefresh:HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Get_LocalConnection(out RHS:OleVariant):HResult;stdcall;
		function Set_LocalConnection(RHS:OleVariant):HResult;stdcall;
		function Get_MaintainConnection(out RHS:WordBool):HResult;stdcall;
		function Set_MaintainConnection(RHS:WordBool):HResult;stdcall;
		function MakeConnection:HResult;stdcall;
		function Refresh:HResult;stdcall;
		function Get_RefreshDate(out RHS:TDateTime):HResult;stdcall;
		function Get_Refreshing(out RHS:WordBool):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_RefreshPeriod(out RHS:Integer):HResult;stdcall;
		function Set_RefreshPeriod(RHS:Integer):HResult;stdcall;
		function Get_RobustConnect(out RHS:XlRobustConnect):HResult;stdcall;
		function Set_RobustConnect(RHS:XlRobustConnect):HResult;stdcall;
		function SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant):HResult;stdcall;
		function Get_SavePassword(out RHS:WordBool):HResult;stdcall;
		function Set_SavePassword(RHS:WordBool):HResult;stdcall;
		function Get_SourceConnectionFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceConnectionFile(const RHS:WideString):HResult;stdcall;
		function Get_SourceDataFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceDataFile(const RHS:WideString):HResult;stdcall;
		function Get_OLAP(out RHS:WordBool):HResult;stdcall;
		function Get_UseLocalConnection(out RHS:WordBool):HResult;stdcall;
		function Set_UseLocalConnection(RHS:WordBool):HResult;stdcall;
		function Get_MaxDrillthroughRecords(out RHS:Integer):HResult;stdcall;
		function Set_MaxDrillthroughRecords(RHS:Integer):HResult;stdcall;
		function Get_IsConnected(out RHS:WordBool):HResult;stdcall;
		function Get_ServerCredentialsMethod(out RHS:XlCredentialsMethod):HResult;stdcall;
		function Set_ServerCredentialsMethod(RHS:XlCredentialsMethod):HResult;stdcall;
		function Get_ServerSSOApplicationID(out RHS:WideString):HResult;stdcall;
		function Set_ServerSSOApplicationID(const RHS:WideString):HResult;stdcall;
		function Get_AlwaysUseConnectionFile(out RHS:WordBool):HResult;stdcall;
		function Set_AlwaysUseConnectionFile(RHS:WordBool):HResult;stdcall;
		function Get_ServerFillColor(out RHS:WordBool):HResult;stdcall;
		function Set_ServerFillColor(RHS:WordBool):HResult;stdcall;
		function Get_ServerFontStyle(out RHS:WordBool):HResult;stdcall;
		function Set_ServerFontStyle(RHS:WordBool):HResult;stdcall;
		function Get_ServerNumberFormat(out RHS:WordBool):HResult;stdcall;
		function Set_ServerNumberFormat(RHS:WordBool):HResult;stdcall;
		function Get_ServerTextColor(out RHS:WordBool):HResult;stdcall;
		function Set_ServerTextColor(RHS:WordBool):HResult;stdcall;
		function Get_RetrieveInOfficeUILang(out RHS:WordBool):HResult;stdcall;
		function Set_RetrieveInOfficeUILang(RHS:WordBool):HResult;stdcall;
		function Reconnect:HResult;stdcall;
		function Get_CalculatedMembers(out RHS:CalculatedMembers):HResult;stdcall;
		function Get_LocaleID(out RHS:Integer):HResult;stdcall;
		function Set_LocaleID(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IODBCConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002448E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IODBCConnection=interface(IDispatch)
		['{0002448E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_BackgroundQuery(out RHS:WordBool):HResult;stdcall;
		function Set_BackgroundQuery(RHS:WordBool):HResult;stdcall;
		function CancelRefresh:HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Refresh:HResult;stdcall;
		function Get_RefreshDate(out RHS:TDateTime):HResult;stdcall;
		function Get_Refreshing(out RHS:WordBool):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_RefreshPeriod(out RHS:Integer):HResult;stdcall;
		function Set_RefreshPeriod(RHS:Integer):HResult;stdcall;
		function Get_RobustConnect(out RHS:XlRobustConnect):HResult;stdcall;
		function Set_RobustConnect(RHS:XlRobustConnect):HResult;stdcall;
		function SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant):HResult;stdcall;
		function Get_SavePassword(out RHS:WordBool):HResult;stdcall;
		function Set_SavePassword(RHS:WordBool):HResult;stdcall;
		function Get_SourceConnectionFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceConnectionFile(const RHS:WideString):HResult;stdcall;
		function Get_SourceData(out RHS:OleVariant):HResult;stdcall;
		function Set_SourceData(RHS:OleVariant):HResult;stdcall;
		function Get_SourceDataFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceDataFile(const RHS:WideString):HResult;stdcall;
		function Get_ServerCredentialsMethod(out RHS:XlCredentialsMethod):HResult;stdcall;
		function Set_ServerCredentialsMethod(RHS:XlCredentialsMethod):HResult;stdcall;
		function Get_ServerSSOApplicationID(out RHS:WideString):HResult;stdcall;
		function Set_ServerSSOApplicationID(const RHS:WideString):HResult;stdcall;
		function Get_AlwaysUseConnectionFile(out RHS:WordBool):HResult;stdcall;
		function Set_AlwaysUseConnectionFile(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAction
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002448F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAction=interface(IDispatch)
		['{0002448F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:XlActionType):HResult;stdcall;
		function Get_Coordinate(out RHS:WideString):HResult;stdcall;
		function Get_Content(out RHS:WideString):HResult;stdcall;
		function Execute:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IActions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024490-0001-0000-C000-000000000046}
	// *********************************************************************//
	IActions=interface(IDispatch)
		['{00024490-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Action):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Action):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFormatColor
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024491-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFormatColor=interface(IDispatch)
		['{00024491-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ColorIndex(out RHS:XlColorIndex):HResult;stdcall;
		function Set_ColorIndex(RHS:XlColorIndex):HResult;stdcall;
		function Get_ThemeColor(out RHS:OleVariant):HResult;stdcall;
		function Set_ThemeColor(RHS:OleVariant):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IConditionValue
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024492-0001-0000-C000-000000000046}
	// *********************************************************************//
	IConditionValue=interface(IDispatch)
		['{00024492-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Modify(newtype:XlConditionValueTypes;newvalue:OleVariant):HResult;stdcall;
		function Get_type_(out RHS:XlConditionValueTypes):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IColorScale
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024493-0001-0000-C000-000000000046}
	// *********************************************************************//
	IColorScale=interface(IDispatch)
		['{00024493-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
		function Get_ColorScaleCriteria(out RHS:ColorScaleCriteria):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IColorScaleCriteria
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024494-0001-0000-C000-000000000046}
	// *********************************************************************//
	IColorScaleCriteria=interface(IDispatch)
		['{00024494-0001-0000-C000-000000000046}']
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ColorScaleCriterion):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ColorScaleCriterion):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IColorScaleCriterion
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024495-0001-0000-C000-000000000046}
	// *********************************************************************//
	IColorScaleCriterion=interface(IDispatch)
		['{00024495-0001-0000-C000-000000000046}']
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:XlConditionValueTypes):HResult;stdcall;
		function Set_type_(RHS:XlConditionValueTypes):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get_FormatColor(out RHS:FormatColor):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDatabar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024496-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDatabar=interface(IDispatch)
		['{00024496-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_MinPoint(out RHS:ConditionValue):HResult;stdcall;
		function Get_MaxPoint(out RHS:ConditionValue):HResult;stdcall;
		function Get_PercentMin(out RHS:Integer):HResult;stdcall;
		function Set_PercentMin(RHS:Integer):HResult;stdcall;
		function Get_PercentMax(out RHS:Integer):HResult;stdcall;
		function Set_PercentMax(RHS:Integer):HResult;stdcall;
		function Get_BarColor(out RHS:IDispatch):HResult;stdcall;
		function Get_ShowValue(out RHS:WordBool):HResult;stdcall;
		function Set_ShowValue(RHS:WordBool):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
		function Get_Direction(out RHS:Integer):HResult;stdcall;
		function Set_Direction(RHS:Integer):HResult;stdcall;
		function Get_BarFillType(out RHS:XlDataBarFillType):HResult;stdcall;
		function Set_BarFillType(RHS:XlDataBarFillType):HResult;stdcall;
		function Get_AxisPosition(out RHS:XlDataBarAxisPosition):HResult;stdcall;
		function Set_AxisPosition(RHS:XlDataBarAxisPosition):HResult;stdcall;
		function Get_AxisColor(out RHS:IDispatch):HResult;stdcall;
		function Get_BarBorder(out RHS:DataBarBorder):HResult;stdcall;
		function Get_NegativeBarFormat(out RHS:NegativeBarFormat):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIconSetCondition
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024497-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIconSetCondition=interface(IDispatch)
		['{00024497-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_ReverseOrder(out RHS:WordBool):HResult;stdcall;
		function Set_ReverseOrder(RHS:WordBool):HResult;stdcall;
		function Get_PercentileValues(out RHS:WordBool):HResult;stdcall;
		function Set_PercentileValues(RHS:WordBool):HResult;stdcall;
		function Get_ShowIconOnly(out RHS:WordBool):HResult;stdcall;
		function Set_ShowIconOnly(RHS:WordBool):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_IconSet(out RHS:OleVariant):HResult;stdcall;
		function Set_IconSet(RHS:OleVariant):HResult;stdcall;
		function Get_IconCriteria(out RHS:IconCriteria):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIconCriteria
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024498-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIconCriteria=interface(IDispatch)
		['{00024498-0001-0000-C000-000000000046}']
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IconCriterion):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IconCriterion):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIconCriterion
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024499-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIconCriterion=interface(IDispatch)
		['{00024499-0001-0000-C000-000000000046}']
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_type_(out RHS:XlConditionValueTypes):HResult;stdcall;
		function Set_type_(RHS:XlConditionValueTypes):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function Set_Value(RHS:OleVariant):HResult;stdcall;
		function Get_Operator_(out RHS:Integer):HResult;stdcall;
		function Set_Operator_(RHS:Integer):HResult;stdcall;
		function Get_Icon(out RHS:XlIcon):HResult;stdcall;
		function Set_Icon(RHS:XlIcon):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIcon
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449A-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIcon=interface(IDispatch)
		['{0002449A-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IconSet):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIconSet
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449B-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIconSet=interface(IDispatch)
		['{0002449B-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ID(out RHS:XlIconSet):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Icon):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Icon):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IIconSets
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449C-0001-0000-C000-000000000046}
	// *********************************************************************//
	IIconSets=interface(IDispatch)
		['{0002449C-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITop10
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449D-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITop10=interface(IDispatch)
		['{0002449D-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Set_StopIfTrue(RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_TopBottom(out RHS:XlTopBottom):HResult;stdcall;
		function Set_TopBottom(RHS:XlTopBottom):HResult;stdcall;
		function Get_Rank(out RHS:Integer):HResult;stdcall;
		function Set_Rank(RHS:Integer):HResult;stdcall;
		function Get_Percent(out RHS:WordBool):HResult;stdcall;
		function Set_Percent(RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Get_NumberFormat(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(RHS:OleVariant):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
		function Get_CalcFor(out RHS:XlCalcFor):HResult;stdcall;
		function Set_CalcFor(RHS:XlCalcFor):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAboveAverage
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAboveAverage=interface(IDispatch)
		['{0002449E-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Set_StopIfTrue(RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_AboveBelow(out RHS:XlAboveBelow):HResult;stdcall;
		function Set_AboveBelow(RHS:XlAboveBelow):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Get_NumberFormat(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(RHS:OleVariant):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
		function Get_CalcFor(out RHS:XlCalcFor):HResult;stdcall;
		function Set_CalcFor(RHS:XlCalcFor):HResult;stdcall;
		function Get_NumStdDev(out RHS:Integer):HResult;stdcall;
		function Set_NumStdDev(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IUniqueValues
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002449F-0001-0000-C000-000000000046}
	// *********************************************************************//
	IUniqueValues=interface(IDispatch)
		['{0002449F-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Get_StopIfTrue(out RHS:WordBool):HResult;stdcall;
		function Set_StopIfTrue(RHS:WordBool):HResult;stdcall;
		function Get_AppliesTo(out RHS:ExcelRange):HResult;stdcall;
		function Get_DupeUnique(out RHS:XlDupeUnique):HResult;stdcall;
		function Set_DupeUnique(RHS:XlDupeUnique):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_type_(out RHS:Integer):HResult;stdcall;
		function Get_NumberFormat(out RHS:OleVariant):HResult;stdcall;
		function Set_NumberFormat(RHS:OleVariant):HResult;stdcall;
		function SetFirstPriority:HResult;stdcall;
		function SetLastPriority:HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyAppliesToRange(const Range:ExcelRange):HResult;stdcall;
		function Get_PTCondition(out RHS:WordBool):HResult;stdcall;
		function Get_ScopeType(out RHS:XlPivotConditionScope):HResult;stdcall;
		function Set_ScopeType(RHS:XlPivotConditionScope):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRanges
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRanges=interface(IDispatch)
		['{000244A0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ExcelRange):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IHeaderFooter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IHeaderFooter=interface(IDispatch)
		['{000244A1-0001-0000-C000-000000000046}']
		function Get_Text(out RHS:WideString):HResult;stdcall;
		function Set_Text(const RHS:WideString):HResult;stdcall;
		function Get_Picture(out RHS:Graphic):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPage
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPage=interface(IDispatch)
		['{000244A2-0001-0000-C000-000000000046}']
		function Get_LeftHeader(out RHS:HeaderFooter):HResult;stdcall;
		function Get_CenterHeader(out RHS:HeaderFooter):HResult;stdcall;
		function Get_RightHeader(out RHS:HeaderFooter):HResult;stdcall;
		function Get_LeftFooter(out RHS:HeaderFooter):HResult;stdcall;
		function Get_CenterFooter(out RHS:HeaderFooter):HResult;stdcall;
		function Get_RightFooter(out RHS:HeaderFooter):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPages
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPages=interface(IDispatch)
		['{000244A3-0001-0000-C000-000000000046}']
		function Get_Item(Index:OleVariant;out RHS:Page):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Page):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IServerViewableItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IServerViewableItems=interface(IDispatch)
		['{000244A4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(Obj:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Delete(Index:OleVariant):HResult;stdcall;
		function DeleteAll:HResult;stdcall;
		function Item(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:IDispatch):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITableStyleElement
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A5-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITableStyleElement=interface(IDispatch)
		['{000244A5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_HasFormat(out RHS:WordBool):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_StripeSize(out RHS:Integer):HResult;stdcall;
		function Set_StripeSize(RHS:Integer):HResult;stdcall;
		function Clear:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITableStyleElements
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A6-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITableStyleElements=interface(IDispatch)
		['{000244A6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:XlTableStyleElementType;out RHS:TableStyleElement):HResult;stdcall;
		function Get__Default(Index:XlTableStyleElementType;out RHS:TableStyleElement):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITableStyle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A7-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITableStyle=interface(IDispatch)
		['{000244A7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_NameLocal(out RHS:WideString):HResult;stdcall;
		function Get_BuiltIn(out RHS:WordBool):HResult;stdcall;
		function Get_TableStyleElements(out RHS:TableStyleElements):HResult;stdcall;
		function Get_ShowAsAvailableTableStyle(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAsAvailableTableStyle(RHS:WordBool):HResult;stdcall;
		function Get_ShowAsAvailablePivotTableStyle(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAsAvailablePivotTableStyle(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Duplicate(NewTableStyleName:OleVariant;out RHS:TableStyle):HResult;stdcall;
		function Get_ShowAsAvailableSlicerStyle(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAsAvailableSlicerStyle(RHS:WordBool):HResult;stdcall;
		function Get_ShowAsAvailableTimelineStyle(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAsAvailableTimelineStyle(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITableStyles
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A8-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITableStyles=interface(IDispatch)
		['{000244A8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(const TableStyleName:WideString;out RHS:TableStyle):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:TableStyle):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:TableStyle):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISortField
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244A9-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISortField=interface(IDispatch)
		['{000244A9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_SortOn(out RHS:XlSortOn):HResult;stdcall;
		function Set_SortOn(RHS:XlSortOn):HResult;stdcall;
		function Get_SortOnValue(out RHS:IDispatch):HResult;stdcall;
		function Get_Key(out RHS:ExcelRange):HResult;stdcall;
		function Get_Order(out RHS:XlSortOrder):HResult;stdcall;
		function Set_Order(RHS:XlSortOrder):HResult;stdcall;
		function Get_CustomOrder(out RHS:OleVariant):HResult;stdcall;
		function Set_CustomOrder(RHS:OleVariant):HResult;stdcall;
		function Get_DataOption(out RHS:XlSortDataOption):HResult;stdcall;
		function Set_DataOption(RHS:XlSortDataOption):HResult;stdcall;
		function Get_Priority(out RHS:Integer):HResult;stdcall;
		function Set_Priority(RHS:Integer):HResult;stdcall;
		function Delete:HResult;stdcall;
		function ModifyKey(const Key:ExcelRange):HResult;stdcall;
		function SetIcon(const Icon:Icon):HResult;stdcall;
		function Get_SubField(out RHS:OleVariant):HResult;stdcall;
		function Set_SubField(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISortFields
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AA-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISortFields=interface(IDispatch)
		['{000244AA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Key:ExcelRange;SortOn:OleVariant;Order:OleVariant;CustomOrder:OleVariant;DataOption:OleVariant;
			out RHS:SortField):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SortField):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Clear:HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SortField):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add2(const Key:ExcelRange;SortOn:OleVariant;Order:OleVariant;CustomOrder:OleVariant;DataOption:OleVariant;
			SubField:OleVariant;out RHS:SortField):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISort
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AB-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISort=interface(IDispatch)
		['{000244AB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Rng(out RHS:ExcelRange):HResult;stdcall;
		function Get_Header(out RHS:XlYesNoGuess):HResult;stdcall;
		function Set_Header(RHS:XlYesNoGuess):HResult;stdcall;
		function Get_MatchCase(out RHS:WordBool):HResult;stdcall;
		function Set_MatchCase(RHS:WordBool):HResult;stdcall;
		function Get_Orientation(out RHS:XlSortOrientation):HResult;stdcall;
		function Set_Orientation(RHS:XlSortOrientation):HResult;stdcall;
		function Get_SortMethod(out RHS:XlSortMethod):HResult;stdcall;
		function Set_SortMethod(RHS:XlSortMethod):HResult;stdcall;
		function Get_SortFields(out RHS:SortFields):HResult;stdcall;
		function SetRange(const Rng:ExcelRange):HResult;stdcall;
		function Apply:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IResearch
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AC-0001-0000-C000-000000000046}
	// *********************************************************************//
	IResearch=interface(IDispatch)
		['{000244AC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Query(const ServiceID:WideString;QueryString:OleVariant;QueryLanguage:OleVariant;UseSelection:OleVariant;
			LaunchQuery:OleVariant;out RHS:OleVariant):HResult;stdcall;
		function IsResearchService(const ServiceID:WideString;out RHS:WordBool):HResult;stdcall;
		function SetLanguagePair(LanguageFrom:Integer;LanguageTo:Integer;out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IColorStop
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AD-0001-0000-C000-000000000046}
	// *********************************************************************//
	IColorStop=interface(IDispatch)
		['{000244AD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_Color(out RHS:OleVariant):HResult;stdcall;
		function Set_Color(RHS:OleVariant):HResult;stdcall;
		function Get_ThemeColor(out RHS:Integer):HResult;stdcall;
		function Set_ThemeColor(RHS:Integer):HResult;stdcall;
		function Get_TintAndShade(out RHS:OleVariant):HResult;stdcall;
		function Set_TintAndShade(RHS:OleVariant):HResult;stdcall;
		function Get_Position(out RHS:Double):HResult;stdcall;
		function Set_Position(RHS:Double):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IColorStops
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IColorStops=interface(IDispatch)
		['{000244AE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(Position:Double;out RHS:ColorStop):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ColorStop):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ColorStop):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Clear:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ILinearGradient
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244AF-0001-0000-C000-000000000046}
	// *********************************************************************//
	ILinearGradient=interface(IDispatch)
		['{000244AF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ColorStops(out RHS:ColorStops):HResult;stdcall;
		function Get_Degree(out RHS:Double):HResult;stdcall;
		function Set_Degree(RHS:Double):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IRectangularGradient
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IRectangularGradient=interface(IDispatch)
		['{000244B0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ColorStops(out RHS:ColorStops):HResult;stdcall;
		function Get_RectangleTop(out RHS:Double):HResult;stdcall;
		function Set_RectangleTop(RHS:Double):HResult;stdcall;
		function Get_RectangleBottom(out RHS:Double):HResult;stdcall;
		function Set_RectangleBottom(RHS:Double):HResult;stdcall;
		function Get_RectangleLeft(out RHS:Double):HResult;stdcall;
		function Set_RectangleLeft(RHS:Double):HResult;stdcall;
		function Get_RectangleRight(out RHS:Double):HResult;stdcall;
		function Set_RectangleRight(RHS:Double):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IMultiThreadedCalculation
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IMultiThreadedCalculation=interface(IDispatch)
		['{000244B1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Enabled(out RHS:WordBool):HResult;stdcall;
		function Set_Enabled(RHS:WordBool):HResult;stdcall;
		function Get_ThreadMode(out RHS:XlThreadMode):HResult;stdcall;
		function Set_ThreadMode(RHS:XlThreadMode):HResult;stdcall;
		function Get_ThreadCount(out RHS:Integer):HResult;stdcall;
		function Set_ThreadCount(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartFormat=interface(IDispatch)
		['{000244B2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Fill(out RHS:FillFormat):HResult;stdcall;
		function Get_Glow(out RHS:GlowFormat):HResult;stdcall;
		function Get_Line(out RHS:LineFormat):HResult;stdcall;
		function Get_PictureFormat(out RHS:PictureFormat):HResult;stdcall;
		function Get_Shadow(out RHS:ShadowFormat):HResult;stdcall;
		function Get_SoftEdge(out RHS:SoftEdgeFormat):HResult;stdcall;
		function Get_TextFrame2(out RHS:TextFrame2):HResult;stdcall;
		function Get_ThreeD(out RHS:ThreeDFormat):HResult;stdcall;
		function Get_Adjustments(out RHS:Adjustments):HResult;stdcall;
		function Get_AutoShapeType(out RHS:MsoAutoShapeType):HResult;stdcall;
		function Set_AutoShapeType(RHS:MsoAutoShapeType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFileExportConverter
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFileExportConverter=interface(IDispatch)
		['{000244B3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Extensions(out RHS:WideString):HResult;stdcall;
		function Get_Description(out RHS:WideString):HResult;stdcall;
		function Get_FileFormat(out RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFileExportConverters
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFileExportConverters=interface(IDispatch)
		['{000244B4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:FileExportConverter):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:FileExportConverter):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAddIns2
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B5-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAddIns2=interface(IDispatch)
		['{000244B5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(const Filename:WideString;CopyFile:OleVariant;out RHS:AddIn):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:AddIn):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:AddIn):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparklineGroups
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B6-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparklineGroups=interface(IDispatch)
		['{000244B6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Add(Type_:XlSparkType;const SourceData:WideString;out RHS:SparklineGroup):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SparklineGroup):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SparklineGroup):HResult;stdcall;
		function Clear:HResult;stdcall;
		function ClearGroups:HResult;stdcall;
		function Group(const Location:ExcelRange):HResult;stdcall;
		function Ungroup:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparklineGroup
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B7-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparklineGroup=interface(IDispatch)
		['{000244B7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Sparkline):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Location(out RHS:ExcelRange):HResult;stdcall;
		function _Set_Location(const RHS:ExcelRange):HResult;stdcall;
		function Get_SourceData(out RHS:WideString):HResult;stdcall;
		function Set_SourceData(const RHS:WideString):HResult;stdcall;
		function Get_DateRange(out RHS:WideString):HResult;stdcall;
		function Set_DateRange(const RHS:WideString):HResult;stdcall;
		function ModifyLocation(const Location:ExcelRange):HResult;stdcall;
		function ModifySourceData(const SourceData:WideString):HResult;stdcall;
		function Modify(const Location:ExcelRange;const SourceData:WideString):HResult;stdcall;
		function ModifyDateRange(const DateRange:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_type_(out RHS:XlSparkType):HResult;stdcall;
		function Set_type_(RHS:XlSparkType):HResult;stdcall;
		function Get_SeriesColor(out RHS:FormatColor):HResult;stdcall;
		function Get_Points(out RHS:SparkPoints):HResult;stdcall;
		function Get_Axes(out RHS:SparkAxes):HResult;stdcall;
		function Get_DisplayBlanksAs(out RHS:XlDisplayBlanksAs):HResult;stdcall;
		function Set_DisplayBlanksAs(RHS:XlDisplayBlanksAs):HResult;stdcall;
		function Get_DisplayHidden(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayHidden(RHS:WordBool):HResult;stdcall;
		function Get_LineWeight(out RHS:OleVariant):HResult;stdcall;
		function Set_LineWeight(RHS:OleVariant):HResult;stdcall;
		function Get_PlotBy(out RHS:XlSparklineRowCol):HResult;stdcall;
		function Set_PlotBy(RHS:XlSparklineRowCol):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkPoints
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B8-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkPoints=interface(IDispatch)
		['{000244B8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Negative(out RHS:SparkColor):HResult;stdcall;
		function Get_Markers(out RHS:SparkColor):HResult;stdcall;
		function Get_Highpoint(out RHS:SparkColor):HResult;stdcall;
		function Get_Lowpoint(out RHS:SparkColor):HResult;stdcall;
		function Get_Firstpoint(out RHS:SparkColor):HResult;stdcall;
		function Get_Lastpoint(out RHS:SparkColor):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkline
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244B9-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkline=interface(IDispatch)
		['{000244B9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Location(out RHS:ExcelRange):HResult;stdcall;
		function _Set_Location(const RHS:ExcelRange):HResult;stdcall;
		function Get_SourceData(out RHS:WideString):HResult;stdcall;
		function Set_SourceData(const RHS:WideString):HResult;stdcall;
		function ModifyLocation(const Range:ExcelRange):HResult;stdcall;
		function ModifySourceData(const Formula:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkAxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BA-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkAxes=interface(IDispatch)
		['{000244BA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Vertical(out RHS:SparkVerticalAxis):HResult;stdcall;
		function Get_Horizontal(out RHS:SparkHorizontalAxis):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkHorizontalAxis
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BB-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkHorizontalAxis=interface(IDispatch)
		['{000244BB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Axis(out RHS:SparkColor):HResult;stdcall;
		function Get_IsDateAxis(out RHS:WordBool):HResult;stdcall;
		function Get_RightToLeftPlotOrder(out RHS:WordBool):HResult;stdcall;
		function Set_RightToLeftPlotOrder(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkVerticalAxis
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BC-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkVerticalAxis=interface(IDispatch)
		['{000244BC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_MinScaleType(out RHS:XlSparkScale):HResult;stdcall;
		function Set_MinScaleType(RHS:XlSparkScale):HResult;stdcall;
		function Get_CustomMinScaleValue(out RHS:OleVariant):HResult;stdcall;
		function Set_CustomMinScaleValue(RHS:OleVariant):HResult;stdcall;
		function Get_MaxScaleType(out RHS:XlSparkScale):HResult;stdcall;
		function Set_MaxScaleType(RHS:XlSparkScale):HResult;stdcall;
		function Get_CustomMaxScaleValue(out RHS:OleVariant):HResult;stdcall;
		function Set_CustomMaxScaleValue(RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISparkColor
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BD-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISparkColor=interface(IDispatch)
		['{000244BD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_Color(out RHS:FormatColor):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDataBarBorder
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDataBarBorder=interface(IDispatch)
		['{000244BE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_type_(out RHS:XlDataBarBorderType):HResult;stdcall;
		function Set_type_(RHS:XlDataBarBorderType):HResult;stdcall;
		function Get_Color(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: INegativeBarFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244BF-0001-0000-C000-000000000046}
	// *********************************************************************//
	INegativeBarFormat=interface(IDispatch)
		['{000244BF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ColorType(out RHS:XlDataBarNegativeColorType):HResult;stdcall;
		function Set_ColorType(RHS:XlDataBarNegativeColorType):HResult;stdcall;
		function Get_BorderColorType(out RHS:XlDataBarNegativeColorType):HResult;stdcall;
		function Set_BorderColorType(RHS:XlDataBarNegativeColorType):HResult;stdcall;
		function Get_Color(out RHS:IDispatch):HResult;stdcall;
		function Get_BorderColor(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IValueChange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IValueChange=interface(IDispatch)
		['{000244C0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Order(out RHS:Integer):HResult;stdcall;
		function Get_VisibleInPivotTable(out RHS:WordBool):HResult;stdcall;
		function Get_PivotCell(out RHS:PivotCell):HResult;stdcall;
		function Get_Tuple(out RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:Double):HResult;stdcall;
		function Get_AllocationValue(out RHS:XlAllocationValue):HResult;stdcall;
		function Get_AllocationMethod(out RHS:XlAllocationMethod):HResult;stdcall;
		function Get_AllocationWeightExpression(out RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotTableChangeList
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotTableChangeList=interface(IDispatch)
		['{000244C1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ValueChange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ValueChange):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(const Tuple:WideString;Value:Double;AllocationValue:OleVariant;AllocationMethod:OleVariant;
			AllocationWeightExpression:OleVariant;out RHS:ValueChange):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDisplayFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDisplayFormat=interface(IDispatch)
		['{000244C2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Borders(out RHS:Borders):HResult;stdcall;
		function Get_Characters(Start:OleVariant;Length:OleVariant;out RHS:Characters):HResult;stdcall;
		function Get_Font(out RHS:Font):HResult;stdcall;
		function Get_Style(out RHS:OleVariant):HResult;stdcall;
		function Get_AddIndent(out RHS:OleVariant):HResult;stdcall;
		function Get_FormulaHidden(out RHS:OleVariant):HResult;stdcall;
		function Get_HorizontalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Get_IndentLevel(out RHS:OleVariant):HResult;stdcall;
		function Get_Interior(out RHS:Interior):HResult;stdcall;
		function Get_Locked(out RHS:OleVariant):HResult;stdcall;
		function Get_MergeCells(out RHS:OleVariant):HResult;stdcall;
		function Get_NumberFormat(lcidIn:Integer;out RHS:OleVariant):HResult;stdcall;
		function Get_NumberFormatLocal(out RHS:OleVariant):HResult;stdcall;
		function Get_Orientation(out RHS:OleVariant):HResult;stdcall;
		function Get_ReadingOrder(out RHS:Integer):HResult;stdcall;
		function Get_ShrinkToFit(out RHS:OleVariant):HResult;stdcall;
		function Get_VerticalAlignment(out RHS:OleVariant):HResult;stdcall;
		function Get_WrapText(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerCaches
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C3-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerCaches=interface(IDispatch)
		['{000244C3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SlicerCache):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SlicerCache):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(Source:OleVariant;SourceField:OleVariant;Name:OleVariant;out RHS:SlicerCache):HResult;stdcall;
		function Add2(Source:OleVariant;SourceField:OleVariant;Name:OleVariant;SlicerCacheType:OleVariant;
			out RHS:SlicerCache):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerCache
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C4-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerCache=interface(IDispatch)
		['{000244C4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Index(out RHS:Integer):HResult;stdcall;
		function Get_OLAP(out RHS:WordBool):HResult;stdcall;
		function Get_SourceType(out RHS:XlPivotTableSourceType):HResult;stdcall;
		function Get_WorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
		function Get_Slicers(out RHS:Slicers):HResult;stdcall;
		function Get_PivotTables(out RHS:SlicerPivotTables):HResult;stdcall;
		function Get_SlicerCacheLevels(out RHS:SlicerCacheLevels):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_VisibleSlicerItems(out RHS:SlicerItems):HResult;stdcall;
		function Get_VisibleSlicerItemsList(out RHS:OleVariant):HResult;stdcall;
		function Set_VisibleSlicerItemsList(RHS:OleVariant):HResult;stdcall;
		function Get_SlicerItems(out RHS:SlicerItems):HResult;stdcall;
		function Get_CrossFilterType(out RHS:XlSlicerCrossFilterType):HResult;stdcall;
		function Set_CrossFilterType(RHS:XlSlicerCrossFilterType):HResult;stdcall;
		function Get_SortItems(out RHS:XlSlicerSort):HResult;stdcall;
		function Set_SortItems(RHS:XlSlicerSort):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Get_SortUsingCustomLists(out RHS:WordBool):HResult;stdcall;
		function Set_SortUsingCustomLists(RHS:WordBool):HResult;stdcall;
		function Get_ShowAllItems(out RHS:WordBool):HResult;stdcall;
		function Set_ShowAllItems(RHS:WordBool):HResult;stdcall;
		function ClearManualFilter:HResult;stdcall;
		function Delete:HResult;stdcall;
		function Get_TimelineState(out RHS:TimelineState):HResult;stdcall;
		function ClearAllFilters:HResult;stdcall;
		function Get_SlicerCacheType(out RHS:XlSlicerCacheType):HResult;stdcall;
		function Get_FilterCleared(out RHS:WordBool):HResult;stdcall;
		function Get_List(out RHS:WordBool):HResult;stdcall;
		function Get_RequireManualUpdate(out RHS:WordBool):HResult;stdcall;
		function Set_RequireManualUpdate(RHS:WordBool):HResult;stdcall;
		function Get_ListObject(out RHS:ListObject):HResult;stdcall;
		function ClearDateFilter:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerCacheLevels
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C5-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerCacheLevels=interface(IDispatch)
		['{000244C5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Level:OleVariant;out RHS:SlicerCacheLevel):HResult;stdcall;
		function Get__Default(Level:OleVariant;out RHS:SlicerCacheLevel):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerCacheLevel
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C6-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerCacheLevel=interface(IDispatch)
		['{000244C6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_SlicerItems(out RHS:SlicerItems):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Ordinal(out RHS:Integer):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_CrossFilterType(out RHS:XlSlicerCrossFilterType):HResult;stdcall;
		function Set_CrossFilterType(RHS:XlSlicerCrossFilterType):HResult;stdcall;
		function Get_SortItems(out RHS:XlSlicerSort):HResult;stdcall;
		function Set_SortItems(RHS:XlSlicerSort):HResult;stdcall;
		function Get_VisibleSlicerItemsList(out RHS:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicers
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C7-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicers=interface(IDispatch)
		['{000244C7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:Slicer):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:Slicer):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(SlicerDestination:OleVariant;Level:OleVariant;Name:OleVariant;Caption:OleVariant;Top:OleVariant;
			Left:OleVariant;Width:OleVariant;Height:OleVariant;out RHS:Slicer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicer
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C8-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicer=interface(IDispatch)
		['{000244C8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_DisableMoveResizeUI(out RHS:WordBool):HResult;stdcall;
		function Set_DisableMoveResizeUI(RHS:WordBool):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_RowHeight(out RHS:Double):HResult;stdcall;
		function Set_RowHeight(RHS:Double):HResult;stdcall;
		function Get_ColumnWidth(out RHS:Double):HResult;stdcall;
		function Set_ColumnWidth(RHS:Double):HResult;stdcall;
		function Get_NumberOfColumns(out RHS:Integer):HResult;stdcall;
		function Set_NumberOfColumns(RHS:Integer):HResult;stdcall;
		function Get_DisplayHeader(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayHeader(RHS:WordBool):HResult;stdcall;
		function Get_Locked(out RHS:WordBool):HResult;stdcall;
		function Set_Locked(RHS:WordBool):HResult;stdcall;
		function Get_SlicerCache(out RHS:SlicerCache):HResult;stdcall;
		function Get_SlicerCacheLevel(out RHS:SlicerCacheLevel):HResult;stdcall;
		function Get_Shape(out RHS:Shape):HResult;stdcall;
		function Get_Style(out RHS:OleVariant):HResult;stdcall;
		function Set_Style(RHS:OleVariant):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Cut:HResult;stdcall;
		function Copy:HResult;stdcall;
		function Get_ActiveItem(out RHS:SlicerItem):HResult;stdcall;
		function Get_TimelineViewState(out RHS:TimelineViewState):HResult;stdcall;
		function Get_SlicerCacheType(out RHS:XlSlicerCacheType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerItem
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244C9-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerItem=interface(IDispatch)
		['{000244C9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:SlicerCache):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_SourceName(out RHS:OleVariant):HResult;stdcall;
		function Get_SourceNameStandard(out RHS:WideString):HResult;stdcall;
		function Get_Value(out RHS:WideString):HResult;stdcall;
		function Get_Selected(out RHS:WordBool):HResult;stdcall;
		function Set_Selected(RHS:WordBool):HResult;stdcall;
		function Get_HasData(out RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CA-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerItems=interface(IDispatch)
		['{000244CA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:SlicerItem):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:SlicerItem):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISlicerPivotTables
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CB-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISlicerPivotTables=interface(IDispatch)
		['{000244CB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:PivotTable):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:PivotTable):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function AddPivotTable(const PivotTable:PivotTable):HResult;stdcall;
		function RemovePivotTable(PivotTable:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IProtectedViewWindows
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CC-0001-0000-C000-000000000046}
	// *********************************************************************//
	IProtectedViewWindows=interface(IDispatch)
		['{000244CC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Get_Item(Index:OleVariant;out RHS:ProtectedViewWindow):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ProtectedViewWindow):HResult;stdcall;
		function Open(const Filename:WideString;Password:OleVariant;AddToMru:OleVariant;RepairMode:OleVariant;
			out RHS:ProtectedViewWindow):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IProtectedViewWindow
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CD-0001-0000-C000-000000000046}
	// *********************************************************************//
	IProtectedViewWindow=interface(IDispatch)
		['{000244CD-0001-0000-C000-000000000046}']
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Get_Caption(out RHS:WideString):HResult;stdcall;
		function Set_Caption(const RHS:WideString):HResult;stdcall;
		function Get_EnableResize(out RHS:WordBool):HResult;stdcall;
		function Set_EnableResize(RHS:WordBool):HResult;stdcall;
		function Get_Height(out RHS:Double):HResult;stdcall;
		function Set_Height(RHS:Double):HResult;stdcall;
		function Get_Left(out RHS:Double):HResult;stdcall;
		function Set_Left(RHS:Double):HResult;stdcall;
		function Get_Top(out RHS:Double):HResult;stdcall;
		function Set_Top(RHS:Double):HResult;stdcall;
		function Get_Width(out RHS:Double):HResult;stdcall;
		function Set_Width(RHS:Double):HResult;stdcall;
		function Get_Visible(out RHS:WordBool):HResult;stdcall;
		function Set_Visible(RHS:WordBool):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Get_SourcePath(out RHS:WideString):HResult;stdcall;
		function Get_WindowState(out RHS:XlProtectedViewWindowState):HResult;stdcall;
		function Set_WindowState(RHS:XlProtectedViewWindowState):HResult;stdcall;
		function Get_Workbook(out RHS:ExcelWorkbook):HResult;stdcall;
		function Activate:HResult;stdcall;
		function Close(out RHS:WordBool):HResult;stdcall;
		function Edit(WriteResPassword:OleVariant;UpdateLinks:OleVariant;out RHS:ExcelWorkbook):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITableObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CE-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITableObject=interface(IDispatch)
		['{000244CE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_RowNumbers(out RHS:WordBool):HResult;stdcall;
		function Set_RowNumbers(RHS:WordBool):HResult;stdcall;
		function Get_FetchedRowOverflow(out RHS:WordBool):HResult;stdcall;
		function Get_RefreshStyle(out RHS:XlCellInsertionMode):HResult;stdcall;
		function Set_RefreshStyle(RHS:XlCellInsertionMode):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Get_Destination(out RHS:ExcelRange):HResult;stdcall;
		function Get_ResultRange(out RHS:ExcelRange):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Refresh(out RHS:WordBool):HResult;stdcall;
		function Get_EnableEditing(out RHS:WordBool):HResult;stdcall;
		function Set_EnableEditing(RHS:WordBool):HResult;stdcall;
		function Get_PreserveColumnInfo(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveColumnInfo(RHS:WordBool):HResult;stdcall;
		function Get_PreserveFormatting(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveFormatting(RHS:WordBool):HResult;stdcall;
		function Get_AdjustColumnWidth(out RHS:WordBool):HResult;stdcall;
		function Set_AdjustColumnWidth(RHS:WordBool):HResult;stdcall;
		function Get_ListObject(out RHS:ListObject):HResult;stdcall;
		function Get_WorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPivotValueCell
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244CF-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPivotValueCell=interface(IDispatch)
		['{000244CF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_PivotCell(out RHS:PivotCell):HResult;stdcall;
		function Get_Value(out RHS:OleVariant):HResult;stdcall;
		function ShowDetail:HResult;stdcall;
		function Get_ServerActions(out RHS:Actions):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IQuickAnalysis
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IQuickAnalysis=interface(IDispatch)
		['{000244D0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Show(XlQuickAnalysisMode:XlQuickAnalysisMode):HResult;stdcall;
		function Hide(XlQuickAnalysisMode:XlQuickAnalysisMode):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelConnection=interface(IDispatch)
		['{000244D1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_ADOConnection(out RHS:IDispatch):HResult;stdcall;
		function Get_CalculatedMembers(out RHS:CalculatedMembers):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorksheetDataConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorksheetDataConnection=interface(IDispatch)
		['{000244D2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITextConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D3-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITextConnection=interface(IDispatch)
		['{000244D3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_TextFileHeaderRow(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileHeaderRow(RHS:WordBool):HResult;stdcall;
		function Get_TextFileColumnDataTypes(out RHS:OleVariant):HResult;stdcall;
		function Set_TextFileColumnDataTypes(RHS:OleVariant):HResult;stdcall;
		function Get_TextFileCommaDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileCommaDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileConsecutiveDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileConsecutiveDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileDecimalSeparator(out RHS:WideString):HResult;stdcall;
		function Set_TextFileDecimalSeparator(const RHS:WideString):HResult;stdcall;
		function Get_TextFileFixedColumnWidths(out RHS:OleVariant):HResult;stdcall;
		function Set_TextFileFixedColumnWidths(RHS:OleVariant):HResult;stdcall;
		function Get_TextFileOtherDelimiter(out RHS:WideString):HResult;stdcall;
		function Set_TextFileOtherDelimiter(const RHS:WideString):HResult;stdcall;
		function Get_TextFileParseType(out RHS:XlTextParsingType):HResult;stdcall;
		function Set_TextFileParseType(RHS:XlTextParsingType):HResult;stdcall;
		function Get_TextFilePlatform(out RHS:XlPlatform):HResult;stdcall;
		function Set_TextFilePlatform(RHS:XlPlatform):HResult;stdcall;
		function Get_TextFilePromptOnRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_TextFilePromptOnRefresh(RHS:WordBool):HResult;stdcall;
		function Get_TextFileSemicolonDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileSemicolonDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileSpaceDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileSpaceDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileStartRow(out RHS:Integer):HResult;stdcall;
		function Set_TextFileStartRow(RHS:Integer):HResult;stdcall;
		function Get_TextFileTabDelimiter(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileTabDelimiter(RHS:WordBool):HResult;stdcall;
		function Get_TextFileTextQualifier(out RHS:XlTextQualifier):HResult;stdcall;
		function Set_TextFileTextQualifier(RHS:XlTextQualifier):HResult;stdcall;
		function Get_TextFileThousandsSeparator(out RHS:WideString):HResult;stdcall;
		function Set_TextFileThousandsSeparator(const RHS:WideString):HResult;stdcall;
		function Get_TextFileTrailingMinusNumbers(out RHS:WordBool):HResult;stdcall;
		function Set_TextFileTrailingMinusNumbers(RHS:WordBool):HResult;stdcall;
		function Get_TextFileVisualLayout(out RHS:XlTextVisualLayoutType):HResult;stdcall;
		function Set_TextFileVisualLayout(RHS:XlTextVisualLayoutType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDataFeedConnection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDataFeedConnection=interface(IDispatch)
		['{000244D4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_AlwaysUseConnectionFile(out RHS:WordBool):HResult;stdcall;
		function Set_AlwaysUseConnectionFile(RHS:WordBool):HResult;stdcall;
		function Get_CommandText(out RHS:OleVariant):HResult;stdcall;
		function Set_CommandText(RHS:OleVariant):HResult;stdcall;
		function Get_CommandType(out RHS:XlCmdType):HResult;stdcall;
		function Set_CommandType(RHS:XlCmdType):HResult;stdcall;
		function Get_Connection(out RHS:OleVariant):HResult;stdcall;
		function Set_Connection(RHS:OleVariant):HResult;stdcall;
		function Get_EnableRefresh(out RHS:WordBool):HResult;stdcall;
		function Set_EnableRefresh(RHS:WordBool):HResult;stdcall;
		function Get_RefreshDate(out RHS:TDateTime):HResult;stdcall;
		function Get_Refreshing(out RHS:WordBool):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_RefreshPeriod(out RHS:Integer):HResult;stdcall;
		function Set_RefreshPeriod(RHS:Integer):HResult;stdcall;
		function Get_SavePassword(out RHS:WordBool):HResult;stdcall;
		function Set_SavePassword(RHS:WordBool):HResult;stdcall;
		function Get_ServerCredentialsMethod(out RHS:XlCredentialsMethod):HResult;stdcall;
		function Set_ServerCredentialsMethod(RHS:XlCredentialsMethod):HResult;stdcall;
		function Get_SourceConnectionFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceConnectionFile(const RHS:WideString):HResult;stdcall;
		function Get_SourceDataFile(out RHS:WideString):HResult;stdcall;
		function Set_SourceDataFile(const RHS:WideString):HResult;stdcall;
		function CancelRefresh:HResult;stdcall;
		function Refresh:HResult;stdcall;
		function SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTableColumn
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D5-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTableColumn=interface(IDispatch)
		['{000244D5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_DataType(out RHS:Integer):HResult;stdcall;
		function Dummy1(const NewName:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTableColumns
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D6-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTableColumns=interface(IDispatch)
		['{000244D6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelTableColumn):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelTableColumn):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTable
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D7-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTable=interface(IDispatch)
		['{000244D7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_SourceName(out RHS:WideString):HResult;stdcall;
		function Get_ModelTableColumns(out RHS:ModelTableColumns):HResult;stdcall;
		function Get_SourceWorkbookConnection(out RHS:WorkbookConnection):HResult;stdcall;
		procedure _Dummy7;stdcall;
		function Refresh:HResult;stdcall;
		function Get_RecordCount(out RHS:Integer):HResult;stdcall;
		function Dummy1(const NewName:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTables
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D8-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTables=interface(IDispatch)
		['{000244D8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelTable):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelTable):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelRelationship
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244D9-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelRelationship=interface(IDispatch)
		['{000244D9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ForeignKeyTable(out RHS:ModelTable):HResult;stdcall;
		function Get_ForeignKeyColumn(out RHS:ModelTableColumn):HResult;stdcall;
		function Get_PrimaryKeyTable(out RHS:ModelTable):HResult;stdcall;
		function Get_PrimaryKeyColumn(out RHS:ModelTableColumn):HResult;stdcall;
		function Get_Active(out RHS:WordBool):HResult;stdcall;
		function Set_Active(RHS:WordBool):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelRelationships
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DA-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelRelationships=interface(IDispatch)
		['{000244DA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelRelationship):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelRelationship):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const ForeignKeyColumn:ModelTableColumn;const PrimaryKeyColumn:ModelTableColumn;
			out RHS:ModelRelationship):HResult;stdcall;
		function DetectRelationships(const PivotTable:PivotTable):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModel
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DB-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModel=interface(IDispatch)
		['{000244DB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ModelTables(out RHS:ModelTables):HResult;stdcall;
		function Get_ModelRelationships(out RHS:ModelRelationships):HResult;stdcall;
		function Refresh:HResult;stdcall;
		function AddConnection(const ConnectionToDataSource:WorkbookConnection;out RHS:WorkbookConnection):HResult;stdcall;
		function CreateModelWorkbookConnection(ModelTable:OleVariant;out RHS:WorkbookConnection):HResult;stdcall;
		function Get_DataModelConnection(out RHS:WorkbookConnection):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Initialize:HResult;stdcall;
		function Get_ModelMeasures(out RHS:ModelMeasures):HResult;stdcall;
		function Get_ModelFormatGeneral(out RHS:ModelFormatGeneral):HResult;stdcall;
		function Get_ModelFormatDate(FormatString:OleVariant;out RHS:ModelFormatDate):HResult;stdcall;
		function Get_ModelFormatDecimalNumber(UseThousandSeparator:OleVariant;DecimalPlaces:OleVariant;
			out RHS:ModelFormatDecimalNumber):HResult;stdcall;
		function Get_ModelFormatWholeNumber(UseThousandSeparator:OleVariant;out RHS:ModelFormatWholeNumber):HResult;stdcall;
		function Get_ModelFormatPercentageNumber(UseThousandSeparator:OleVariant;DecimalPlaces:OleVariant;
			out RHS:ModelFormatPercentageNumber):HResult;stdcall;
		function Get_ModelFormatScientificNumber(DecimalPlaces:OleVariant;out RHS:ModelFormatScientificNumber)
			:HResult;stdcall;
		function Get_ModelFormatCurrency(Symbol:OleVariant;DecimalPlaces:OleVariant;out RHS:ModelFormatCurrency)
			:HResult;stdcall;
		function Get_ModelFormatBoolean(out RHS:ModelFormatBoolean):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IFullSeriesCollection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DC-0001-0000-C000-000000000046}
	// *********************************************************************//
	IFullSeriesCollection=interface(IDispatch)
		['{000244DC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:Series):HResult;stdcall;
		function _NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:Series):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartCategory
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DD-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartCategory=interface(IDispatch)
		['{000244DD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_IsFiltered(out RHS:WordBool):HResult;stdcall;
		function Set_IsFiltered(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICategoryCollection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DE-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICategoryCollection=interface(IDispatch)
		['{000244DE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ChartCategory):HResult;stdcall;
		function _Default(Index:OleVariant;out RHS:ChartCategory):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITimelineState
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244DF-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITimelineState=interface(IDispatch)
		['{000244DF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_StartDate(out RHS:OleVariant):HResult;stdcall;
		function Get_EndDate(out RHS:OleVariant):HResult;stdcall;
		function Get_FilterType(out RHS:XlPivotFilterType):HResult;stdcall;
		function Get_FilterValue1(out RHS:OleVariant):HResult;stdcall;
		function Get_FilterValue2(out RHS:OleVariant):HResult;stdcall;
		function Get_SingleRangeFilterState(out RHS:WordBool):HResult;stdcall;
		function SetFilterDateRange(StartDate:OleVariant;EndDate:OleVariant;out RHS:XlFilterStatus):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ITimelineViewState
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E0-0001-0000-C000-000000000046}
	// *********************************************************************//
	ITimelineViewState=interface(IDispatch)
		['{000244E0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_ShowHeader(out RHS:WordBool):HResult;stdcall;
		function Set_ShowHeader(RHS:WordBool):HResult;stdcall;
		function Get_ShowSelectionLabel(out RHS:WordBool):HResult;stdcall;
		function Set_ShowSelectionLabel(RHS:WordBool):HResult;stdcall;
		function Get_ShowTimeLevel(out RHS:WordBool):HResult;stdcall;
		function Set_ShowTimeLevel(RHS:WordBool):HResult;stdcall;
		function Get_ShowHorizontalScrollbar(out RHS:WordBool):HResult;stdcall;
		function Set_ShowHorizontalScrollbar(RHS:WordBool):HResult;stdcall;
		function Get_Level(out RHS:XlTimelineLevel):HResult;stdcall;
		function Set_Level(RHS:XlTimelineLevel):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTableNames
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTableNames=interface(IDispatch)
		['{000244E1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:WideString):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTableNameChange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTableNameChange=interface(IDispatch)
		['{000244E2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TableNameOld(out RHS:WideString):HResult;stdcall;
		function Get_TableNameNew(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelTableNameChanges
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelTableNameChanges=interface(IDispatch)
		['{000244E3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelTableNameChange):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelTableNameChange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelChanges
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelChanges=interface(IDispatch)
		['{000244E4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TablesAdded(out RHS:ModelTableNames):HResult;stdcall;
		function Get_TablesDeleted(out RHS:ModelTableNames):HResult;stdcall;
		function Get_TablesModified(out RHS:ModelTableNames):HResult;stdcall;
		function Get_TableNamesChanged(out RHS:ModelTableNameChanges):HResult;stdcall;
		function Get_RelationshipChange(out RHS:WordBool):HResult;stdcall;
		function Get_ColumnsAdded(out RHS:ModelColumnNames):HResult;stdcall;
		function Get_ColumnsDeleted(out RHS:ModelColumnNames):HResult;stdcall;
		function Get_ColumnsChanged(out RHS:ModelColumnChanges):HResult;stdcall;
		function Get_MeasuresAdded(out RHS:ModelMeasureNames):HResult;stdcall;
		function Get_UnknownChange(out RHS:WordBool):HResult;stdcall;
		function Get_Source(out RHS:XlModelChangeSource):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelColumnName
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E5-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelColumnName=interface(IDispatch)
		['{000244E5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TableName(out RHS:WideString):HResult;stdcall;
		function Get_ColumnName(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelColumnNames
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E6-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelColumnNames=interface(IDispatch)
		['{000244E6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelColumnName):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelColumnName):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelColumnChange
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E7-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelColumnChange=interface(IDispatch)
		['{000244E7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TableName(out RHS:WideString):HResult;stdcall;
		function Get_ColumnName(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelColumnChanges
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E8-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelColumnChanges=interface(IDispatch)
		['{000244E8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelColumnChange):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelColumnChange):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelMeasureName
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244E9-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelMeasureName=interface(IDispatch)
		['{000244E9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TableName(out RHS:WideString):HResult;stdcall;
		function Get_MeasureName(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelMeasureNames
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244EA-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelMeasureNames=interface(IDispatch)
		['{000244EA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelMeasureName):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelMeasureName):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IWorkbookQuery
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244EB-0001-0000-C000-000000000046}
	// *********************************************************************//
	IWorkbookQuery=interface(IDispatch)
		['{000244EB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_Description(out RHS:WideString):HResult;stdcall;
		function Set_Description(const RHS:WideString):HResult;stdcall;
		function Get__Default(out RHS:WideString):HResult;stdcall;
		function Set__Default(const RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IQueries
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244EC-0001-0000-C000-000000000046}
	// *********************************************************************//
	IQueries=interface(IDispatch)
		['{000244EC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(const Name:WideString;const Formula:WideString;Description:OleVariant;out RHS:WorkbookQuery)
			:HResult;stdcall;
		function Item(NameOrIndex:OleVariant;out RHS:WorkbookQuery):HResult;stdcall;
		function Get__Default(NameOrIndex:OleVariant;out RHS:WorkbookQuery):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Get_FastCombine(out RHS:WordBool):HResult;stdcall;
		function Set_FastCombine(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelMeasure
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244ED-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelMeasure=interface(IDispatch)
		['{000244ED-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Get_AssociatedTable(out RHS:ModelTable):HResult;stdcall;
		function _Set_AssociatedTable(const RHS:ModelTable):HResult;stdcall;
		function Get_Formula(out RHS:WideString):HResult;stdcall;
		function Set_Formula(const RHS:WideString):HResult;stdcall;
		function Get_FormatInformation(out RHS:OleVariant):HResult;stdcall;
		function Set_FormatInformation(RHS:OleVariant):HResult;stdcall;
		function Get_Description(out RHS:WideString):HResult;stdcall;
		function Set_Description(const RHS:WideString):HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelMeasures
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244EE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelMeasures=interface(IDispatch)
		['{000244EE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:OleVariant;out RHS:ModelMeasure):HResult;stdcall;
		function Get__Default(Index:OleVariant;out RHS:ModelMeasure):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function Add(const MeasureName:WideString;const AssociatedTable:ModelTable;const Formula:WideString;
			FormatInformation:OleVariant;Description:OleVariant;out RHS:ModelMeasure):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatGeneral
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244EF-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatGeneral=interface(IDispatch)
		['{000244EF-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatDate
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F0-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatDate=interface(IDispatch)
		['{000244F0-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_FormatString(out RHS:WideString):HResult;stdcall;
		function Set_FormatString(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatDecimalNumber
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F1-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatDecimalNumber=interface(IDispatch)
		['{000244F1-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_UseThousandSeparator(out RHS:WordBool):HResult;stdcall;
		function Set_UseThousandSeparator(RHS:WordBool):HResult;stdcall;
		function Get_DecimalPlaces(out RHS:Integer):HResult;stdcall;
		function Set_DecimalPlaces(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatWholeNumber
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F2-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatWholeNumber=interface(IDispatch)
		['{000244F2-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_UseThousandSeparator(out RHS:WordBool):HResult;stdcall;
		function Set_UseThousandSeparator(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatPercentageNumber
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F3-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatPercentageNumber=interface(IDispatch)
		['{000244F3-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_UseThousandSeparator(out RHS:WordBool):HResult;stdcall;
		function Set_UseThousandSeparator(RHS:WordBool):HResult;stdcall;
		function Get_DecimalPlaces(out RHS:Integer):HResult;stdcall;
		function Set_DecimalPlaces(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatScientificNumber
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F4-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatScientificNumber=interface(IDispatch)
		['{000244F4-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_DecimalPlaces(out RHS:Integer):HResult;stdcall;
		function Set_DecimalPlaces(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatCurrency
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F5-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatCurrency=interface(IDispatch)
		['{000244F5-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Symbol(out RHS:WideString):HResult;stdcall;
		function Set_Symbol(const RHS:WideString):HResult;stdcall;
		function Get_DecimalPlaces(out RHS:Integer):HResult;stdcall;
		function Set_DecimalPlaces(RHS:Integer):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IModelFormatBoolean
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F6-0001-0000-C000-000000000046}
	// *********************************************************************//
	IModelFormatBoolean=interface(IDispatch)
		['{000244F6-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPublishedDocs
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F7-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPublishedDocs=interface(IDispatch)
		['{000244F7-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:PublishedDoc):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
		function _Default(Index:Integer;out RHS:PublishedDoc):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IPublishedDoc
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F8-0001-0000-C000-000000000046}
	// *********************************************************************//
	IPublishedDoc=interface(IDispatch)
		['{000244F8-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Title(out RHS:WideString):HResult;stdcall;
		function Get_DisclosureScope(out RHS:Integer):HResult;stdcall;
		function Get_Url(out RHS:WideString):HResult;stdcall;
		function Get_PublishedDate(out RHS:TDateTime):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ISeriesGradientStopColorFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F9-0001-0000-C000-000000000046}
	// *********************************************************************//
	ISeriesGradientStopColorFormat=interface(IDispatch)
		['{000244F9-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_TintAndShade(out RHS:Single):HResult;stdcall;
		function Set_TintAndShade(RHS:Single):HResult;stdcall;
		function Get_ObjectThemeColor(out RHS:MsoThemeColorIndex):HResult;stdcall;
		function Set_ObjectThemeColor(RHS:MsoThemeColorIndex):HResult;stdcall;
		function Get_RGB(out RHS:Integer):HResult;stdcall;
		function Set_RGB(RHS:Integer):HResult;stdcall;
		function Get_Transparency(out RHS:Single):HResult;stdcall;
		function Set_Transparency(RHS:Single):HResult;stdcall;
		function Get_type_(out RHS:MsoColorType):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IChartSeriesGradientStopData
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244FA-0001-0000-C000-000000000046}
	// *********************************************************************//
	IChartSeriesGradientStopData=interface(IDispatch)
		['{000244FA-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_StopColor(out RHS:SeriesGradientStopColorFormat):HResult;stdcall;
		function Get_StopPositionType(out RHS:XlGradientStopPositionType):HResult;stdcall;
		function Set_StopPositionType(RHS:XlGradientStopPositionType):HResult;stdcall;
		function Get_StopValue(out RHS:WideString):HResult;stdcall;
		function Set_StopValue(const RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IDefaultPivotTableLayoutOptions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244FB-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDefaultPivotTableLayoutOptions=interface(IDispatch)
		['{000244FB-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_InGridDropZones(out RHS:WordBool):HResult;stdcall;
		function Set_InGridDropZones(RHS:WordBool):HResult;stdcall;
		function Get_DisplayFieldCaptions(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayFieldCaptions(RHS:WordBool):HResult;stdcall;
		function Get_FieldListSortAscending(out RHS:WordBool):HResult;stdcall;
		function Set_FieldListSortAscending(RHS:WordBool):HResult;stdcall;
		function Get_ViewCalculatedMembers(out RHS:WordBool):HResult;stdcall;
		function Set_ViewCalculatedMembers(RHS:WordBool):HResult;stdcall;
		function Get_DisplayContextTooltips(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayContextTooltips(RHS:WordBool):HResult;stdcall;
		function Get_ShowDrillIndicators(out RHS:WordBool):HResult;stdcall;
		function Set_ShowDrillIndicators(RHS:WordBool):HResult;stdcall;
		function Get_DisplayEmptyColumn(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayEmptyColumn(RHS:WordBool):HResult;stdcall;
		function Get_DisplayEmptyRow(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayEmptyRow(RHS:WordBool):HResult;stdcall;
		function Get_DisplayMemberPropertyTooltips(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayMemberPropertyTooltips(RHS:WordBool):HResult;stdcall;
		function Get_ShowValuesRow(out RHS:WordBool):HResult;stdcall;
		function Set_ShowValuesRow(RHS:WordBool):HResult;stdcall;
		function Get_DisplayNullString(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayNullString(RHS:WordBool):HResult;stdcall;
		function Get_NullString(out RHS:WideString):HResult;stdcall;
		function Set_NullString(const RHS:WideString):HResult;stdcall;
		function Get_DisplayErrorString(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayErrorString(RHS:WordBool):HResult;stdcall;
		function Get_ErrorString(out RHS:WideString):HResult;stdcall;
		function Set_ErrorString(const RHS:WideString):HResult;stdcall;
		function Get_HasAutoFormat(out RHS:WordBool):HResult;stdcall;
		function Set_HasAutoFormat(RHS:WordBool):HResult;stdcall;
		function Get_PageFieldOrder(out RHS:WordBool):HResult;stdcall;
		function Set_PageFieldOrder(RHS:WordBool):HResult;stdcall;
		function Get_MergeLabels(out RHS:WordBool):HResult;stdcall;
		function Set_MergeLabels(RHS:WordBool):HResult;stdcall;
		function Get_PreserveFormatting(out RHS:WordBool):HResult;stdcall;
		function Set_PreserveFormatting(RHS:WordBool):HResult;stdcall;
		function Get_PageFieldWrapCount(out RHS:Integer):HResult;stdcall;
		function Set_PageFieldWrapCount(RHS:Integer):HResult;stdcall;
		function Get_CompactRowIndent(out RHS:Integer):HResult;stdcall;
		function Set_CompactRowIndent(RHS:Integer):HResult;stdcall;
		function Get_PrintDrillIndicators(out RHS:WordBool):HResult;stdcall;
		function Set_PrintDrillIndicators(RHS:WordBool):HResult;stdcall;
		function Get_RepeatItemsOnEachPrintedPage(out RHS:WordBool):HResult;stdcall;
		function Set_RepeatItemsOnEachPrintedPage(RHS:WordBool):HResult;stdcall;
		function Get_PrintTitles(out RHS:WordBool):HResult;stdcall;
		function Set_PrintTitles(RHS:WordBool):HResult;stdcall;
		function Get_AllowMultipleFilters(out RHS:WordBool):HResult;stdcall;
		function Set_AllowMultipleFilters(RHS:WordBool):HResult;stdcall;
		function Get_CalculatedMembersInFilters(out RHS:WordBool):HResult;stdcall;
		function Set_CalculatedMembersInFilters(RHS:WordBool):HResult;stdcall;
		function Get_VisualTotalsForSets(out RHS:WordBool):HResult;stdcall;
		function Set_VisualTotalsForSets(RHS:WordBool):HResult;stdcall;
		function Get_VisualTotals(out RHS:WordBool):HResult;stdcall;
		function Set_VisualTotals(RHS:WordBool):HResult;stdcall;
		function Get_TotalsAnnotation(out RHS:WordBool):HResult;stdcall;
		function Set_TotalsAnnotation(RHS:WordBool):HResult;stdcall;
		function Get_RowGrand(out RHS:WordBool):HResult;stdcall;
		function Set_RowGrand(RHS:WordBool):HResult;stdcall;
		function Get_ColumnGrand(out RHS:WordBool):HResult;stdcall;
		function Set_ColumnGrand(RHS:WordBool):HResult;stdcall;
		function Get_SubtotalHiddenPageItems(out RHS:WordBool):HResult;stdcall;
		function Set_SubtotalHiddenPageItems(RHS:WordBool):HResult;stdcall;
		function Get_SortUsingCustomLists(out RHS:WordBool):HResult;stdcall;
		function Set_SortUsingCustomLists(RHS:WordBool):HResult;stdcall;
		function Get_SaveData(out RHS:WordBool):HResult;stdcall;
		function Set_SaveData(RHS:WordBool):HResult;stdcall;
		function Get_EnableDrilldown(out RHS:WordBool):HResult;stdcall;
		function Set_EnableDrilldown(RHS:WordBool):HResult;stdcall;
		function Get_RefreshOnFileOpen(out RHS:WordBool):HResult;stdcall;
		function Set_RefreshOnFileOpen(RHS:WordBool):HResult;stdcall;
		function Get_xlMissingItemsNone(out RHS:Integer):HResult;stdcall;
		function Set_xlMissingItemsNone(RHS:Integer):HResult;stdcall;
		function Get_Subtotals(out RHS:WordBool):HResult;stdcall;
		function Set_Subtotals(RHS:WordBool):HResult;stdcall;
		function Get_SubtotalLocation(out RHS:WordBool):HResult;stdcall;
		function Set_SubtotalLocation(RHS:WordBool):HResult;stdcall;
		function Get_LayoutBlankLine(out RHS:WordBool):HResult;stdcall;
		function Set_LayoutBlankLine(RHS:WordBool):HResult;stdcall;
		function Get_RowAxisLayout(out RHS:XlLayoutRowType):HResult;stdcall;
		function Set_RowAxisLayout(RHS:XlLayoutRowType):HResult;stdcall;
		function Get_RepeatAllLabels(out RHS:XlPivotFieldRepeatLabels):HResult;stdcall;
		function Set_RepeatAllLabels(RHS:XlPivotFieldRepeatLabels):HResult;stdcall;
		function Get_DisplayImmediateItems(out RHS:WordBool):HResult;stdcall;
		function Set_DisplayImmediateItems(RHS:WordBool):HResult;stdcall;
		function Get_EnableWriteback(out RHS:WordBool):HResult;stdcall;
		function Set_EnableWriteback(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICommentsThreaded
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244FC-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICommentsThreaded=interface(IDispatch)
		['{000244FC-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Item(Index:Integer;out RHS:CommentThreaded):HResult;stdcall;
		function Get__Default(Index:Integer;out RHS:CommentThreaded):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICommentThreaded
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244FD-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICommentThreaded=interface(IDispatch)
		['{000244FD-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function AddReply(Text:OleVariant;out RHS:CommentThreaded):HResult;stdcall;
		function Delete:HResult;stdcall;
		function Text(Text:OleVariant;Start:OleVariant;Overwrite:OleVariant;out RHS:WideString):HResult;stdcall;
		function Get_Replies(out RHS:CommentsThreaded):HResult;stdcall;
		function Get_Author(out RHS:Author):HResult;stdcall;
		function Get_Date(out RHS:OleVariant):HResult;stdcall;
		function Next(out RHS:CommentThreaded):HResult;stdcall;
		function Previous(out RHS:CommentThreaded):HResult;stdcall;
		function Get_Resolved(out RHS:WordBool):HResult;stdcall;
		function Set_Resolved(RHS:WordBool):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: IAuthor
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244FE-0001-0000-C000-000000000046}
	// *********************************************************************//
	IAuthor=interface(IDispatch)
		['{000244FE-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Get_ProviderID(out RHS:WideString):HResult;stdcall;
		function Get_UserID(out RHS:WideString):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: INamedSheetViewCollection
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024501-0001-0000-C000-000000000046}
	// *********************************************************************//
	INamedSheetViewCollection=interface(IDispatch)
		['{00024501-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Count(out RHS:Integer):HResult;stdcall;
		function Add(const Name:WideString;out RHS:NamedSheetView):HResult;stdcall;
		function EnterTemporary(out RHS:NamedSheetView):HResult;stdcall;
		function Exit:HResult;stdcall;
		function GetActive(out RHS:NamedSheetView):HResult;stdcall;
		function GetItem(const Name:WideString;out RHS:NamedSheetView):HResult;stdcall;
		function GetItemAt(Index:Integer;out RHS:NamedSheetView):HResult;stdcall;
		function Get__NewEnum(out RHS:IUnknown):HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: INamedSheetView
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024502-0001-0000-C000-000000000046}
	// *********************************************************************//
	INamedSheetView=interface(IDispatch)
		['{00024502-0001-0000-C000-000000000046}']
		function Get_Application(out RHS:ExcelApplication):HResult;stdcall;
		function Get_Creator(out RHS:XlCreator):HResult;stdcall;
		function Get_Parent(out RHS:IDispatch):HResult;stdcall;
		function Get_Name(out RHS:WideString):HResult;stdcall;
		function Set_Name(const RHS:WideString):HResult;stdcall;
		function Duplicate(Name:OleVariant;out RHS:NamedSheetView):HResult;stdcall;
		function Activate:HResult;stdcall;
		function Delete:HResult;stdcall;
	end;

	// *********************************************************************//
	// DispIntf:  Font
	// Flags:     (4096) Dispatchable
	// GUID:      {0002084D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Font=dispinterface
		['{0002084D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Background:OleVariant dispid 180;
		property Bold:OleVariant dispid 96;
		property Color:OleVariant dispid 99;
		property ColorIndex:OleVariant dispid 97;
		property FontStyle:OleVariant dispid 177;
		property Italic:OleVariant dispid 101;
		property Name:OleVariant dispid 110;
		property OutlineFont:OleVariant dispid 221;
		property Shadow:OleVariant dispid 103;
		property Size:OleVariant dispid 104;
		property Strikethrough:OleVariant dispid 105;
		property Subscript:OleVariant dispid 179;
		property Superscript:OleVariant dispid 178;
		property Underline:OleVariant dispid 106;
		property ThemeColor:OleVariant dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
		property ThemeFont:XlThemeFont dispid 2367;
	end;

	// *********************************************************************//
	// DispIntf:  Window
	// Flags:     (4096) Dispatchable
	// GUID:      {00020893-0000-0000-C000-000000000046}
	// *********************************************************************//
	Window=dispinterface
		['{00020893-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Activate:OleVariant;dispid 304;
		function ActivateNext:OleVariant;dispid 1115;
		function ActivatePrevious:OleVariant;dispid 1116;
		property ActiveCell:ExcelRange readonly dispid 305;
		property ActiveChart:ExcelChart readonly dispid 183;
		property ActivePane:Pane readonly dispid 642;
		property ActiveSheet:IDispatch readonly dispid 307;
		property Caption:OleVariant dispid 139;
		function Close(SaveChanges:OleVariant;Filename:OleVariant;RouteWorkbook:OleVariant):WordBool;dispid 277;
		property DisplayFormulas:WordBool dispid 644;
		property DisplayGridlines:WordBool dispid 645;
		property DisplayHeadings:WordBool dispid 646;
		property DisplayHorizontalScrollBar:WordBool dispid 921;
		property DisplayOutline:WordBool dispid 647;
		property _DisplayRightToLeft:WordBool dispid 648;
		property DisplayVerticalScrollBar:WordBool dispid 922;
		property DisplayWorkbookTabs:WordBool dispid 923;
		property DisplayZeros:WordBool dispid 649;
		property EnableResize:WordBool dispid 1192;
		property FreezePanes:WordBool dispid 650;
		property GridlineColor:Integer dispid 651;
		property GridlineColorIndex:XlColorIndex dispid 652;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		function LargeScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant):OleVariant;dispid 547;
		property Left:Double dispid 127;
		function NewWindow:Window;dispid 280;
		property OnWindow:WideString dispid 623;
		property Panes:Panes readonly dispid 653;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):OleVariant;dispid 1772;
		function PrintPreview(EnableChanges:OleVariant):OleVariant;dispid 281;
		property RangeSelection:ExcelRange readonly dispid 1189;
		property ScrollColumn:Integer dispid 654;
		property ScrollRow:Integer dispid 655;
		function ScrollWorkbookTabs(Sheets:OleVariant;Position:OleVariant):OleVariant;dispid 662;
		property SelectedSheets:Sheets readonly dispid 656;
		property Selection:IDispatch readonly dispid 147;
		function SmallScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant):OleVariant;dispid 548;
		property Split:WordBool dispid 657;
		property SplitColumn:Integer dispid 658;
		property SplitHorizontal:Double dispid 659;
		property SplitRow:Integer dispid 660;
		property SplitVertical:Double dispid 661;
		property TabRatio:Double dispid 673;
		property Top:Double dispid 126;
		property Type_:XlWindowType readonly dispid 108;
		property UsableHeight:Double readonly dispid 389;
		property UsableWidth:Double readonly dispid 390;
		property Visible:WordBool dispid 558;
		property VisibleRange:ExcelRange readonly dispid 1118;
		property Width:Double dispid 122;
		property WindowNumber:Integer readonly dispid 1119;
		property WindowState:XlWindowState dispid 396;
		property Zoom:OleVariant dispid 663;
		property View:XlWindowView dispid 1194;
		property DisplayRightToLeft:WordBool dispid 1774;
		function PointsToScreenPixelsX(Points:Integer):Integer;dispid 1776;
		function PointsToScreenPixelsY(Points:Integer):Integer;dispid 1777;
		function RangeFromPoint(x:Integer;y:Integer):IDispatch;dispid 1778;
		procedure ScrollIntoView(Left:Integer;Top:Integer;Width:Integer;Height:Integer;Start:OleVariant);dispid 1781;
		property SheetViews:SheetViews readonly dispid 2368;
		property ActiveSheetView:IDispatch readonly dispid 2369;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):OleVariant;dispid 2361;
		property DisplayRuler:WordBool dispid 2370;
		property AutoFilterDateGrouping:WordBool dispid 2371;
		property DisplayWhitespace:WordBool dispid 2372;
		property HWND_:Integer readonly dispid 1950;
	end;

	// *********************************************************************//
	// DispIntf:  Windows
	// Flags:     (4096) Dispatchable
	// GUID:      {00020892-0000-0000-C000-000000000046}
	// *********************************************************************//
	Windows=dispinterface
		['{00020892-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Arrange(ArrangeStyle:XlArrangeStyle;ActiveWorkbook:OleVariant;SyncHorizontal:OleVariant;
			SyncVertical:OleVariant):OleVariant;dispid 638;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:Window readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:Window readonly dispid 0;default;
		function CompareSideBySideWith(WindowName:OleVariant):WordBool;dispid 2246;
		function BreakSideBySide:WordBool;dispid 2248;
		property SyncScrollingSideBySide:WordBool dispid 2249;
		procedure ResetPositionsSideBySide;dispid 2250;
	end;

	// *********************************************************************//
	// DispIntf:  AppEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024413-0000-0000-C000-000000000046}
	// *********************************************************************//
	AppEvents=dispinterface
		['{00024413-0000-0000-C000-000000000046}']
		procedure NewWorkbook(const Wb:ExcelWorkbook);dispid 1565;
		procedure SheetSelectionChange(const Sh:IDispatch;const Target:ExcelRange);dispid 1558;
		procedure SheetBeforeDoubleClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool);dispid 1559;
		procedure SheetBeforeRightClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool);dispid 1560;
		procedure SheetActivate(const Sh:IDispatch);dispid 1561;
		procedure SheetDeactivate(const Sh:IDispatch);dispid 1562;
		procedure SheetCalculate(const Sh:IDispatch);dispid 1563;
		procedure SheetChange(const Sh:IDispatch;const Target:ExcelRange);dispid 1564;
		procedure WorkbookOpen(const Wb:ExcelWorkbook);dispid 1567;
		procedure WorkbookActivate(const Wb:ExcelWorkbook);dispid 1568;
		procedure WorkbookDeactivate(const Wb:ExcelWorkbook);dispid 1569;
		procedure WorkbookBeforeClose(const Wb:ExcelWorkbook;var Cancel:WordBool);dispid 1570;
		procedure WorkbookBeforeSave(const Wb:ExcelWorkbook;SaveAsUI:WordBool;var Cancel:WordBool);dispid 1571;
		procedure WorkbookBeforePrint(const Wb:ExcelWorkbook;var Cancel:WordBool);dispid 1572;
		procedure WorkbookNewSheet(const Wb:ExcelWorkbook;const Sh:IDispatch);dispid 1573;
		procedure WorkbookAddinInstall(const Wb:ExcelWorkbook);dispid 1574;
		procedure WorkbookAddinUninstall(const Wb:ExcelWorkbook);dispid 1575;
		procedure WindowResize(const Wb:ExcelWorkbook;const Wn:Window);dispid 1554;
		procedure WindowActivate(const Wb:ExcelWorkbook;const Wn:Window);dispid 1556;
		procedure WindowDeactivate(const Wb:ExcelWorkbook;const Wn:Window);dispid 1557;
		procedure SheetFollowHyperlink(const Sh:IDispatch;const Target:Hyperlink);dispid 1854;
		procedure SheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable);dispid 2157;
		procedure WorkbookPivotTableCloseConnection(const Wb:ExcelWorkbook;const Target:PivotTable);dispid 2160;
		procedure WorkbookPivotTableOpenConnection(const Wb:ExcelWorkbook;const Target:PivotTable);dispid 2161;
		procedure WorkbookSync(const Wb:ExcelWorkbook;SyncEventType:MsoSyncEventType);dispid 2289;
		procedure WorkbookBeforeXmlImport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;IsRefresh:WordBool;
			var Cancel:WordBool);dispid 2290;
		procedure WorkbookAfterXmlImport(const Wb:ExcelWorkbook;const Map:XmlMap;IsRefresh:WordBool;
			Result:XlXmlImportResult);dispid 2291;
		procedure WorkbookBeforeXmlExport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;var Cancel:WordBool);
			dispid 2292;
		procedure WorkbookAfterXmlExport(const Wb:ExcelWorkbook;const Map:XmlMap;const Url:WideString;
			Result:XlXmlExportResult);dispid 2293;
		procedure WorkbookRowsetComplete(const Wb:ExcelWorkbook;const Description:WideString;const Sheet:WideString;
			Success:WordBool);dispid 2611;
		procedure AfterCalculate;dispid 2612;
		procedure SheetPivotTableAfterValueChange(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			const TargetRange:ExcelRange);dispid 2895;
		procedure SheetPivotTableBeforeAllocateChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2896;
		procedure SheetPivotTableBeforeCommitChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2897;
		procedure SheetPivotTableBeforeDiscardChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer);dispid 2898;
		procedure ProtectedViewWindowOpen(const Pvw:ProtectedViewWindow);dispid 2903;
		procedure ProtectedViewWindowBeforeEdit(const Pvw:ProtectedViewWindow;var Cancel:WordBool);dispid 2905;
		procedure ProtectedViewWindowBeforeClose(const Pvw:ProtectedViewWindow;Reason:XlProtectedViewCloseReason;
			var Cancel:WordBool);dispid 2906;
		procedure ProtectedViewWindowResize(const Pvw:ProtectedViewWindow);dispid 2908;
		procedure ProtectedViewWindowActivate(const Pvw:ProtectedViewWindow);dispid 2909;
		procedure ProtectedViewWindowDeactivate(const Pvw:ProtectedViewWindow);dispid 2910;
		procedure WorkbookAfterSave(const Wb:ExcelWorkbook;Success:WordBool);dispid 2911;
		procedure WorkbookNewChart(const Wb:ExcelWorkbook;const Ch:ExcelChart);dispid 2912;
		procedure SheetLensGalleryRenderComplete(const Sh:IDispatch);dispid 3075;
		procedure SheetTableUpdate(const Sh:IDispatch;const Target:TableObject);dispid 3076;
		procedure WorkbookModelChange(const Wb:ExcelWorkbook;const Changes:ModelChanges);dispid 3080;
		procedure SheetBeforeDelete(const Sh:IDispatch);dispid 3079;
		procedure WorkbookBeforeRemoteChange(const Wb:ExcelWorkbook);dispid 3350;
		procedure WorkbookAfterRemoteChange(const Wb:ExcelWorkbook);dispid 3351;
		procedure RemoteSheetChange(const Sh:IDispatch;const Target:ExcelRange);dispid 3344;
		procedure RemoteWorkbookNewSheet(const Wb:ExcelWorkbook;const Sh:IDispatch);dispid 3352;
		procedure RemoteWorkbookNewChart(const Wb:ExcelWorkbook;const Ch:ExcelChart);dispid 3353;
		procedure RemoteSheetBeforeDelete(const Sh:IDispatch);dispid 3347;
		procedure RemoteSheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable);dispid 3348;
	end;

	// *********************************************************************//
	// DispIntf:  WorksheetFunction
	// Flags:     (4096) Dispatchable
	// GUID:      {00020845-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorksheetFunction=dispinterface
		['{00020845-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function _WSFunction(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):OleVariant;dispid 169;
		function Count(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16384;
		function IsNA(Arg1:OleVariant):WordBool;dispid 16386;
		function IsError(Arg1:OleVariant):WordBool;dispid 16387;
		function Sum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16388;
		function Average(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16389;
		function Min(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16390;
		function Max(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16391;
		function Npv(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16395;
		function StDev(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16396;
		function Dollar(Arg1:Double;Arg2:OleVariant):WideString;dispid 16397;
		function Fixed(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant):WideString;dispid 16398;
		function Pi:Double;dispid 16403;
		function Ln(Arg1:Double):Double;dispid 16406;
		function Log10(Arg1:Double):Double;dispid 16407;
		function Round(Arg1:Double;Arg2:Double):Double;dispid 16411;
		function Lookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):OleVariant;dispid 16412;
		function Index(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16413;
		function Rept(const Arg1:WideString;Arg2:Double):WideString;dispid 16414;
		function And_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WordBool;
			dispid 16420;
		function Or_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WordBool;
			dispid 16421;
		function DCount(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16424;
		function DSum(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16425;
		function DAverage(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16426;
		function DMin(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16427;
		function DMax(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16428;
		function DStDev(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16429;
		function Var_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16430;
		function DVar(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16431;
		function Text(Arg1:OleVariant;const Arg2:WideString):WideString;dispid 16432;
		function LinEst(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16433;
		function Trend(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16434;
		function LogEst(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16435;
		function Growth(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16436;
		function Pv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16440;
		function Fv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16441;
		function NPer(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16442;
		function Pmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16443;
		function Rate(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant):Double;
			dispid 16444;
		function MIrr(Arg1:OleVariant;Arg2:Double;Arg3:Double):Double;dispid 16445;
		function Irr(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16446;
		function Match(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16448;
		function Weekday(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16454;
		function Search(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant):Double;dispid 16466;
		function Transpose(Arg1:OleVariant):OleVariant;dispid 16467;
		function Atan2(Arg1:Double;Arg2:Double):Double;dispid 16481;
		function Asin(Arg1:Double):Double;dispid 16482;
		function Acos(Arg1:Double):Double;dispid 16483;
		function Choose(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 16484;
		function HLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16485;
		function VLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16486;
		function Log(Arg1:Double;Arg2:OleVariant):Double;dispid 16493;
		function Proper(const Arg1:WideString):WideString;dispid 16498;
		function Trim(const Arg1:WideString):WideString;dispid 16502;
		function Replace(const Arg1:WideString;Arg2:Double;Arg3:Double;const Arg4:WideString):WideString;dispid 16503;
		function Substitute(const Arg1:WideString;const Arg2:WideString;const Arg3:WideString;Arg4:OleVariant):WideString;
			dispid 16504;
		function Find(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant):Double;dispid 16508;
		function IsErr(Arg1:OleVariant):WordBool;dispid 16510;
		function IsText(Arg1:OleVariant):WordBool;dispid 16511;
		function IsNumber(Arg1:OleVariant):WordBool;dispid 16512;
		function Sln(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16526;
		function Syd(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double):Double;dispid 16527;
		function Ddb(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant):Double;dispid 16528;
		function Clean(const Arg1:WideString):WideString;dispid 16546;
		function MDeterm(Arg1:OleVariant):Double;dispid 16547;
		function MInverse(Arg1:OleVariant):OleVariant;dispid 16548;
		function MMult(Arg1:OleVariant;Arg2:OleVariant):OleVariant;dispid 16549;
		function Ipmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;Arg6:OleVariant):Double;dispid 16551;
		function Ppmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant;Arg6:OleVariant):Double;dispid 16552;
		function CountA(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16553;
		function Product(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16567;
		function Fact(Arg1:Double):Double;dispid 16568;
		function DProduct(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16573;
		function IsNonText(Arg1:OleVariant):WordBool;dispid 16574;
		function StDevP(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16577;
		function VarP(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16578;
		function DStDevP(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16579;
		function DVarP(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16580;
		function IsLogical(Arg1:OleVariant):WordBool;dispid 16582;
		function DCountA(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16583;
		function USDollar(Arg1:Double;Arg2:Double):WideString;dispid 16588;
		function FindB(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant):Double;dispid 16589;
		function SearchB(const Arg1:WideString;const Arg2:WideString;Arg3:OleVariant):Double;dispid 16590;
		function ReplaceB(const Arg1:WideString;Arg2:Double;Arg3:Double;const Arg4:WideString):WideString;dispid 16591;
		function RoundUp(Arg1:Double;Arg2:Double):Double;dispid 16596;
		function RoundDown(Arg1:Double;Arg2:Double):Double;dispid 16597;
		function Rank(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant):Double;dispid 16600;
		function Days360(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16604;
		function Vdb(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:Double;Arg6:OleVariant;Arg7:OleVariant):Double;
			dispid 16606;
		function Median(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16611;
		function SumProduct(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16612;
		function Sinh(Arg1:Double):Double;dispid 16613;
		function Cosh(Arg1:Double):Double;dispid 16614;
		function Tanh(Arg1:Double):Double;dispid 16615;
		function Asinh(Arg1:Double):Double;dispid 16616;
		function Acosh(Arg1:Double):Double;dispid 16617;
		function Atanh(Arg1:Double):Double;dispid 16618;
		function DGet(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):OleVariant;dispid 16619;
		function Db(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:OleVariant):Double;dispid 16631;
		function Frequency(Arg1:OleVariant;Arg2:OleVariant):OleVariant;dispid 16636;
		function AveDev(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16653;
		function BetaDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16654;
		function GammaLn(Arg1:Double):Double;dispid 16655;
		function BetaInv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16656;
		function BinomDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16657;
		function ChiDist(Arg1:Double;Arg2:Double):Double;dispid 16658;
		function ChiInv(Arg1:Double;Arg2:Double):Double;dispid 16659;
		function Combin(Arg1:Double;Arg2:Double):Double;dispid 16660;
		function Confidence(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16661;
		function CritBinom(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16662;
		function Even(Arg1:Double):Double;dispid 16663;
		function ExponDist(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16664;
		function FDist(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16665;
		function FInv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16666;
		function Fisher(Arg1:Double):Double;dispid 16667;
		function FisherInv(Arg1:Double):Double;dispid 16668;
		function Floor(Arg1:Double;Arg2:Double):Double;dispid 16669;
		function GammaDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16670;
		function GammaInv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16671;
		function Ceiling(Arg1:Double;Arg2:Double):Double;dispid 16672;
		function HypGeomDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double):Double;dispid 16673;
		function LogNormDist(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16674;
		function LogInv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16675;
		function NegBinomDist(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16676;
		function NormDist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16677;
		function NormSDist(Arg1:Double):Double;dispid 16678;
		function NormInv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16679;
		function NormSInv(Arg1:Double):Double;dispid 16680;
		function Standardize(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16681;
		function Odd(Arg1:Double):Double;dispid 16682;
		function Permut(Arg1:Double;Arg2:Double):Double;dispid 16683;
		function Poisson(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16684;
		function TDist(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16685;
		function Weibull(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16686;
		function SumXMY2(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16687;
		function SumX2MY2(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16688;
		function SumX2PY2(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16689;
		function ChiTest(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16690;
		function Correl(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16691;
		function Covar(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16692;
		function Forecast(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16693;
		function FTest(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16694;
		function Intercept(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16695;
		function Pearson(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16696;
		function RSq(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16697;
		function StEyx(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16698;
		function Slope(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16699;
		function TTest(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:Double):Double;dispid 16700;
		function Prob(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:OleVariant):Double;dispid 16701;
		function DevSq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16702;
		function GeoMean(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16703;
		function HarMean(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16704;
		function SumSq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16705;
		function Kurt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16706;
		function Skew(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16707;
		function ZTest(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant):Double;dispid 16708;
		function Large(Arg1:OleVariant;Arg2:Double):Double;dispid 16709;
		function Small(Arg1:OleVariant;Arg2:Double):Double;dispid 16710;
		function Quartile(Arg1:OleVariant;Arg2:Double):Double;dispid 16711;
		function Percentile(Arg1:OleVariant;Arg2:Double):Double;dispid 16712;
		function PercentRank(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant):Double;dispid 16713;
		function Mode(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16714;
		function TrimMean(Arg1:OleVariant;Arg2:Double):Double;dispid 16715;
		function TInv(Arg1:Double;Arg2:Double):Double;dispid 16716;
		function Power(Arg1:Double;Arg2:Double):Double;dispid 16721;
		function Radians(Arg1:Double):Double;dispid 16726;
		function Degrees(Arg1:Double):Double;dispid 16727;
		function Subtotal(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16728;
		function SumIf(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16729;
		function CountIf(const Arg1:ExcelRange;Arg2:OleVariant):Double;dispid 16730;
		function CountBlank(const Arg1:ExcelRange):Double;dispid 16731;
		function Ispmt(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double):Double;dispid 16734;
		function Roman(Arg1:Double;Arg2:OleVariant):WideString;dispid 16738;
		function Asc(const Arg1:WideString):WideString;dispid 16598;
		function Dbcs(const Arg1:WideString):WideString;dispid 16599;
		function Phonetic(const Arg1:ExcelRange):WideString;dispid 16744;
		function BahtText(Arg1:Double):WideString;dispid 16752;
		function ThaiDayOfWeek(Arg1:Double):WideString;dispid 16753;
		function ThaiDigit(const Arg1:WideString):WideString;dispid 16754;
		function ThaiMonthOfYear(Arg1:Double):WideString;dispid 16755;
		function ThaiNumSound(Arg1:Double):WideString;dispid 16756;
		function ThaiNumString(Arg1:Double):WideString;dispid 16757;
		function ThaiStringLength(const Arg1:WideString):Double;dispid 16758;
		function IsThaiDigit(const Arg1:WideString):WordBool;dispid 16759;
		function RoundBahtDown(Arg1:Double):Double;dispid 16760;
		function RoundBahtUp(Arg1:Double):Double;dispid 16761;
		function ThaiYear(Arg1:Double):Double;dispid 16762;
		function RTD(progID:OleVariant;server:OleVariant;topic1:OleVariant;topic2:OleVariant;topic3:OleVariant;
			topic4:OleVariant;topic5:OleVariant;topic6:OleVariant;topic7:OleVariant;topic8:OleVariant;topic9:OleVariant;
			topic10:OleVariant;topic11:OleVariant;topic12:OleVariant;topic13:OleVariant;topic14:OleVariant;topic15:OleVariant;
			topic16:OleVariant;topic17:OleVariant;topic18:OleVariant;topic19:OleVariant;topic20:OleVariant;topic21:OleVariant;
			topic22:OleVariant;topic23:OleVariant;topic24:OleVariant;topic25:OleVariant;topic26:OleVariant;topic27:OleVariant;
			topic28:OleVariant):OleVariant;dispid 16763;
		function Hex2Bin(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16768;
		function Hex2Dec(Arg1:OleVariant):WideString;dispid 16769;
		function Hex2Oct(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16770;
		function Dec2Bin(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16771;
		function Dec2Hex(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16772;
		function Dec2Oct(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16773;
		function Oct2Bin(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16774;
		function Oct2Hex(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16775;
		function Oct2Dec(Arg1:OleVariant):WideString;dispid 16776;
		function Bin2Dec(Arg1:OleVariant):WideString;dispid 16777;
		function Bin2Oct(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16778;
		function Bin2Hex(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16779;
		function ImSub(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16780;
		function ImDiv(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16781;
		function ImPower(Arg1:OleVariant;Arg2:OleVariant):WideString;dispid 16782;
		function ImAbs(Arg1:OleVariant):WideString;dispid 16783;
		function ImSqrt(Arg1:OleVariant):WideString;dispid 16784;
		function ImLn(Arg1:OleVariant):WideString;dispid 16785;
		function ImLog2(Arg1:OleVariant):WideString;dispid 16786;
		function ImLog10(Arg1:OleVariant):WideString;dispid 16787;
		function ImSin(Arg1:OleVariant):WideString;dispid 16788;
		function ImCos(Arg1:OleVariant):WideString;dispid 16789;
		function ImExp(Arg1:OleVariant):WideString;dispid 16790;
		function ImArgument(Arg1:OleVariant):WideString;dispid 16791;
		function ImConjugate(Arg1:OleVariant):WideString;dispid 16792;
		function Imaginary(Arg1:OleVariant):Double;dispid 16793;
		function ImReal(Arg1:OleVariant):Double;dispid 16794;
		function Complex(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):WideString;dispid 16795;
		function ImSum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WideString;
			dispid 16796;
		function ImProduct(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WideString;
			dispid 16797;
		function SeriesSum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16798;
		function FactDouble(Arg1:OleVariant):Double;dispid 16799;
		function SqrtPi(Arg1:OleVariant):Double;dispid 16800;
		function Quotient(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16801;
		function Delta(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16802;
		function GeStep(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16803;
		function IsEven(Arg1:OleVariant):WordBool;dispid 16804;
		function IsOdd(Arg1:OleVariant):WordBool;dispid 16805;
		function MRound(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16806;
		function Erf(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16807;
		function ErfC(Arg1:OleVariant):Double;dispid 16808;
		function BesselJ(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16809;
		function BesselK(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16810;
		function BesselY(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16811;
		function BesselI(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16812;
		function Xirr(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16813;
		function Xnpv(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16814;
		function PriceMat(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16815;
		function YieldMat(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16816;
		function IntRate(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;
			dispid 16817;
		function Received(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;
			dispid 16818;
		function Disc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16819;
		function PriceDisc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;
			dispid 16820;
		function YieldDisc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;
			dispid 16821;
		function TBillEq(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16822;
		function TBillPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16823;
		function TBillYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16824;
		function Price(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant):Double;dispid 16825;
		function DollarDe(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16827;
		function DollarFr(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16828;
		function Nominal(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16829;
		function Effect(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16830;
		function CumPrinc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16831;
		function CumIPmt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16832;
		function EDate(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16833;
		function EoMonth(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16834;
		function YearFrac(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16835;
		function CoupDayBs(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16836;
		function CoupDays(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16837;
		function CoupDaysNc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16838;
		function CoupNcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16839;
		function CoupNum(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16840;
		function CoupPcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16841;
		function Duration(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16842;
		function MDuration(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16843;
		function OddLPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant):Double;dispid 16844;
		function OddLYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant):Double;dispid 16845;
		function OddFPrice(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant):Double;dispid 16846;
		function OddFYield(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant):Double;dispid 16847;
		function RandBetween(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16848;
		function WeekNum(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16849;
		function AmorDegrc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant):Double;dispid 16850;
		function AmorLinc(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant):Double;dispid 16851;
		function Convert(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16852;
		function AccrInt(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant):Double;dispid 16853;
		function AccrIntM(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):Double;
			dispid 16854;
		function WorkDay(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16855;
		function NetworkDays(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16856;
		function Gcd(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16857;
		function MultiNomial(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):Double;dispid 16858;
		function Lcm(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16859;
		function FVSchedule(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16860;
		function SumIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):Double;
			dispid 16866;
		function CountIfs(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;
			Arg30:OleVariant):Double;dispid 16865;
		function AverageIf(const Arg1:ExcelRange;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16867;
		function AverageIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):Double;
			dispid 16868;
		function IfError(Arg1:OleVariant;Arg2:OleVariant):OleVariant;dispid 16864;
		function Aggregate(Arg1:Double;Arg2:Double;const Arg3:ExcelRange;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16869;
		function Confidence_Norm(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16872;
		function Confidence_T(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16873;
		function ChiSq_Test(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16874;
		function F_Test(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16875;
		function Covariance_P(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16876;
		function Covariance_S(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16877;
		function Expon_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16878;
		function Gamma_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16879;
		function Gamma_Inv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16880;
		function Mode_Mult(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 16881;
		function Mode_Sngl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16882;
		function Norm_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16883;
		function Norm_Inv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16884;
		function Percentile_Exc(Arg1:OleVariant;Arg2:Double):Double;dispid 16885;
		function Percentile_Inc(Arg1:OleVariant;Arg2:Double):Double;dispid 16886;
		function PercentRank_Exc(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant):Double;dispid 16887;
		function PercentRank_Inc(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant):Double;dispid 16888;
		function Poisson_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16889;
		function Quartile_Exc(Arg1:OleVariant;Arg2:Double):Double;dispid 16890;
		function Quartile_Inc(Arg1:OleVariant;Arg2:Double):Double;dispid 16891;
		function Rank_Avg(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant):Double;dispid 16892;
		function Rank_Eq(Arg1:Double;const Arg2:ExcelRange;Arg3:OleVariant):Double;dispid 16893;
		function StDev_S(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16894;
		function StDev_P(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16895;
		function T_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16896;
		function T_Dist_2T(Arg1:Double;Arg2:Double):Double;dispid 16897;
		function T_Dist_RT(Arg1:Double;Arg2:Double):Double;dispid 16898;
		function T_Inv(Arg1:Double;Arg2:Double):Double;dispid 16899;
		function T_Inv_2T(Arg1:Double;Arg2:Double):Double;dispid 16900;
		function Var_S(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16901;
		function Var_P(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16902;
		function Weibull_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16903;
		function NetworkDays_Intl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16904;
		function WorkDay_Intl(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 16905;
		function ISO_Ceiling(Arg1:Double;Arg2:OleVariant):Double;dispid 16907;
		function Dummy21(Arg1:Double;Arg2:Double):Double;dispid 2826;
		function Dummy19(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 2827;
		function Beta_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool;Arg5:OleVariant;Arg6:OleVariant):Double;
			dispid 16909;
		function Beta_Inv(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant):Double;dispid 16910;
		function ChiSq_Dist(Arg1:Double;Arg2:Double;Arg3:WordBool):Double;dispid 16911;
		function ChiSq_Dist_RT(Arg1:Double;Arg2:Double):Double;dispid 16912;
		function ChiSq_Inv(Arg1:Double;Arg2:Double):Double;dispid 16913;
		function ChiSq_Inv_RT(Arg1:Double;Arg2:Double):Double;dispid 16914;
		function F_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16915;
		function F_Dist_RT(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16916;
		function F_Inv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16917;
		function F_Inv_RT(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16918;
		function HypGeom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:Double;Arg5:WordBool):Double;dispid 16919;
		function LogNorm_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16920;
		function LogNorm_Inv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16921;
		function NegBinom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16922;
		function Norm_S_Dist(Arg1:Double;Arg2:WordBool):Double;dispid 16923;
		function Norm_S_Inv(Arg1:Double):Double;dispid 16924;
		function T_Test(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:Double):Double;dispid 16925;
		function Z_Test(Arg1:OleVariant;Arg2:Double;Arg3:OleVariant):Double;dispid 16926;
		function Binom_Dist(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:WordBool):Double;dispid 16870;
		function Binom_Inv(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16871;
		function Erf_Precise(Arg1:OleVariant):Double;dispid 16927;
		function ErfC_Precise(Arg1:OleVariant):Double;dispid 16928;
		function GammaLn_Precise(Arg1:Double):Double;dispid 16929;
		function Ceiling_Precise(Arg1:Double;Arg2:OleVariant):Double;dispid 16930;
		function Floor_Precise(Arg1:Double;Arg2:OleVariant):Double;dispid 16931;
		function Acot(Arg1:Double):Double;dispid 16932;
		function Acoth(Arg1:Double):Double;dispid 16933;
		function Cot(Arg1:Double):Double;dispid 16934;
		function Coth(Arg1:Double):Double;dispid 16935;
		function Csc(Arg1:Double):Double;dispid 16936;
		function Csch(Arg1:Double):Double;dispid 16937;
		function Sec(Arg1:Double):Double;dispid 16938;
		function Sech(Arg1:Double):Double;dispid 16939;
		function ImCot(Arg1:OleVariant):WideString;dispid 16941;
		function ImTan(Arg1:OleVariant):WideString;dispid 16940;
		function ImCsc(Arg1:OleVariant):WideString;dispid 16942;
		function ImCsch(Arg1:OleVariant):WideString;dispid 16943;
		function ImSec(Arg1:OleVariant):WideString;dispid 16944;
		function ImSech(Arg1:OleVariant):WideString;dispid 16945;
		function Bitand(Arg1:Double;Arg2:Double):Double;dispid 16946;
		function Bitor(Arg1:Double;Arg2:Double):Double;dispid 16947;
		function Bitxor(Arg1:Double;Arg2:Double):Double;dispid 16948;
		function Bitlshift(Arg1:Double;Arg2:Double):Double;dispid 16949;
		function Bitrshift(Arg1:Double;Arg2:Double):Double;dispid 16950;
		function Xor_(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WordBool;
			dispid 16953;
		function Combina(Arg1:Double;Arg2:Double):Double;dispid 16952;
		function Permutationa(Arg1:Double;Arg2:Double):Double;dispid 16951;
		function PDuration(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16954;
		function Base(Arg1:Double;Arg2:Double;Arg3:OleVariant):WideString;dispid 16955;
		function Decimal(const Arg1:WideString;Arg2:Double):Double;dispid 16956;
		function Days(Arg1:OleVariant;Arg2:OleVariant):Double;dispid 16957;
		function Binom_Dist_Range(Arg1:Double;Arg2:Double;Arg3:Double;Arg4:OleVariant):Double;dispid 16958;
		function Gamma(Arg1:Double):Double;dispid 16959;
		function Gauss(Arg1:Double):Double;dispid 16961;
		function Phi(Arg1:Double):Double;dispid 16962;
		function Skew_p(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):Double;
			dispid 16960;
		function Rri(Arg1:Double;Arg2:Double;Arg3:Double):Double;dispid 16963;
		function Unichar(Arg1:Double):WideString;dispid 16964;
		function Unicode(const Arg1:WideString):Double;dispid 16965;
		function Munit(Arg1:Double):OleVariant;dispid 16966;
		function Arabic(const Arg1:WideString):Double;dispid 16967;
		function IsoWeekNum(Arg1:Double;Arg2:OleVariant):Double;dispid 16968;
		function NumberValue(const Arg1:WideString;const Arg2:WideString;const Arg3:WideString):Double;dispid 16969;
		function IsFormula(const Arg1:ExcelRange):WordBool;dispid 16973;
		function IfNa(Arg1:OleVariant;Arg2:OleVariant):OleVariant;dispid 16974;
		function Ceiling_Math(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16975;
		function Floor_Math(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16976;
		function ImSinh(Arg1:OleVariant):WideString;dispid 16977;
		function ImCosh(Arg1:OleVariant):WideString;dispid 16978;
		function FilterXML(const Arg1:WideString;const Arg2:WideString):OleVariant;dispid 16979;
		function WebService(const Arg1:WideString):OleVariant;dispid 16980;
		function EncodeURL(const Arg1:WideString):OleVariant;dispid 16981;
		function Forecast_ETS(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:Double;dispid 16982;
		function Forecast_ETS_ConfInt(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant):Double;dispid 16983;
		function Forecast_ETS_Seasonality(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;
			dispid 16984;
		function Forecast_Linear(Arg1:Double;Arg2:OleVariant;Arg3:OleVariant):Double;dispid 16985;
		function Forecast_ETS_STAT(Arg1:OleVariant;Arg2:OleVariant;Arg3:Double;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant):Double;dispid 16986;
		function MaxIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):Double;
			dispid 16987;
		function MinIfs(const Arg1:ExcelRange;const Arg2:ExcelRange;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):Double;
			dispid 16988;
		function TextJoin(var Arg1:WideString;Arg2:WordBool;var Arg3:WideString;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):WideString;
			dispid 16989;
		function Concat(var Arg1:WideString;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):WideString;dispid 16990;
		function Sort(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 16999;
		function Unique(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):OleVariant;dispid 17000;
		function FieldValue(Arg1:OleVariant;const Arg2:WideString):OleVariant;dispid 16997;
		function Filter(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant):OleVariant;dispid 16998;
		function Sequence(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 17016;
		function RandArray(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant):OleVariant;
			dispid 17015;
		function Single(Arg1:OleVariant):OleVariant;dispid 16993;
		function SortBy(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 17014;
		function XMatch(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):Double;dispid 17012;
		function XLookup(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant)
			:OleVariant;dispid 17013;
		function StockHistory(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;
			Arg6:OleVariant;Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;
			Arg12:OleVariant;Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;
			Arg18:OleVariant;Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;
			Arg24:OleVariant;Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant):OleVariant;
			dispid 17017;
	end;

	// *********************************************************************//
	// DispIntf:  ExcelRange
	// Flags:     (4096) Dispatchable
	// GUID:      {00020846-0000-0000-C000-000000000046}
	// *********************************************************************//
	ExcelRange=dispinterface
		['{00020846-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Activate:OleVariant;dispid 304;
		property AddIndent:OleVariant dispid 1063;
		property Address[RowAbsolute:OleVariant;ColumnAbsolute:OleVariant;ReferenceStyle:XlReferenceStyle;
			External:OleVariant;RelativeTo:OleVariant]:WideString readonly dispid 236;
		property AddressLocal[RowAbsolute:OleVariant;ColumnAbsolute:OleVariant;ReferenceStyle:XlReferenceStyle;
			External:OleVariant;RelativeTo:OleVariant]:WideString readonly dispid 437;
		function AdvancedFilter(Action:XlFilterAction;CriteriaRange:OleVariant;CopyToRange:OleVariant;Unique:OleVariant)
			:OleVariant;dispid 876;
		function ApplyNames(Names:OleVariant;IgnoreRelativeAbsolute:OleVariant;UseRowColumnNames:OleVariant;
			OmitColumn:OleVariant;OmitRow:OleVariant;Order:XlApplyNamesOrder;AppendLast:OleVariant):OleVariant;dispid 441;
		function ApplyOutlineStyles:OleVariant;dispid 448;
		property Areas:Areas readonly dispid 568;
		function AutoComplete(const String_:WideString):WideString;dispid 1185;
		function AutoFill(const Destination:ExcelRange;Type_:XlAutoFillType):OleVariant;dispid 449;
		function _AutoFilter(Field:OleVariant;Criteria1:OleVariant;Operator_:XlAutoFilterOperator;Criteria2:OleVariant;
			VisibleDropDown:OleVariant):OleVariant;dispid 793;
		function AutoFit:OleVariant;dispid 237;
		function AutoFormat(Format:XlRangeAutoFormat;Number:OleVariant;Font:OleVariant;Alignment:OleVariant;
			Border:OleVariant;Pattern:OleVariant;Width:OleVariant):OleVariant;dispid 114;
		function AutoOutline:OleVariant;dispid 1036;
		function _BorderAround(LineStyle:OleVariant;Weight:XlBorderWeight;ColorIndex:XlColorIndex;Color:OleVariant)
			:OleVariant;dispid 1067;
		property Borders:Borders readonly dispid 435;
		function Calculate:OleVariant;dispid 279;
		property Cells:ExcelRange readonly dispid 238;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		function Clear:OleVariant;dispid 111;
		function ClearContents:OleVariant;dispid 113;
		function ClearFormats:OleVariant;dispid 112;
		function ClearNotes:OleVariant;dispid 239;
		function ClearOutline:OleVariant;dispid 1037;
		property Column:Integer readonly dispid 240;
		function ColumnDifferences(Comparison:OleVariant):ExcelRange;dispid 510;
		property Columns:ExcelRange readonly dispid 241;
		property ColumnWidth:OleVariant dispid 242;
		function Consolidate(Sources:OleVariant;Function_:OleVariant;TopRow:OleVariant;LeftColumn:OleVariant;
			CreateLinks:OleVariant):OleVariant;dispid 482;
		function Copy(Destination:OleVariant):OleVariant;dispid 551;
		function CopyFromRecordset(const Data:IUnknown;MaxRows:OleVariant;MaxColumns:OleVariant):Integer;dispid 1152;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		property Count:Integer readonly dispid 118;
		function CreateNames(Top:OleVariant;Left:OleVariant;Bottom:OleVariant;Right:OleVariant):OleVariant;dispid 457;
		function CreatePublisher(Edition:OleVariant;Appearance:XlPictureAppearance;ContainsPICT:OleVariant;
			ContainsBIFF:OleVariant;ContainsRTF:OleVariant;ContainsVALU:OleVariant):OleVariant;dispid 458;
		property CurrentArray:ExcelRange readonly dispid 501;
		property CurrentRegion:ExcelRange readonly dispid 243;
		function Cut(Destination:OleVariant):OleVariant;dispid 565;
		function DataSeries(Rowcol:OleVariant;Type_:XlDataSeriesType;Date:XlDataSeriesDate;Step:OleVariant;Stop:OleVariant;
			Trend:OleVariant):OleVariant;dispid 464;
		property _Default[RowIndex:OleVariant;ColumnIndex:OleVariant]:OleVariant dispid 0;
		function Delete(Shift:OleVariant):OleVariant;dispid 117;
		property Dependents:ExcelRange readonly dispid 543;
		function DialogBox:OleVariant;dispid 245;
		property DirectDependents:ExcelRange readonly dispid 545;
		property DirectPrecedents:ExcelRange readonly dispid 546;
		function EditionOptions(Type_:XlEditionType;Option:XlEditionOptionsOption;Name:OleVariant;Reference:OleVariant;
			Appearance:XlPictureAppearance;ChartSize:XlPictureAppearance;Format:OleVariant):OleVariant;dispid 1131;
		property End_[Direction:XlDirection]:ExcelRange readonly dispid 500;
		property EntireColumn:ExcelRange readonly dispid 246;
		property EntireRow:ExcelRange readonly dispid 247;
		function FillDown:OleVariant;dispid 248;
		function FillLeft:OleVariant;dispid 249;
		function FillRight:OleVariant;dispid 250;
		function FillUp:OleVariant;dispid 251;
		function Find(What:OleVariant;After:OleVariant;LookIn:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			SearchDirection:XlSearchDirection;MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant):ExcelRange;
			dispid 398;
		function FindNext(After:OleVariant):ExcelRange;dispid 399;
		function FindPrevious(After:OleVariant):ExcelRange;dispid 400;
		property Font:Font readonly dispid 146;
		property Formula:OleVariant dispid 261;
		property FormulaArray:OleVariant dispid 586;
		property FormulaLabel:XlFormulaLabel dispid 1380;
		property FormulaHidden:OleVariant dispid 262;
		property FormulaLocal:OleVariant dispid 263;
		property FormulaR1C1:OleVariant dispid 264;
		property FormulaR1C1Local:OleVariant dispid 265;
		function FunctionWizard:OleVariant;dispid 571;
		function GoalSeek(Goal:OleVariant;const ChangingCell:ExcelRange):WordBool;dispid 472;
		function Group(Start:OleVariant;End_:OleVariant;By:OleVariant;Periods:OleVariant):OleVariant;dispid 46;
		property HasArray:OleVariant readonly dispid 266;
		property HasFormula:OleVariant readonly dispid 267;
		property Height:OleVariant readonly dispid 123;
		property Hidden:OleVariant dispid 268;
		property HorizontalAlignment:OleVariant dispid 136;
		property IndentLevel:OleVariant dispid 201;
		procedure InsertIndent(InsertAmount:Integer);dispid 1381;
		function Insert(Shift:OleVariant;CopyOrigin:OleVariant):OleVariant;dispid 252;
		property Interior:Interior readonly dispid 129;
		property Item[RowIndex:OleVariant;ColumnIndex:OleVariant]:OleVariant dispid 170;
		function Justify:OleVariant;dispid 495;
		property Left:OleVariant readonly dispid 127;
		property ListHeaderRows:Integer readonly dispid 1187;
		function ListNames:OleVariant;dispid 253;
		property LocationInTable:XlLocationInTable readonly dispid 691;
		property Locked:OleVariant dispid 269;
		procedure Merge(Across:OleVariant);dispid 564;
		procedure UnMerge;dispid 1384;
		property MergeArea:ExcelRange readonly dispid 1385;
		property MergeCells:OleVariant dispid 208;
		property Name:OleVariant dispid 110;
		function NavigateArrow(TowardPrecedent:OleVariant;ArrowNumber:OleVariant;LinkNumber:OleVariant):OleVariant;
			dispid 1032;
		property _NewEnum:IUnknown readonly dispid-4;
		property Next:ExcelRange readonly dispid 502;
		function NoteText(Text:OleVariant;Start:OleVariant;Length:OleVariant):WideString;dispid 1127;
		property NumberFormat:OleVariant dispid 193;
		property NumberFormatLocal:OleVariant dispid 1097;
		property Offset[RowOffset:OleVariant;ColumnOffset:OleVariant]:ExcelRange readonly dispid 254;
		property Orientation:OleVariant dispid 134;
		property OutlineLevel:OleVariant dispid 271;
		property PageBreak:Integer dispid 255;
		function Parse(ParseLine:OleVariant;Destination:OleVariant):OleVariant;dispid 477;
		function _PasteSpecial(Paste:XlPasteType;Operation:XlPasteSpecialOperation;SkipBlanks:OleVariant;
			Transpose:OleVariant):OleVariant;dispid 1027;
		property PivotField:PivotField readonly dispid 731;
		property PivotItem:PivotItem readonly dispid 740;
		property PivotTable:PivotTable readonly dispid 716;
		property Precedents:ExcelRange readonly dispid 544;
		property PrefixCharacter:OleVariant readonly dispid 504;
		property Previous:ExcelRange readonly dispid 503;
		function __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant):OleVariant;dispid 905;
		function PrintPreview(EnableChanges:OleVariant):OleVariant;dispid 281;
		property QueryTable:ExcelQueryTable readonly dispid 1386;
		property Range[Cell1:OleVariant;Cell2:OleVariant]:ExcelRange readonly dispid 197;
		function RemoveSubtotal:OleVariant;dispid 883;
		function _Replace(What:OleVariant;Replacement:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant;ReplaceFormat:OleVariant):WordBool;dispid 226;
		property Resize[RowSize:OleVariant;ColumnSize:OleVariant]:ExcelRange readonly dispid 256;
		property Row:Integer readonly dispid 257;
		function RowDifferences(Comparison:OleVariant):ExcelRange;dispid 511;
		property RowHeight:OleVariant dispid 272;
		property Rows:ExcelRange readonly dispid 258;
		function Run(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 259;
		function Select:OleVariant;dispid 235;
		function Show:OleVariant;dispid 496;
		function ShowDependents(Remove:OleVariant):OleVariant;dispid 877;
		property ShowDetail:OleVariant dispid 585;
		function ShowErrors:OleVariant;dispid 878;
		function ShowPrecedents(Remove:OleVariant):OleVariant;dispid 879;
		property ShrinkToFit:OleVariant dispid 209;
		function _Sort(Key1:OleVariant;Order1:XlSortOrder;Key2:OleVariant;Type_:OleVariant;Order2:XlSortOrder;
			Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;MatchCase:OleVariant;
			Orientation:XlSortOrientation;SortMethod:XlSortMethod;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption):OleVariant;dispid 880;
		function SortSpecial(SortMethod:XlSortMethod;Key1:OleVariant;Order1:XlSortOrder;Type_:OleVariant;Key2:OleVariant;
			Order2:XlSortOrder;Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;
			MatchCase:OleVariant;Orientation:XlSortOrientation;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption):OleVariant;dispid 881;
		property SoundNote:SoundNote readonly dispid 916;
		function SpecialCells(Type_:XlCellType;Value:OleVariant):ExcelRange;dispid 410;
		property Style:OleVariant dispid 260;
		function SubscribeTo(const Edition:WideString;Format:XlSubscribeToFormat):OleVariant;dispid 481;
		function Subtotal(GroupBy:Integer;Function_:XlConsolidationFunction;TotalList:OleVariant;Replace:OleVariant;
			PageBreaks:OleVariant;SummaryBelowData:XlSummaryRow):OleVariant;dispid 882;
		property Summary:OleVariant readonly dispid 273;
		function Table(RowInput:OleVariant;ColumnInput:OleVariant):OleVariant;dispid 497;
		property Text:OleVariant readonly dispid 138;
		function TextToColumns(Destination:OleVariant;DataType:XlTextParsingType;TextQualifier:XlTextQualifier;
			ConsecutiveDelimiter:OleVariant;Tab:OleVariant;Semicolon:OleVariant;Comma:OleVariant;Space:OleVariant;
			Other:OleVariant;OtherChar:OleVariant;FieldInfo:OleVariant;DecimalSeparator:OleVariant;
			ThousandsSeparator:OleVariant;TrailingMinusNumbers:OleVariant):OleVariant;dispid 1040;
		property Top:OleVariant readonly dispid 126;
		function Ungroup:OleVariant;dispid 244;
		property UseStandardHeight:OleVariant dispid 274;
		property UseStandardWidth:OleVariant dispid 275;
		property Validation:Validation readonly dispid 1387;
		property Value[RangeValueDataType:OleVariant]:OleVariant dispid 6;
		property Value2:OleVariant dispid 1388;
		property VerticalAlignment:OleVariant dispid 137;
		property Width:OleVariant readonly dispid 122;
		property Worksheet:ExcelWorksheet readonly dispid 348;
		property WrapText:OleVariant dispid 276;
		function AddComment(Text:OleVariant):Comment;dispid 1389;
		property Comment:Comment readonly dispid 910;
		procedure ClearComments;dispid 1390;
		property Phonetic:Phonetic readonly dispid 1391;
		property FormatConditions:FormatConditions readonly dispid 1392;
		property ReadingOrder:Integer dispid 975;
		property Hyperlinks:Hyperlinks readonly dispid 1393;
		property Phonetics:Phonetics readonly dispid 1811;
		procedure SetPhonetic;dispid 1812;
		property ID:WideString dispid 1813;
		function _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):OleVariant;dispid 1772;
		property PivotCell:PivotCell readonly dispid 2013;
		procedure Dirty;dispid 2014;
		property Errors:Errors readonly dispid 2015;
		property SmartTags:SmartTags readonly dispid 2016;
		procedure Speak(SpeakDirection:OleVariant;SpeakFormulas:OleVariant);dispid 2017;
		function PasteSpecial(Paste:XlPasteType;Operation:XlPasteSpecialOperation;SkipBlanks:OleVariant;
			Transpose:OleVariant):OleVariant;dispid 1928;
		property AllowEdit:WordBool readonly dispid 2020;
		property ListObject:ListObject readonly dispid 2257;
		property XPath:XPath readonly dispid 2258;
		property ServerActions:Actions readonly dispid 2491;
		procedure RemoveDuplicates(Columns:OleVariant;Header:XlYesNoGuess);dispid 2492;
		function PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant):OleVariant;dispid 2361;
		property MDX:WideString readonly dispid 2123;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);dispid 2493;
		property CountLarge:OleVariant readonly dispid 2499;
		function CalculateRowMajorOrder:OleVariant;dispid 2364;
		property SparklineGroups:SparklineGroups readonly dispid 2853;
		procedure ClearHyperlinks;dispid 2854;
		property DisplayFormat:DisplayFormat readonly dispid 666;
		function BorderAround(LineStyle:OleVariant;Weight:XlBorderWeight;ColorIndex:XlColorIndex;Color:OleVariant;
			ThemeColor:OleVariant):OleVariant;dispid 2771;
		procedure AllocateChanges;dispid 2855;
		procedure DiscardChanges;dispid 2856;
		procedure FlashFill;dispid 2996;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);dispid 3175;
		property HasRichDataType:OleVariant readonly dispid 3326;
		procedure ShowCard;dispid 3274;
		function AddCommentThreaded(const Text:WideString):CommentThreaded;dispid 3280;
		property CommentThreaded:CommentThreaded readonly dispid 3281;
		function Sort(Key1:OleVariant;Order1:XlSortOrder;Key2:OleVariant;Type_:OleVariant;Order2:XlSortOrder;
			Key3:OleVariant;Order3:XlSortOrder;Header:XlYesNoGuess;OrderCustom:OleVariant;MatchCase:OleVariant;
			Orientation:XlSortOrientation;SortMethod:XlSortMethod;DataOption1:XlSortDataOption;DataOption2:XlSortDataOption;
			DataOption3:XlSortDataOption;SubField1:OleVariant):OleVariant;dispid 3288;
		function AutoFilter(Field:OleVariant;Criteria1:OleVariant;Operator_:XlAutoFilterOperator;Criteria2:OleVariant;
			VisibleDropDown:OleVariant;SubField:OleVariant):OleVariant;dispid 3289;
		procedure ConvertToLinkedDataType(ServiceID:Integer;const LanguageCulture:WideString);dispid 3290;
		property LinkedDataTypeState:OleVariant readonly dispid 3291;
		procedure SetCellDataTypeFromCell(const SourceCell:ExcelRange);dispid 3293;
		procedure DataTypeToText;dispid 3294;
		property HasSpill:OleVariant readonly dispid 3295;
		property SpillingToRange:ExcelRange readonly dispid 3296;
		property SpillParent:ExcelRange readonly dispid 3297;
		procedure RefreshLinkedDataType(DomainID:OleVariant);dispid 3299;
		property Formula2:OleVariant dispid 1580;
		property Formula2Local:OleVariant dispid 3300;
		property Formula2R1C1:OleVariant dispid 3301;
		property Formula2R1C1Local:OleVariant dispid 3302;
		property SavedAsArray:OleVariant readonly dispid 3303;
		function Replace(What:OleVariant;Replacement:OleVariant;LookAt:OleVariant;SearchOrder:OleVariant;
			MatchCase:OleVariant;MatchByte:OleVariant;SearchFormat:OleVariant;ReplaceFormat:OleVariant;
			FormulaVersion:OleVariant):WordBool;dispid 3305;
	end;

	// *********************************************************************//
	// DispIntf:  ChartEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002440F-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartEvents=dispinterface
		['{0002440F-0000-0000-C000-000000000046}']
		procedure Activate;dispid 304;
		procedure Deactivate;dispid 1530;
		procedure Resize;dispid 256;
		procedure MouseDown(Button:Integer;Shift:Integer;x:Integer;y:Integer);dispid 1531;
		procedure MouseUp(Button:Integer;Shift:Integer;x:Integer;y:Integer);dispid 1532;
		procedure MouseMove(Button:Integer;Shift:Integer;x:Integer;y:Integer);dispid 1533;
		procedure BeforeRightClick(var Cancel:WordBool);dispid 1534;
		procedure DragPlot;dispid 1535;
		procedure DragOver;dispid 1536;
		procedure BeforeDoubleClick(ElementID:Integer;Arg1:Integer;Arg2:Integer;var Cancel:WordBool);dispid 1537;
		procedure Select(ElementID:Integer;Arg1:Integer;Arg2:Integer);dispid 235;
		procedure SeriesChange(SeriesIndex:Integer;PointIndex:Integer);dispid 1538;
		procedure Calculate;dispid 279;
		procedure RemoteResize;dispid 3336;
		procedure RemoteSeriesChange(SeriesIndex:Integer;PointIndex:Integer);dispid 3337;
	end;

	// *********************************************************************//
	// DispIntf:  VPageBreak
	// Flags:     (4096) Dispatchable
	// GUID:      {00024402-0000-0000-C000-000000000046}
	// *********************************************************************//
	VPageBreak=dispinterface
		['{00024402-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:ExcelWorksheet readonly dispid 150;
		procedure Delete;dispid 117;
		procedure DragOff(Direction:XlDirection;RegionIndex:Integer);dispid 1420;
		property Type_:XlPageBreak dispid 108;
		property Extent:XlPageBreakExtent readonly dispid 1422;
		property Location:ExcelRange dispid 1397;
	end;

	// *********************************************************************//
	// DispIntf:  HPageBreak
	// Flags:     (4096) Dispatchable
	// GUID:      {00024401-0000-0000-C000-000000000046}
	// *********************************************************************//
	HPageBreak=dispinterface
		['{00024401-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:ExcelWorksheet readonly dispid 150;
		procedure Delete;dispid 117;
		procedure DragOff(Direction:XlDirection;RegionIndex:Integer);dispid 1420;
		property Type_:XlPageBreak dispid 108;
		property Extent:XlPageBreakExtent readonly dispid 1422;
		property Location:ExcelRange dispid 1397;
	end;

	// *********************************************************************//
	// DispIntf:  HPageBreaks
	// Flags:     (4096) Dispatchable
	// GUID:      {00024404-0000-0000-C000-000000000046}
	// *********************************************************************//
	HPageBreaks=dispinterface
		['{00024404-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:HPageBreak readonly dispid 170;
		property _Default[Index:Integer]:HPageBreak readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(const Before:IDispatch):HPageBreak;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  VPageBreaks
	// Flags:     (4096) Dispatchable
	// GUID:      {00024405-0000-0000-C000-000000000046}
	// *********************************************************************//
	VPageBreaks=dispinterface
		['{00024405-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:VPageBreak readonly dispid 170;
		property _Default[Index:Integer]:VPageBreak readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(const Before:IDispatch):VPageBreak;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  RecentFile
	// Flags:     (4096) Dispatchable
	// GUID:      {00024407-0000-0000-C000-000000000046}
	// *********************************************************************//
	RecentFile=dispinterface
		['{00024407-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property Path:WideString readonly dispid 291;
		property Index:Integer readonly dispid 486;
		function Open:ExcelWorkbook;dispid 1923;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  RecentFiles
	// Flags:     (4096) Dispatchable
	// GUID:      {00024406-0000-0000-C000-000000000046}
	// *********************************************************************//
	RecentFiles=dispinterface
		['{00024406-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Maximum:Integer dispid 1423;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:RecentFile readonly dispid 170;
		property _Default[Index:Integer]:RecentFile readonly dispid 0;default;
		function Add(const Name:WideString):RecentFile;dispid 181;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  DocEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024411-0000-0000-C000-000000000046}
	// *********************************************************************//
	DocEvents=dispinterface
		['{00024411-0000-0000-C000-000000000046}']
		procedure SelectionChange(const Target:ExcelRange);dispid 1543;
		procedure BeforeDoubleClick(const Target:ExcelRange;var Cancel:WordBool);dispid 1537;
		procedure BeforeRightClick(const Target:ExcelRange;var Cancel:WordBool);dispid 1534;
		procedure Activate;dispid 304;
		procedure Deactivate;dispid 1530;
		procedure Calculate;dispid 279;
		procedure Change(const Target:ExcelRange);dispid 1545;
		procedure FollowHyperlink(const Target:Hyperlink);dispid 1470;
		procedure PivotTableUpdate(const Target:PivotTable);dispid 2156;
		procedure PivotTableAfterValueChange(const TargetPivotTable:PivotTable;const TargetRange:ExcelRange);dispid 2886;
		procedure PivotTableBeforeAllocateChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2889;
		procedure PivotTableBeforeCommitChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2892;
		procedure PivotTableBeforeDiscardChanges(const TargetPivotTable:PivotTable;ValueChangeStart:Integer;
			ValueChangeEnd:Integer);dispid 2893;
		procedure PivotTableChangeSync(const Target:PivotTable);dispid 2894;
		procedure LensGalleryRenderComplete;dispid 3072;
		procedure TableUpdate(const Target:TableObject);dispid 3073;
		procedure BeforeDelete;dispid 3074;
		procedure RemoteChange(const Target:ExcelRange);dispid 3338;
		procedure RemoteBeforeDelete;dispid 3339;
		procedure RemotePivotTableUpdate(const Target:PivotTable);dispid 3340;
		procedure RemotePivotTableChangeSync(const Target:PivotTable);dispid 3341;
	end;

	// *********************************************************************//
	// DispIntf:  Style
	// Flags:     (4096) Dispatchable
	// GUID:      {00020852-0000-0000-C000-000000000046}
	// *********************************************************************//
	Style=dispinterface
		['{00020852-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AddIndent:WordBool dispid 1063;
		property BuiltIn:WordBool readonly dispid 553;
		property Borders:Borders readonly dispid 435;
		function Delete:OleVariant;dispid 117;
		property Font:Font readonly dispid 146;
		property FormulaHidden:WordBool dispid 262;
		property HorizontalAlignment:XlHAlign dispid 136;
		property IncludeAlignment:WordBool dispid 413;
		property IncludeBorder:WordBool dispid 414;
		property IncludeFont:WordBool dispid 415;
		property IncludeNumber:WordBool dispid 416;
		property IncludePatterns:WordBool dispid 417;
		property IncludeProtection:WordBool dispid 418;
		property IndentLevel:Integer dispid 201;
		property Interior:Interior readonly dispid 129;
		property Locked:WordBool dispid 269;
		property MergeCells:OleVariant dispid 208;
		property Name:WideString readonly dispid 110;
		property NameLocal:WideString readonly dispid 937;
		property NumberFormat:WideString dispid 193;
		property NumberFormatLocal:WideString dispid 1097;
		property Orientation:XlOrientation dispid 134;
		property ShrinkToFit:WordBool dispid 209;
		property Value:WideString readonly dispid 6;
		property VerticalAlignment:XlVAlign dispid 137;
		property WrapText:WordBool dispid 276;
		property _Default:WideString readonly dispid 0;
		property ReadingOrder:Integer dispid 975;
	end;

	// *********************************************************************//
	// DispIntf:  Styles
	// Flags:     (4096) Dispatchable
	// GUID:      {00020853-0000-0000-C000-000000000046}
	// *********************************************************************//
	Styles=dispinterface
		['{00020853-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Name:WideString;BasedOn:OleVariant):Style;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:Style readonly dispid 170;
		function Merge(Workbook:OleVariant):OleVariant;dispid 564;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:Style readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  Borders
	// Flags:     (4096) Dispatchable
	// GUID:      {00020855-0000-0000-C000-000000000046}
	// *********************************************************************//
	Borders=dispinterface
		['{00020855-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Color:OleVariant dispid 99;
		property ColorIndex:OleVariant dispid 97;
		property Count:Integer readonly dispid 118;
		property Item[Index:XlBordersIndex]:Border readonly dispid 170;
		property LineStyle:OleVariant dispid 119;
		property _NewEnum:IUnknown readonly dispid-4;
		property Value:OleVariant dispid 6;
		property Weight:OleVariant dispid 120;
		property _Default[Index:XlBordersIndex]:Border readonly dispid 0;default;
		property ThemeColor:OleVariant dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
	end;

	// *********************************************************************//
	// DispIntf:  AddIn
	// Flags:     (4096) Dispatchable
	// GUID:      {00020857-0000-0000-C000-000000000046}
	// *********************************************************************//
	AddIn=dispinterface
		['{00020857-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Author:WideString readonly dispid 574;
		property Comments:WideString readonly dispid 575;
		property FullName:WideString readonly dispid 289;
		property Installed:WordBool dispid 550;
		property Keywords:WideString readonly dispid 577;
		property Name:WideString readonly dispid 110;
		property Path:WideString readonly dispid 291;
		property Subject:WideString readonly dispid 953;
		property Title:WideString readonly dispid 199;
		property progID:WideString readonly dispid 1523;
		property CLSID:WideString readonly dispid 2043;
		property IsOpen:WordBool readonly dispid 2865;
	end;

	// *********************************************************************//
	// DispIntf:  AddIns
	// Flags:     (4096) Dispatchable
	// GUID:      {00020858-0000-0000-C000-000000000046}
	// *********************************************************************//
	AddIns=dispinterface
		['{00020858-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Filename:WideString;CopyFile:OleVariant):AddIn;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:AddIn readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:AddIn readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  Toolbar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085C-0000-0000-C000-000000000046}
	// *********************************************************************//
	Toolbar=dispinterface
		['{0002085C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BuiltIn:WordBool readonly dispid 553;
		procedure Delete;dispid 117;
		property Height:Integer dispid 123;
		property Left:Integer dispid 127;
		property Name:WideString readonly dispid 110;
		property Position:Integer dispid 133;
		property Protection:XlToolbarProtection dispid 176;
		procedure Reset;dispid 555;
		property ToolbarButtons:ToolbarButtons readonly dispid 964;
		property Top:Integer dispid 126;
		property Visible:WordBool dispid 558;
		property Width:Integer dispid 122;
	end;

	// *********************************************************************//
	// DispIntf:  Toolbars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Toolbars=dispinterface
		['{0002085D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Name:OleVariant):Toolbar;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:Toolbar readonly dispid 0;default;
		property Item[Index:OleVariant]:Toolbar readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ToolbarButton
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085E-0000-0000-C000-000000000046}
	// *********************************************************************//
	ToolbarButton=dispinterface
		['{0002085E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BuiltIn:WordBool readonly dispid 553;
		property BuiltInFace:WordBool dispid 554;
		procedure Copy(const Toolbar:Toolbar;Before:Integer);dispid 551;
		procedure CopyFace;dispid 966;
		procedure Delete;dispid 117;
		procedure Edit;dispid 562;
		property Enabled:WordBool dispid 600;
		property HelpContextID:Integer dispid 355;
		property HelpFile:WideString dispid 360;
		property ID:Integer readonly dispid 570;
		property IsGap:WordBool readonly dispid 561;
		procedure Move(const Toolbar:Toolbar;Before:Integer);dispid 637;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		procedure PasteFace;dispid 967;
		property Pushed:WordBool dispid 560;
		procedure Reset;dispid 555;
		property StatusBar:WideString dispid 386;
		property Width:Integer dispid 122;
	end;

	// *********************************************************************//
	// DispIntf:  ToolbarButtons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002085F-0000-0000-C000-000000000046}
	// *********************************************************************//
	ToolbarButtons=dispinterface
		['{0002085F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Button:OleVariant;Before:OleVariant;OnAction:OleVariant;Pushed:OleVariant;Enabled:OleVariant;
			StatusBar:OleVariant;HelpFile:OleVariant;HelpContextID:OleVariant):ToolbarButton;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:ToolbarButton readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:Integer]:ToolbarButton readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  Areas
	// Flags:     (4096) Dispatchable
	// GUID:      {00020860-0000-0000-C000-000000000046}
	// *********************************************************************//
	Areas=dispinterface
		['{00020860-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:ExcelRange readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:Integer]:ExcelRange readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  WorkbookEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024412-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorkbookEvents=dispinterface
		['{00024412-0000-0000-C000-000000000046}']
		procedure Open;dispid 1923;
		procedure Activate;dispid 304;
		procedure Deactivate;dispid 1530;
		procedure BeforeClose(var Cancel:WordBool);dispid 1546;
		procedure BeforeSave(SaveAsUI:WordBool;var Cancel:WordBool);dispid 1547;
		procedure BeforePrint(var Cancel:WordBool);dispid 1549;
		procedure NewSheet(const Sh:IDispatch);dispid 1550;
		procedure AddinInstall;dispid 1552;
		procedure AddinUninstall;dispid 1553;
		procedure WindowResize(const Wn:Window);dispid 1554;
		procedure WindowActivate(const Wn:Window);dispid 1556;
		procedure WindowDeactivate(const Wn:Window);dispid 1557;
		procedure SheetSelectionChange(const Sh:IDispatch;const Target:ExcelRange);dispid 1558;
		procedure SheetBeforeDoubleClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool);dispid 1559;
		procedure SheetBeforeRightClick(const Sh:IDispatch;const Target:ExcelRange;var Cancel:WordBool);dispid 1560;
		procedure SheetActivate(const Sh:IDispatch);dispid 1561;
		procedure SheetDeactivate(const Sh:IDispatch);dispid 1562;
		procedure SheetCalculate(const Sh:IDispatch);dispid 1563;
		procedure SheetChange(const Sh:IDispatch;const Target:ExcelRange);dispid 1564;
		procedure SheetFollowHyperlink(const Sh:IDispatch;const Target:Hyperlink);dispid 1854;
		procedure SheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable);dispid 2157;
		procedure PivotTableCloseConnection(const Target:PivotTable);dispid 2158;
		procedure PivotTableOpenConnection(const Target:PivotTable);dispid 2159;
		procedure Sync(SyncEventType:MsoSyncEventType);dispid 2266;
		procedure BeforeXmlImport(const Map:XmlMap;const Url:WideString;IsRefresh:WordBool;var Cancel:WordBool);dispid 2283;
		procedure AfterXmlImport(const Map:XmlMap;IsRefresh:WordBool;Result:XlXmlImportResult);dispid 2285;
		procedure BeforeXmlExport(const Map:XmlMap;const Url:WideString;var Cancel:WordBool);dispid 2287;
		procedure AfterXmlExport(const Map:XmlMap;const Url:WideString;Result:XlXmlExportResult);dispid 2288;
		procedure RowsetComplete(const Description:WideString;const Sheet:WideString;Success:WordBool);dispid 2610;
		procedure SheetPivotTableAfterValueChange(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			const TargetRange:ExcelRange);dispid 2895;
		procedure SheetPivotTableBeforeAllocateChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2896;
		procedure SheetPivotTableBeforeCommitChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer;var Cancel:WordBool);dispid 2897;
		procedure SheetPivotTableBeforeDiscardChanges(const Sh:IDispatch;const TargetPivotTable:PivotTable;
			ValueChangeStart:Integer;ValueChangeEnd:Integer);dispid 2898;
		procedure SheetPivotTableChangeSync(const Sh:IDispatch;const Target:PivotTable);dispid 2899;
		procedure AfterSave(Success:WordBool);dispid 2900;
		procedure NewChart(const Ch:ExcelChart);dispid 2901;
		procedure SheetLensGalleryRenderComplete(const Sh:IDispatch);dispid 3075;
		procedure SheetTableUpdate(const Sh:IDispatch;const Target:TableObject);dispid 3076;
		procedure ModelChange(const Changes:ModelChanges);dispid 3077;
		procedure SheetBeforeDelete(const Sh:IDispatch);dispid 3079;
		procedure BeforeRemoteChange;dispid 3342;
		procedure AfterRemoteChange;dispid 3343;
		procedure RemoteSheetChange(const Sh:IDispatch;const Target:ExcelRange);dispid 3344;
		procedure RemoteNewSheet(const Sh:IDispatch);dispid 3345;
		procedure RemoteNewChart(const Ch:ExcelChart);dispid 3346;
		procedure RemoteSheetBeforeDelete(const Sh:IDispatch);dispid 3347;
		procedure RemoteSheetPivotTableUpdate(const Sh:IDispatch;const Target:PivotTable);dispid 3348;
		procedure RemoteSheetPivotTableChangeSync(const Sh:IDispatch;const Target:PivotTable);dispid 3349;
	end;

	// *********************************************************************//
	// DispIntf:  MenuBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020863-0000-0000-C000-000000000046}
	// *********************************************************************//
	MenuBars=dispinterface
		['{00020863-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Name:OleVariant):MenuBar;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:MenuBar readonly dispid 0;default;
		property Item[Index:OleVariant]:MenuBar readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  MenuBar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020864-0000-0000-C000-000000000046}
	// *********************************************************************//
	MenuBar=dispinterface
		['{00020864-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate;dispid 304;
		property BuiltIn:WordBool readonly dispid 553;
		property Caption:WideString dispid 139;
		procedure Delete;dispid 117;
		property Index:Integer readonly dispid 486;
		property Menus:Menus readonly dispid 591;
		procedure Reset;dispid 555;
	end;

	// *********************************************************************//
	// DispIntf:  Menus
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020865-0000-0000-C000-000000000046}
	// *********************************************************************//
	Menus=dispinterface
		['{00020865-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Caption:WideString;Before:OleVariant;Restore:OleVariant):Menu;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:Menu readonly dispid 0;default;
		property Item[Index:OleVariant]:Menu readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Menu
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020866-0000-0000-C000-000000000046}
	// *********************************************************************//
	Menu=dispinterface
		['{00020866-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Caption:WideString dispid 139;
		procedure Delete;dispid 117;
		property Enabled:WordBool dispid 600;
		property Index:Integer readonly dispid 486;
		property MenuItems:MenuItems readonly dispid 593;
	end;

	// *********************************************************************//
	// DispIntf:  MenuItems
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020867-0000-0000-C000-000000000046}
	// *********************************************************************//
	MenuItems=dispinterface
		['{00020867-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Caption:WideString;OnAction:OleVariant;ShortcutKey:OleVariant;Before:OleVariant;
			Restore:OleVariant;StatusBar:OleVariant;HelpFile:OleVariant;HelpContextID:OleVariant):MenuItem;dispid 181;
		function AddMenu(const Caption:WideString;Before:OleVariant;Restore:OleVariant):Menu;dispid 598;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  MenuItem
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020868-0000-0000-C000-000000000046}
	// *********************************************************************//
	MenuItem=dispinterface
		['{00020868-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Caption:WideString dispid 139;
		property Checked:WordBool dispid 599;
		procedure Delete;dispid 117;
		property Enabled:WordBool dispid 600;
		property HelpContextID:Integer dispid 355;
		property HelpFile:WideString dispid 360;
		property Index:Integer readonly dispid 486;
		property OnAction:WideString dispid 596;
		property StatusBar:WideString dispid 386;
	end;

	// *********************************************************************//
	// DispIntf:  Charts
	// Flags:     (4096) Dispatchable
	// GUID:      {0002086D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Charts=dispinterface
		['{0002086D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant):ExcelChart;dispid 181;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		property Count:Integer readonly dispid 118;
		procedure Delete;dispid 117;
		procedure _Dummy7;dispid 65543;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant);dispid 281;
		procedure Select(Replace:OleVariant);dispid 235;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property Visible:OleVariant dispid 558;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 2361;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):ExcelChart;dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  DrawingObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002086F-0000-0000-C000-000000000046}
	// *********************************************************************//
	DrawingObjects=dispinterface
		['{0002086F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Accelerator:OleVariant dispid 846;
		procedure _Dummy28;dispid 65564;
		property AddIndent:WordBool dispid 1063;
		function AddItem(Text:OleVariant;Index:OleVariant):OleVariant;dispid 851;
		property ArrowHeadLength:OleVariant dispid 611;
		property ArrowHeadStyle:OleVariant dispid 612;
		property ArrowHeadWidth:OleVariant dispid 613;
		property AutoSize:WordBool dispid 614;
		property Border:Border readonly dispid 128;
		property CancelButton:WordBool dispid 858;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property _Default:Integer dispid 0;
		property DefaultButton:WordBool dispid 857;
		property DismissButton:WordBool dispid 859;
		property Display3DShading:WordBool dispid 1122;
		property DisplayVerticalScrollBar:WordBool dispid 922;
		property DropDownLines:Integer dispid 848;
		property Font:Font readonly dispid 146;
		procedure _Dummy47;dispid 65583;
		property HelpButton:WordBool dispid 860;
		property HorizontalAlignment:OleVariant dispid 136;
		property InputType:Integer dispid 854;
		property Interior:Interior readonly dispid 129;
		property LargeChange:Integer dispid 845;
		property LinkedCell:WideString dispid 1058;
		procedure _Dummy54;dispid 65590;
		function List(Index:OleVariant):OleVariant;dispid 861;
		procedure _Dummy56;dispid 65592;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		property LockedText:WordBool dispid 616;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property MultiLine:WordBool dispid 855;
		property MultiSelect:WordBool dispid 32;
		property Orientation:OleVariant dispid 134;
		property PhoneticAccelerator:OleVariant dispid 1121;
		function RemoveAllItems:OleVariant;dispid 853;
		function RemoveItem(Index:Integer;Count:OleVariant):OleVariant;dispid 852;
		function Reshape(Vertex:Integer;Insert:OleVariant;Left:OleVariant;Top:OleVariant):OleVariant;dispid 604;
		property RoundedCorners:WordBool dispid 619;
		function Selected(Index:OleVariant):OleVariant;dispid 1123;
		property Shadow:WordBool dispid 103;
		property SmallChange:Integer dispid 844;
		property Text:WideString dispid 138;
		function Ungroup:IDispatch;dispid 244;
		property Value:Integer dispid 6;
		property VerticalAlignment:OleVariant dispid 137;
		function Vertices(Index1:OleVariant;Index2:OleVariant):OleVariant;dispid 621;
		property ReadingOrder:Integer dispid 975;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function Group:GroupObject;dispid 46;
		function LinkCombo(Link:OleVariant):OleVariant;dispid 856;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  PivotCache
	// Flags:     (4096) Dispatchable
	// GUID:      {0002441C-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotCache=dispinterface
		['{0002441C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BackgroundQuery:WordBool dispid 1427;
		property Connection:OleVariant dispid 1432;
		property EnableRefresh:WordBool dispid 1477;
		property Index:Integer readonly dispid 486;
		property MemoryUsed:Integer readonly dispid 372;
		property OptimizeCache:WordBool dispid 1428;
		property RecordCount:Integer readonly dispid 1478;
		procedure Refresh;dispid 1417;
		property RefreshDate:TDateTime readonly dispid 696;
		property RefreshName:WideString readonly dispid 697;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property Sql:OleVariant dispid 1480;
		property SavePassword:WordBool dispid 1481;
		property SourceData:OleVariant dispid 686;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property QueryType:XlQueryType readonly dispid 1831;
		property MaintainConnection:WordBool dispid 1832;
		property RefreshPeriod:Integer dispid 1833;
		property Recordset:IDispatch dispid 1165;
		procedure ResetTimer;dispid 1834;
		property LocalConnection:OleVariant dispid 1835;
		function CreatePivotTable(TableDestination:OleVariant;TableName:OleVariant;ReadData:OleVariant;
			DefaultVersion:OleVariant):PivotTable;dispid 1836;
		property UseLocalConnection:WordBool dispid 1837;
		property ADOConnection:IDispatch readonly dispid 2074;
		property IsConnected:WordBool readonly dispid 2075;
		procedure MakeConnection;dispid 2076;
		property OLAP:WordBool readonly dispid 2077;
		property SourceType:XlPivotTableSourceType readonly dispid 685;
		property MissingItemsLimit:XlPivotTableMissingItems dispid 2078;
		property SourceConnectionFile:WideString dispid 2079;
		property SourceDataFile:WideString readonly dispid 2080;
		property RobustConnect:XlRobustConnect dispid 2081;
		procedure SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant);dispid 2082;
		property WorkbookConnection:WorkbookConnection readonly dispid 2544;
		property Version:XlPivotTableVersionList readonly dispid 392;
		property UpgradeOnRefresh:WordBool dispid 2545;
		function CreatePivotChart(ChartDestination:OleVariant;XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;
			Width:OleVariant;Height:OleVariant):Shape;dispid 3062;
	end;

	// *********************************************************************//
	// DispIntf:  PivotCaches
	// Flags:     (4096) Dispatchable
	// GUID:      {0002441D-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotCaches=dispinterface
		['{0002441D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):PivotCache;dispid 170;
		property _Default[Index:OleVariant]:PivotCache readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
		function Add(SourceType:XlPivotTableSourceType;SourceData:OleVariant):PivotCache;dispid 181;
		function Create(SourceType:XlPivotTableSourceType;SourceData:OleVariant;Version:OleVariant):PivotCache;dispid 1896;
	end;

	// *********************************************************************//
	// DispIntf:  PivotFormula
	// Flags:     (4096) Dispatchable
	// GUID:      {0002441E-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotFormula=dispinterface
		['{0002441E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		property _Default:WideString dispid 0;
		property Formula:WideString dispid 261;
		property Value:WideString dispid 6;
		property Index:Integer dispid 486;
		property StandardFormula:WideString dispid 2084;
	end;

	// *********************************************************************//
	// DispIntf:  PivotFormulas
	// Flags:     (4096) Dispatchable
	// GUID:      {0002441F-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotFormulas=dispinterface
		['{0002441F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function _Add(const Formula:WideString):PivotFormula;dispid 2085;
		function Item(Index:OleVariant):PivotFormula;dispid 170;
		property _Default[Index:OleVariant]:PivotFormula readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
		function Add(const Formula:WideString;UseStandardFormula:OleVariant):PivotFormula;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  PivotTable
	// Flags:     (4096) Dispatchable
	// GUID:      {00020872-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotTable=dispinterface
		['{00020872-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function AddFields(RowFields:OleVariant;ColumnFields:OleVariant;PageFields:OleVariant;AddToTable:OleVariant)
			:OleVariant;dispid 708;
		property ColumnFields[Index:OleVariant]:IDispatch readonly dispid 713;
		property ColumnGrand:WordBool dispid 694;
		property ColumnRange:ExcelRange readonly dispid 702;
		function ShowPages(PageField:OleVariant):OleVariant;dispid 706;
		property DataBodyRange:ExcelRange readonly dispid 705;
		property DataFields[Index:OleVariant]:IDispatch readonly dispid 715;
		property DataLabelRange:ExcelRange readonly dispid 704;
		property _Default:WideString dispid 0;
		property HasAutoFormat:WordBool dispid 695;
		property HiddenFields[Index:OleVariant]:IDispatch readonly dispid 711;
		property InnerDetail:WideString dispid 698;
		property Name:WideString dispid 110;
		property PageFields[Index:OleVariant]:IDispatch readonly dispid 714;
		property PageRange:ExcelRange readonly dispid 703;
		property PageRangeCells:ExcelRange readonly dispid 1482;
		function PivotFields(Index:OleVariant):IDispatch;dispid 718;
		property RefreshDate:TDateTime readonly dispid 696;
		property RefreshName:WideString readonly dispid 697;
		function RefreshTable:WordBool;dispid 717;
		property RowFields[Index:OleVariant]:IDispatch readonly dispid 712;
		property RowGrand:WordBool dispid 693;
		property RowRange:ExcelRange readonly dispid 701;
		property SaveData:WordBool dispid 692;
		property SourceData:OleVariant dispid 686;
		property TableRange1:ExcelRange readonly dispid 699;
		property TableRange2:ExcelRange readonly dispid 700;
		property Value:WideString dispid 6;
		property VisibleFields[Index:OleVariant]:IDispatch readonly dispid 710;
		property CacheIndex:Integer dispid 1483;
		function CalculatedFields:CalculatedFields;dispid 1484;
		property DisplayErrorString:WordBool dispid 1485;
		property DisplayNullString:WordBool dispid 1486;
		property EnableDrilldown:WordBool dispid 1487;
		property EnableFieldDialog:WordBool dispid 1488;
		property EnableWizard:WordBool dispid 1489;
		property ErrorString:WideString dispid 1490;
		function GetData(const Name:WideString):Double;dispid 1491;
		procedure ListFormulas;dispid 1492;
		property ManualUpdate:WordBool dispid 1493;
		property MergeLabels:WordBool dispid 1494;
		property NullString:WideString dispid 1495;
		function PivotCache:PivotCache;dispid 1496;
		property PivotFormulas:PivotFormulas readonly dispid 1497;
		procedure PivotTableWizard(SourceType:OleVariant;SourceData:OleVariant;TableDestination:OleVariant;
			TableName:OleVariant;RowGrand:OleVariant;ColumnGrand:OleVariant;SaveData:OleVariant;HasAutoFormat:OleVariant;
			AutoPage:OleVariant;Reserved:OleVariant;BackgroundQuery:OleVariant;OptimizeCache:OleVariant;
			PageFieldOrder:OleVariant;PageFieldWrapCount:OleVariant;ReadData:OleVariant;Connection:OleVariant);dispid 684;
		property SubtotalHiddenPageItems:WordBool dispid 1498;
		property PageFieldOrder:Integer dispid 1429;
		property PageFieldStyle:WideString dispid 1499;
		property PageFieldWrapCount:Integer dispid 1430;
		property PreserveFormatting:WordBool dispid 1500;
		procedure _PivotSelect(const Name:WideString;Mode:XlPTSelectionMode);dispid 2087;
		property PivotSelection:WideString dispid 1502;
		property SelectionMode:XlPTSelectionMode dispid 1503;
		property TableStyle:WideString dispid 1504;
		property Tag:WideString dispid 1505;
		procedure Update;dispid 680;
		property VacatedStyle:WideString dispid 1506;
		procedure Format(Format:XlPivotFormatType);dispid 116;
		property PrintTitles:WordBool dispid 1838;
		property CubeFields:CubeFields readonly dispid 1839;
		property GrandTotalName:WideString dispid 1840;
		property SmallGrid:WordBool dispid 1841;
		property RepeatItemsOnEachPrintedPage:WordBool dispid 1842;
		property TotalsAnnotation:WordBool dispid 1843;
		procedure PivotSelect(const Name:WideString;Mode:XlPTSelectionMode;UseStandardName:OleVariant);dispid 1501;
		property PivotSelectionStandard:WideString dispid 2089;
		function GetPivotData(DataField:OleVariant;Field1:OleVariant;Item1:OleVariant;Field2:OleVariant;Item2:OleVariant;
			Field3:OleVariant;Item3:OleVariant;Field4:OleVariant;Item4:OleVariant;Field5:OleVariant;Item5:OleVariant;
			Field6:OleVariant;Item6:OleVariant;Field7:OleVariant;Item7:OleVariant;Field8:OleVariant;Item8:OleVariant;
			Field9:OleVariant;Item9:OleVariant;Field10:OleVariant;Item10:OleVariant;Field11:OleVariant;Item11:OleVariant;
			Field12:OleVariant;Item12:OleVariant;Field13:OleVariant;Item13:OleVariant;Field14:OleVariant;Item14:OleVariant)
			:ExcelRange;dispid 2090;
		property DataPivotField:PivotField readonly dispid 2120;
		property EnableDataValueEditing:WordBool dispid 2121;
		function AddDataField(const Field:IDispatch;Caption:OleVariant;Function_:OleVariant):PivotField;dispid 2122;
		property MDX:WideString readonly dispid 2123;
		property ViewCalculatedMembers:WordBool dispid 2124;
		property CalculatedMembers:CalculatedMembers readonly dispid 2125;
		property DisplayImmediateItems:WordBool dispid 2126;
		function Dummy15(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):OleVariant;
			dispid 2127;
		property EnableFieldList:WordBool dispid 2128;
		property VisualTotals:WordBool dispid 2129;
		property ShowPageMultipleItemLabel:WordBool dispid 2130;
		property Version:XlPivotTableVersionList readonly dispid 392;
		function CreateCubeFile(const File_:WideString;Measures:OleVariant;Levels:OleVariant;Members:OleVariant;
			Properties:OleVariant):WideString;dispid 2131;
		property DisplayEmptyRow:WordBool dispid 2136;
		property DisplayEmptyColumn:WordBool dispid 2137;
		property ShowCellBackgroundFromOLAP:WordBool dispid 2138;
		property PivotColumnAxis:PivotAxis readonly dispid 2546;
		property PivotRowAxis:PivotAxis readonly dispid 2547;
		property ShowDrillIndicators:WordBool dispid 2548;
		property PrintDrillIndicators:WordBool dispid 2549;
		property DisplayMemberPropertyTooltips:WordBool dispid 2550;
		property DisplayContextTooltips:WordBool dispid 2551;
		procedure ClearTable;dispid 2552;
		property CompactRowIndent:Integer dispid 2553;
		property LayoutRowDefault:XlLayoutRowType dispid 2554;
		property DisplayFieldCaptions:WordBool dispid 2555;
		procedure RowAxisLayout(RowLayout:XlLayoutRowType);dispid 2556;
		procedure SubtotalLocation(Location:XlSubtototalLocationType);dispid 2558;
		property ActiveFilters:PivotFilters readonly dispid 2559;
		property InGridDropZones:WordBool dispid 2560;
		procedure ClearAllFilters;dispid 2561;
		property TableStyle2:OleVariant dispid 2562;
		property ShowTableStyleLastColumn:WordBool dispid 2563;
		property ShowTableStyleRowStripes:WordBool dispid 2564;
		property ShowTableStyleColumnStripes:WordBool dispid 2565;
		property ShowTableStyleRowHeaders:WordBool dispid 2566;
		property ShowTableStyleColumnHeaders:WordBool dispid 2567;
		procedure ConvertToFormulas(ConvertFilters:WordBool);dispid 2568;
		property AllowMultipleFilters:WordBool dispid 2570;
		property CompactLayoutRowHeader:WideString dispid 2571;
		property CompactLayoutColumnHeader:WideString dispid 2572;
		property FieldListSortAscending:WordBool dispid 2573;
		property SortUsingCustomLists:WordBool dispid 2574;
		procedure ChangeConnection(const conn:WorkbookConnection);dispid 2575;
		procedure ChangePivotCache(PivotCache:OleVariant);dispid 2577;
		property Location:WideString dispid 1397;
		property EnableWriteback:WordBool dispid 2872;
		property Allocation:XlAllocation dispid 2873;
		property AllocationValue:XlAllocationValue dispid 2874;
		property AllocationMethod:XlAllocationMethod dispid 2875;
		property AllocationWeightExpression:WideString dispid 2876;
		procedure AllocateChanges;dispid 2855;
		procedure CommitChanges;dispid 2877;
		procedure DiscardChanges;dispid 2856;
		procedure RefreshDataSourceValues;dispid 2878;
		procedure RepeatAllLabels(Repeat_:XlPivotFieldRepeatLabels);dispid 2879;
		property ChangeList:PivotTableChangeList readonly dispid 2880;
		property Slicers:Slicers readonly dispid 2881;
		property AlternativeText:WideString dispid 1891;
		property Summary:WideString dispid 273;
		property VisualTotalsForSets:WordBool dispid 2882;
		property ShowValuesRow:WordBool dispid 2883;
		property CalculatedMembersInFilters:WordBool dispid 2884;
		function PivotValueCell(rowline:OleVariant;columnline:OleVariant):PivotValueCell;dispid 3064;
		property Hidden:WordBool readonly dispid 268;
		property PivotChart:Shape readonly dispid 3067;
		procedure DrillDown(const PivotItem:PivotItem;PivotLine:OleVariant);dispid 3068;
		procedure DrillUp(const PivotItem:PivotItem;PivotLine:OleVariant;LevelUniqueName:OleVariant);dispid 3069;
		procedure DrillTo(const PivotItem:PivotItem;const CubeField:CubeField;PivotLine:OleVariant);dispid 2580;
		function Dummy2(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant):OleVariant;dispid 1783;
		procedure ApplyLayout;dispid 2500;
	end;

	// *********************************************************************//
	// DispIntf:  PivotTables
	// Flags:     (4096) Dispatchable
	// GUID:      {00020873-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotTables=dispinterface
		['{00020873-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):PivotTable;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function Add(const PivotCache:PivotCache;TableDestination:OleVariant;TableName:OleVariant;ReadData:OleVariant;
			DefaultVersion:OleVariant):PivotTable;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  PivotField
	// Flags:     (4096) Dispatchable
	// GUID:      {00020874-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotField=dispinterface
		['{00020874-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Calculation:XlPivotFieldCalculation dispid 316;
		property ChildField:PivotField readonly dispid 736;
		property ChildItems[Index:OleVariant]:OleVariant readonly dispid 730;
		property CurrentPage:OleVariant dispid 738;
		property DataRange:ExcelRange readonly dispid 720;
		property DataType:XlPivotFieldDataType readonly dispid 722;
		property _Default:WideString dispid 0;
		property Function_:XlConsolidationFunction dispid 899;
		property GroupLevel:OleVariant readonly dispid 723;
		property HiddenItems[Index:OleVariant]:OleVariant readonly dispid 728;
		property LabelRange:ExcelRange readonly dispid 719;
		property Name:WideString dispid 110;
		property NumberFormat:WideString dispid 193;
		property Orientation:XlPivotFieldOrientation dispid 134;
		property ShowAllItems:WordBool dispid 452;
		property ParentField:PivotField readonly dispid 732;
		property ParentItems[Index:OleVariant]:OleVariant readonly dispid 729;
		function PivotItems(Index:OleVariant):OleVariant;dispid 737;
		property Position:OleVariant dispid 133;
		property SourceName:WideString readonly dispid 721;
		property Subtotals[Index:OleVariant]:OleVariant dispid 733;
		property BaseField:OleVariant dispid 734;
		property BaseItem:OleVariant dispid 735;
		property TotalLevels:OleVariant readonly dispid 724;
		property Value:WideString dispid 6;
		property VisibleItems[Index:OleVariant]:OleVariant readonly dispid 727;
		function CalculatedItems:CalculatedItems;dispid 1507;
		procedure Delete;dispid 117;
		property DragToColumn:WordBool dispid 1508;
		property DragToHide:WordBool dispid 1509;
		property DragToPage:WordBool dispid 1510;
		property DragToRow:WordBool dispid 1511;
		property DragToData:WordBool dispid 1844;
		property Formula:WideString dispid 261;
		property IsCalculated:WordBool readonly dispid 1512;
		property MemoryUsed:Integer readonly dispid 372;
		property ServerBased:WordBool dispid 1513;
		procedure _AutoSort(Order:Integer;const Field:WideString);dispid 2579;
		procedure AutoShow(Type_:Integer;Range:Integer;Count:Integer;const Field:WideString);dispid 1515;
		property AutoSortOrder:Integer readonly dispid 1516;
		property AutoSortField:WideString readonly dispid 1517;
		property AutoShowType:Integer readonly dispid 1518;
		property AutoShowRange:Integer readonly dispid 1519;
		property AutoShowCount:Integer readonly dispid 1520;
		property AutoShowField:WideString readonly dispid 1521;
		property LayoutBlankLine:WordBool dispid 1845;
		property LayoutSubtotalLocation:XlSubtototalLocationType dispid 1846;
		property LayoutPageBreak:WordBool dispid 1847;
		property LayoutForm:XlLayoutFormType dispid 1848;
		property SubtotalName:WideString dispid 1849;
		property Caption:WideString dispid 139;
		property DrilledDown:WordBool dispid 1850;
		property CubeField:CubeField readonly dispid 1851;
		property CurrentPageName:WideString dispid 1852;
		property StandardFormula:WideString dispid 2084;
		property HiddenItemsList:OleVariant dispid 2139;
		property DatabaseSort:WordBool dispid 2140;
		property IsMemberProperty:WordBool readonly dispid 2141;
		property PropertyParentField:PivotField readonly dispid 2142;
		property PropertyOrder:Integer dispid 2143;
		property EnableItemSelection:WordBool dispid 2144;
		property CurrentPageList:OleVariant dispid 2145;
		procedure AddPageItem(const Item:WideString;ClearList:OleVariant);dispid 2146;
		property Hidden:WordBool dispid 268;
		procedure DrillTo(const Field:WideString);dispid 2580;
		property UseMemberPropertyAsCaption:WordBool dispid 2581;
		property MemberPropertyCaption:WideString dispid 2582;
		property DisplayAsTooltip:WordBool dispid 2583;
		property DisplayInReport:WordBool dispid 2584;
		property DisplayAsCaption:WordBool readonly dispid 2585;
		property LayoutCompactRow:WordBool dispid 2586;
		property IncludeNewItemsInFilter:WordBool dispid 2587;
		property VisibleItemsList:OleVariant dispid 2588;
		property PivotFilters:PivotFilters readonly dispid 2589;
		property AutoSortPivotLine:PivotLine readonly dispid 2590;
		property AutoSortCustomSubtotal:Integer readonly dispid 2591;
		property ShowingInAxis:WordBool readonly dispid 2592;
		property EnableMultiplePageItems:WordBool dispid 2184;
		property AllItemsVisible:WordBool readonly dispid 2593;
		procedure ClearManualFilter;dispid 2594;
		procedure ClearAllFilters;dispid 2561;
		procedure ClearValueFilters;dispid 2595;
		procedure ClearLabelFilters;dispid 2596;
		procedure AutoSort(Order:Integer;const Field:WideString;PivotLine:OleVariant;CustomSubtotal:OleVariant);dispid 1514;
		property SourceCaption:WideString readonly dispid 2599;
		property ShowDetail:WordBool dispid 585;
		property RepeatLabels:WordBool dispid 2885;
		procedure AutoGroup;dispid 3165;
	end;

	// *********************************************************************//
	// DispIntf:  PivotFields
	// Flags:     (4096) Dispatchable
	// GUID:      {00020875-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotFields=dispinterface
		['{00020875-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:PivotTable readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CalculatedFields
	// Flags:     (4096) Dispatchable
	// GUID:      {00024420-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalculatedFields=dispinterface
		['{00024420-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function _Add(const Name:WideString;const Formula:WideString):PivotField;dispid 2085;
		function Item(Index:OleVariant):PivotField;dispid 170;
		property _Default[Field:OleVariant]:PivotField readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
		function Add(const Name:WideString;const Formula:WideString;UseStandardFormula:OleVariant):PivotField;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  PivotItem
	// Flags:     (4096) Dispatchable
	// GUID:      {00020876-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotItem=dispinterface
		['{00020876-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:PivotField readonly dispid 150;
		property ChildItems[Index:OleVariant]:OleVariant readonly dispid 730;
		property DataRange:ExcelRange readonly dispid 720;
		property _Default:WideString dispid 0;
		property LabelRange:ExcelRange readonly dispid 719;
		property Name:WideString dispid 110;
		property ParentItem:PivotItem readonly dispid 741;
		property ParentShowDetail:WordBool readonly dispid 739;
		property Position:Integer dispid 133;
		property ShowDetail:WordBool dispid 585;
		property SourceName:OleVariant readonly dispid 721;
		property Value:WideString dispid 6;
		property Visible:WordBool dispid 558;
		procedure Delete;dispid 117;
		property IsCalculated:WordBool readonly dispid 1512;
		property RecordCount:Integer readonly dispid 1478;
		property Formula:WideString dispid 261;
		property Caption:WideString dispid 139;
		property DrilledDown:WordBool dispid 1850;
		property StandardFormula:WideString dispid 2084;
		property SourceNameStandard:WideString readonly dispid 2148;
		procedure DrillTo(const Field:WideString);dispid 2580;
	end;

	// *********************************************************************//
	// DispIntf:  PivotItems
	// Flags:     (4096) Dispatchable
	// GUID:      {00020877-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotItems=dispinterface
		['{00020877-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:PivotField readonly dispid 150;
		procedure Add(const Name:WideString);dispid 181;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CalculatedItems
	// Flags:     (4096) Dispatchable
	// GUID:      {00024421-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalculatedItems=dispinterface
		['{00024421-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function _Add(const Name:WideString;const Formula:WideString):PivotItem;dispid 2085;
		function Item(Index:OleVariant):PivotItem;dispid 170;
		property _Default[Field:OleVariant]:PivotItem readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
		function Add(const Name:WideString;const Formula:WideString;UseStandardFormula:OleVariant):PivotItem;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  Characters
	// Flags:     (4096) Dispatchable
	// GUID:      {00020878-0000-0000-C000-000000000046}
	// *********************************************************************//
	Characters=dispinterface
		['{00020878-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Caption:WideString dispid 139;
		property Count:Integer readonly dispid 118;
		function Delete:OleVariant;dispid 117;
		property Font:Font readonly dispid 146;
		function Insert(const String_:WideString):OleVariant;dispid 252;
		property Text:WideString dispid 138;
		property PhoneticCharacters:WideString dispid 1522;
	end;

	// *********************************************************************//
	// DispIntf:  Dialogs
	// Flags:     (4096) Dispatchable
	// GUID:      {00020879-0000-0000-C000-000000000046}
	// *********************************************************************//
	Dialogs=dispinterface
		['{00020879-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:XlBuiltInDialog]:Dialog readonly dispid 170;
		property _Default[Index:XlBuiltInDialog]:Dialog readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Dialog
	// Flags:     (4096) Dispatchable
	// GUID:      {0002087A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Dialog=dispinterface
		['{0002087A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Show(Arg1:OleVariant;Arg2:OleVariant;Arg3:OleVariant;Arg4:OleVariant;Arg5:OleVariant;Arg6:OleVariant;
			Arg7:OleVariant;Arg8:OleVariant;Arg9:OleVariant;Arg10:OleVariant;Arg11:OleVariant;Arg12:OleVariant;
			Arg13:OleVariant;Arg14:OleVariant;Arg15:OleVariant;Arg16:OleVariant;Arg17:OleVariant;Arg18:OleVariant;
			Arg19:OleVariant;Arg20:OleVariant;Arg21:OleVariant;Arg22:OleVariant;Arg23:OleVariant;Arg24:OleVariant;
			Arg25:OleVariant;Arg26:OleVariant;Arg27:OleVariant;Arg28:OleVariant;Arg29:OleVariant;Arg30:OleVariant):WordBool;
			dispid 496;
	end;

	// *********************************************************************//
	// DispIntf:  SoundNote
	// Flags:     (4096) Dispatchable
	// GUID:      {0002087B-0000-0000-C000-000000000046}
	// *********************************************************************//
	SoundNote=dispinterface
		['{0002087B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Delete:OleVariant;dispid 117;
		function Import(const Filename:WideString):OleVariant;dispid 917;
		function Play:OleVariant;dispid 918;
		function Record_:OleVariant;dispid 919;
	end;

	// *********************************************************************//
	// DispIntf:  Button
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Button=dispinterface
		['{0002087D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Accelerator:OleVariant dispid 846;
		property CancelButton:WordBool dispid 858;
		property DefaultButton:WordBool dispid 857;
		property DismissButton:WordBool dispid 859;
		property HelpButton:WordBool dispid 860;
		property PhoneticAccelerator:OleVariant dispid 1121;
	end;

	// *********************************************************************//
	// DispIntf:  Buttons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087E-0000-0000-C000-000000000046}
	// *********************************************************************//
	Buttons=dispinterface
		['{0002087E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Accelerator:OleVariant dispid 846;
		property CancelButton:WordBool dispid 858;
		property DefaultButton:WordBool dispid 857;
		property DismissButton:WordBool dispid 859;
		property HelpButton:WordBool dispid 860;
		property PhoneticAccelerator:OleVariant dispid 1121;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Button;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CheckBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002087F-0000-0000-C000-000000000046}
	// *********************************************************************//
	CheckBox=dispinterface
		['{0002087F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Border:Border readonly dispid 128;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property Interior:Interior readonly dispid 129;
		property LinkedCell:WideString dispid 1058;
		property PhoneticAccelerator:OleVariant dispid 1121;
		property Value:OleVariant dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  CheckBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020880-0000-0000-C000-000000000046}
	// *********************************************************************//
	CheckBoxes=dispinterface
		['{00020880-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Border:Border readonly dispid 128;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property Interior:Interior readonly dispid 129;
		property LinkedCell:WideString dispid 1058;
		property PhoneticAccelerator:OleVariant dispid 1121;
		property Value:OleVariant dispid 6;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):CheckBox;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  OptionButton
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020881-0000-0000-C000-000000000046}
	// *********************************************************************//
	OptionButton=dispinterface
		['{00020881-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Border:Border readonly dispid 128;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property Interior:Interior readonly dispid 129;
		property LinkedCell:WideString dispid 1058;
		property PhoneticAccelerator:OleVariant dispid 1121;
		property Value:OleVariant dispid 6;
		property GroupBox:GroupBox readonly dispid 833;
	end;

	// *********************************************************************//
	// DispIntf:  OptionButtons
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020882-0000-0000-C000-000000000046}
	// *********************************************************************//
	OptionButtons=dispinterface
		['{00020882-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Border:Border readonly dispid 128;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property Interior:Interior readonly dispid 129;
		property LinkedCell:WideString dispid 1058;
		property PhoneticAccelerator:OleVariant dispid 1121;
		property Value:OleVariant dispid 6;
		property GroupBox:GroupBox readonly dispid 833;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):OptionButton;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  EditBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020883-0000-0000-C000-000000000046}
	// *********************************************************************//
	EditBox=dispinterface
		['{00020883-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property DisplayVerticalScrollBar:WordBool dispid 922;
		property InputType:Integer dispid 854;
		property LinkedObject:WideString readonly dispid 862;
		property MultiLine:WordBool dispid 855;
		property PasswordEdit:WordBool dispid 1162;
	end;

	// *********************************************************************//
	// DispIntf:  EditBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020884-0000-0000-C000-000000000046}
	// *********************************************************************//
	EditBoxes=dispinterface
		['{00020884-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property DisplayVerticalScrollBar:WordBool dispid 922;
		property InputType:Integer dispid 854;
		procedure _Dummy34;dispid 65570;
		property MultiLine:WordBool dispid 855;
		property PasswordEdit:WordBool dispid 1162;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):EditBox;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):OleVariant;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ScrollBar
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020885-0000-0000-C000-000000000046}
	// *********************************************************************//
	ScrollBar=dispinterface
		['{00020885-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property LinkedCell:WideString dispid 1058;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property SmallChange:Integer dispid 844;
		property Value:Integer dispid 6;
		property LargeChange:Integer dispid 845;
	end;

	// *********************************************************************//
	// DispIntf:  ScrollBars
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020886-0000-0000-C000-000000000046}
	// *********************************************************************//
	ScrollBars=dispinterface
		['{00020886-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property LinkedCell:WideString dispid 1058;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property SmallChange:Integer dispid 844;
		property Value:Integer dispid 6;
		property LargeChange:Integer dispid 845;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):ScrollBar;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ListBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020887-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListBox=dispinterface
		['{00020887-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		function AddItem(Text:OleVariant;Index:OleVariant):OleVariant;dispid 851;
		property Display3DShading:WordBool dispid 1122;
		property _Default:Integer dispid 0;
		property LinkedCell:WideString dispid 1058;
		property LinkedObject:OleVariant readonly dispid 862;
		property List[Index:OleVariant]:OleVariant dispid 861;
		property ListCount:Integer readonly dispid 849;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		property MultiSelect:Integer dispid 32;
		function RemoveAllItems:OleVariant;dispid 853;
		function RemoveItem(Index:Integer;Count:OleVariant):OleVariant;dispid 852;
		property Selected[Index:OleVariant]:OleVariant dispid 1123;
		property Value:Integer dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  ListBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020888-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListBoxes=dispinterface
		['{00020888-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		function AddItem(Text:OleVariant;Index:OleVariant):OleVariant;dispid 851;
		property Display3DShading:WordBool dispid 1122;
		property _Default:Integer dispid 0;
		property LinkedCell:WideString dispid 1058;
		procedure _Dummy31;dispid 65567;
		property List[Index:OleVariant]:OleVariant dispid 861;
		procedure _Dummy33;dispid 65569;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		property MultiSelect:Integer dispid 32;
		function RemoveAllItems:OleVariant;dispid 853;
		function RemoveItem(Index:Integer;Count:OleVariant):OleVariant;dispid 852;
		property Selected[Index:OleVariant]:OleVariant dispid 1123;
		property Value:Integer dispid 6;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):ListBox;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  GroupBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020889-0000-0000-C000-000000000046}
	// *********************************************************************//
	GroupBox=dispinterface
		['{00020889-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Display3DShading:WordBool dispid 1122;
		property PhoneticAccelerator:OleVariant dispid 1121;
	end;

	// *********************************************************************//
	// DispIntf:  GroupBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088A-0000-0000-C000-000000000046}
	// *********************************************************************//
	GroupBoxes=dispinterface
		['{0002088A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		property Display3DShading:WordBool dispid 1122;
		property PhoneticAccelerator:OleVariant dispid 1121;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):GroupBox;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  DropDown
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088B-0000-0000-C000-000000000046}
	// *********************************************************************//
	DropDown=dispinterface
		['{0002088B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		function AddItem(Text:OleVariant;Index:OleVariant):OleVariant;dispid 851;
		property Display3DShading:WordBool dispid 1122;
		property _Default:Integer dispid 0;
		property LinkedCell:WideString dispid 1058;
		property LinkedObject:OleVariant readonly dispid 862;
		property List[Index:OleVariant]:OleVariant dispid 861;
		property ListCount:Integer readonly dispid 849;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		procedure _Dummy36;dispid 65572;
		function RemoveAllItems:OleVariant;dispid 853;
		function RemoveItem(Index:Integer;Count:OleVariant):OleVariant;dispid 852;
		property Selected[Index:OleVariant]:OleVariant dispid 1123;
		property Value:Integer dispid 6;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property DropDownLines:Integer dispid 848;
		property Text:WideString dispid 138;
	end;

	// *********************************************************************//
	// DispIntf:  DropDowns
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088C-0000-0000-C000-000000000046}
	// *********************************************************************//
	DropDowns=dispinterface
		['{0002088C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		function AddItem(Text:OleVariant;Index:OleVariant):OleVariant;dispid 851;
		property Display3DShading:WordBool dispid 1122;
		property _Default:Integer dispid 0;
		property LinkedCell:WideString dispid 1058;
		procedure _Dummy31;dispid 65567;
		property List[Index:OleVariant]:OleVariant dispid 861;
		procedure _Dummy33;dispid 65569;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		procedure _Dummy36;dispid 65572;
		function RemoveAllItems:OleVariant;dispid 853;
		function RemoveItem(Index:Integer;Count:OleVariant):OleVariant;dispid 852;
		property Selected[Index:OleVariant]:OleVariant dispid 1123;
		property Value:Integer dispid 6;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property DropDownLines:Integer dispid 848;
		property Text:WideString dispid 138;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double;Editable:OleVariant):DropDown;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Spinner
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Spinner=dispinterface
		['{0002088D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property LinkedCell:WideString dispid 1058;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property SmallChange:Integer dispid 844;
		property Value:Integer dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  Spinners
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088E-0000-0000-C000-000000000046}
	// *********************************************************************//
	Spinners=dispinterface
		['{0002088E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property _Default:Integer dispid 0;
		property Display3DShading:WordBool dispid 1122;
		property LinkedCell:WideString dispid 1058;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property SmallChange:Integer dispid 844;
		property Value:Integer dispid 6;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Spinner;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  DialogFrame
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002088F-0000-0000-C000-000000000046}
	// *********************************************************************//
	DialogFrame=dispinterface
		['{0002088F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		procedure _Dummy4;dispid 65540;
		procedure _Dummy5;dispid 65541;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		procedure _Dummy7;dispid 65543;
		procedure _Dummy8;dispid 65544;
		procedure _Dummy9;dispid 65545;
		procedure _Dummy10;dispid 65546;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		procedure _Dummy17;dispid 65553;
		procedure _Dummy18;dispid 65554;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		procedure _Dummy20;dispid 65556;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		procedure _Dummy23;dispid 65559;
		property Width:Double dispid 122;
		procedure _Dummy25;dispid 65561;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
	end;

	// *********************************************************************//
	// DispIntf:  Label_
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020890-0000-0000-C000-000000000046}
	// *********************************************************************//
	Label_=dispinterface
		['{00020890-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		procedure _Dummy33;dispid 65569;
		property PhoneticAccelerator:OleVariant dispid 1121;
	end;

	// *********************************************************************//
	// DispIntf:  Labels
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020891-0000-0000-C000-000000000046}
	// *********************************************************************//
	Labels=dispinterface
		['{00020891-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property LockedText:WordBool dispid 616;
		property Text:WideString dispid 138;
		property Accelerator:OleVariant dispid 846;
		procedure _Dummy33;dispid 65569;
		property PhoneticAccelerator:OleVariant dispid 1121;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Label_;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Panes
	// Flags:     (4096) Dispatchable
	// GUID:      {00020894-0000-0000-C000-000000000046}
	// *********************************************************************//
	Panes=dispinterface
		['{00020894-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:Integer]:Pane readonly dispid 170;
		property _Default[Index:Integer]:Pane readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  Pane
	// Flags:     (4096) Dispatchable
	// GUID:      {00020895-0000-0000-C000-000000000046}
	// *********************************************************************//
	Pane=dispinterface
		['{00020895-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Activate:WordBool;dispid 304;
		property Index:Integer readonly dispid 486;
		function LargeScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant):OleVariant;dispid 547;
		property ScrollColumn:Integer dispid 654;
		property ScrollRow:Integer dispid 655;
		function SmallScroll(Down:OleVariant;Up:OleVariant;ToRight:OleVariant;ToLeft:OleVariant):OleVariant;dispid 548;
		property VisibleRange:ExcelRange readonly dispid 1118;
		procedure ScrollIntoView(Left:Integer;Top:Integer;Width:Integer;Height:Integer;Start:OleVariant);dispid 1781;
		function PointsToScreenPixelsX(Points:Integer):Integer;dispid 1776;
		function PointsToScreenPixelsY(Points:Integer):Integer;dispid 1777;
	end;

	// *********************************************************************//
	// DispIntf:  Scenarios
	// Flags:     (4096) Dispatchable
	// GUID:      {00020896-0000-0000-C000-000000000046}
	// *********************************************************************//
	Scenarios=dispinterface
		['{00020896-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Name:WideString;ChangingCells:OleVariant;Values:OleVariant;Comment:OleVariant;Locked:OleVariant;
			Hidden:OleVariant):Scenario;dispid 181;
		property Count:Integer readonly dispid 118;
		function CreateSummary(ReportType:XlSummaryReportType;ResultCells:OleVariant):OleVariant;dispid 913;
		function Item(Index:OleVariant):Scenario;dispid 170;
		function Merge(Source:OleVariant):OleVariant;dispid 564;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Scenario
	// Flags:     (4096) Dispatchable
	// GUID:      {00020897-0000-0000-C000-000000000046}
	// *********************************************************************//
	Scenario=dispinterface
		['{00020897-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function ChangeScenario(ChangingCells:OleVariant;Values:OleVariant):OleVariant;dispid 912;
		property ChangingCells:ExcelRange readonly dispid 911;
		property Comment:WideString dispid 910;
		function Delete:OleVariant;dispid 117;
		property Hidden:WordBool dispid 268;
		property Index:Integer readonly dispid 486;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		function Show:OleVariant;dispid 496;
		property Values[Index:OleVariant]:OleVariant readonly dispid 164;
	end;

	// *********************************************************************//
	// DispIntf:  GroupObject
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020898-0000-0000-C000-000000000046}
	// *********************************************************************//
	GroupObject=dispinterface
		['{00020898-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		procedure _Dummy27;dispid 65563;
		procedure _Dummy28;dispid 65564;
		property AddIndent:WordBool dispid 1063;
		procedure _Dummy30;dispid 65566;
		property ArrowHeadLength:OleVariant dispid 611;
		property ArrowHeadStyle:OleVariant dispid 612;
		property ArrowHeadWidth:OleVariant dispid 613;
		property AutoSize:WordBool dispid 614;
		property Border:Border readonly dispid 128;
		procedure _Dummy36;dispid 65572;
		procedure _Dummy37;dispid 65573;
		procedure _Dummy38;dispid 65574;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property _Default:Integer dispid 0;
		procedure _Dummy41;dispid 65577;
		procedure _Dummy42;dispid 65578;
		procedure _Dummy43;dispid 65579;
		procedure _Dummy44;dispid 65580;
		procedure _Dummy45;dispid 65581;
		property Font:Font readonly dispid 146;
		procedure _Dummy47;dispid 65583;
		procedure _Dummy48;dispid 65584;
		property HorizontalAlignment:OleVariant dispid 136;
		procedure _Dummy50;dispid 65586;
		property Interior:Interior readonly dispid 129;
		procedure _Dummy52;dispid 65588;
		procedure _Dummy53;dispid 65589;
		procedure _Dummy54;dispid 65590;
		procedure _Dummy55;dispid 65591;
		procedure _Dummy56;dispid 65592;
		procedure _Dummy57;dispid 65593;
		procedure _Dummy58;dispid 65594;
		procedure _Dummy59;dispid 65595;
		procedure _Dummy60;dispid 65596;
		procedure _Dummy61;dispid 65597;
		procedure _Dummy62;dispid 65598;
		procedure _Dummy63;dispid 65599;
		property Orientation:OleVariant dispid 134;
		procedure _Dummy65;dispid 65601;
		procedure _Dummy66;dispid 65602;
		procedure _Dummy67;dispid 65603;
		procedure _Dummy68;dispid 65604;
		property RoundedCorners:WordBool dispid 619;
		procedure _Dummy70;dispid 65606;
		property Shadow:WordBool dispid 103;
		procedure _Dummy72;dispid 65608;
		procedure _Dummy73;dispid 65609;
		function Ungroup:IDispatch;dispid 244;
		procedure _Dummy75;dispid 65611;
		property VerticalAlignment:OleVariant dispid 137;
		procedure _Dummy77;dispid 65613;
		property ReadingOrder:Integer dispid 975;
	end;

	// *********************************************************************//
	// DispIntf:  GroupObjects
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00020899-0000-0000-C000-000000000046}
	// *********************************************************************//
	GroupObjects=dispinterface
		['{00020899-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		procedure _Dummy27;dispid 65563;
		procedure _Dummy28;dispid 65564;
		property AddIndent:WordBool dispid 1063;
		procedure _Dummy30;dispid 65566;
		property ArrowHeadLength:OleVariant dispid 611;
		property ArrowHeadStyle:OleVariant dispid 612;
		property ArrowHeadWidth:OleVariant dispid 613;
		property AutoSize:WordBool dispid 614;
		property Border:Border readonly dispid 128;
		procedure _Dummy36;dispid 65572;
		procedure _Dummy37;dispid 65573;
		procedure _Dummy38;dispid 65574;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property _Default:Integer dispid 0;
		procedure _Dummy41;dispid 65577;
		procedure _Dummy42;dispid 65578;
		procedure _Dummy43;dispid 65579;
		procedure _Dummy44;dispid 65580;
		procedure _Dummy45;dispid 65581;
		property Font:Font readonly dispid 146;
		procedure _Dummy47;dispid 65583;
		procedure _Dummy48;dispid 65584;
		property HorizontalAlignment:OleVariant dispid 136;
		procedure _Dummy50;dispid 65586;
		property Interior:Interior readonly dispid 129;
		procedure _Dummy52;dispid 65588;
		procedure _Dummy53;dispid 65589;
		procedure _Dummy54;dispid 65590;
		procedure _Dummy55;dispid 65591;
		procedure _Dummy56;dispid 65592;
		procedure _Dummy57;dispid 65593;
		procedure _Dummy58;dispid 65594;
		procedure _Dummy59;dispid 65595;
		procedure _Dummy60;dispid 65596;
		procedure _Dummy61;dispid 65597;
		procedure _Dummy62;dispid 65598;
		procedure _Dummy63;dispid 65599;
		property Orientation:OleVariant dispid 134;
		procedure _Dummy65;dispid 65601;
		procedure _Dummy66;dispid 65602;
		procedure _Dummy67;dispid 65603;
		procedure _Dummy68;dispid 65604;
		property RoundedCorners:WordBool dispid 619;
		procedure _Dummy70;dispid 65606;
		property Shadow:WordBool dispid 103;
		procedure _Dummy72;dispid 65608;
		procedure _Dummy73;dispid 65609;
		function Ungroup:IDispatch;dispid 244;
		procedure _Dummy75;dispid 65611;
		property VerticalAlignment:OleVariant dispid 137;
		procedure _Dummy77;dispid 65613;
		property ReadingOrder:Integer dispid 975;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Line
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Line=dispinterface
		['{0002089A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property ArrowHeadLength:OleVariant dispid 611;
		property ArrowHeadStyle:OleVariant dispid 612;
		property ArrowHeadWidth:OleVariant dispid 613;
		property Border:Border readonly dispid 128;
	end;

	// *********************************************************************//
	// DispIntf:  Lines
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089B-0000-0000-C000-000000000046}
	// *********************************************************************//
	Lines=dispinterface
		['{0002089B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property ArrowHeadLength:OleVariant dispid 611;
		property ArrowHeadStyle:OleVariant dispid 612;
		property ArrowHeadWidth:OleVariant dispid 613;
		property Border:Border readonly dispid 128;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double):Line;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Rectangle
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089C-0000-0000-C000-000000000046}
	// *********************************************************************//
	Rectangle=dispinterface
		['{0002089C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		property RoundedCorners:WordBool dispid 619;
	end;

	// *********************************************************************//
	// DispIntf:  Rectangles
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Rectangles=dispinterface
		['{0002089D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		property RoundedCorners:WordBool dispid 619;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Rectangle;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Oval
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089E-0000-0000-C000-000000000046}
	// *********************************************************************//
	Oval=dispinterface
		['{0002089E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
	end;

	// *********************************************************************//
	// DispIntf:  Ovals
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002089F-0000-0000-C000-000000000046}
	// *********************************************************************//
	Ovals=dispinterface
		['{0002089F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Oval;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Arc
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A0-0000-0000-C000-000000000046}
	// *********************************************************************//
	Arc=dispinterface
		['{000208A0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		procedure _Dummy43;dispid 65579;
	end;

	// *********************************************************************//
	// DispIntf:  Arcs
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A1-0000-0000-C000-000000000046}
	// *********************************************************************//
	Arcs=dispinterface
		['{000208A1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		procedure _Dummy43;dispid 65579;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double):Arc;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  OLEObjectEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024410-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEObjectEvents=dispinterface
		['{00024410-0000-0000-C000-000000000046}']
		procedure GotFocus;dispid 1541;
		procedure LostFocus;dispid 1542;
	end;

	// *********************************************************************//
	// DispIntf:  _OLEObject
	// Flags:     (4096) Dispatchable
	// GUID:      {000208A2-0000-0000-C000-000000000046}
	// *********************************************************************//
	_OLEObject=dispinterface
		['{000208A2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid-2147417964;
		property Creator:XlCreator readonly dispid-2147417963;
		property Parent:IDispatch readonly dispid-2147417962;
		property BottomRightCell:ExcelRange readonly dispid-2147417497;
		function BringToFront:OleVariant;dispid-2147417510;
		function Copy:OleVariant;dispid-2147417561;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid-2147417899;
		function Cut:OleVariant;dispid-2147417547;
		function Delete:OleVariant;dispid-2147417995;
		function Duplicate:IDispatch;dispid-2147417073;
		property Enabled:WordBool dispid-2147417512;
		property Height:Double dispid-2147417989;
		property Index:Integer readonly dispid-2147417626;
		property Left:Double dispid-2147417985;
		property Locked:WordBool dispid-2147417843;
		property Name:WideString dispid-2147418002;
		property OnAction:WideString dispid-2147417516;
		property Placement:OleVariant dispid-2147417495;
		property PrintObject:WordBool dispid-2147417494;
		function Select(Replace:OleVariant):OleVariant;dispid-2147417877;
		function SendToBack:OleVariant;dispid-2147417507;
		property Top:Double dispid-2147417986;
		property TopLeftCell:ExcelRange readonly dispid-2147417492;
		property Visible:WordBool dispid-2147417554;
		property Width:Double dispid-2147417990;
		property ZOrder:Integer readonly dispid-2147417490;
		property ShapeRange:ShapeRange readonly dispid-2147416584;
		property Border:Border readonly dispid-2147417984;
		property Interior:Interior readonly dispid-2147417983;
		property Shadow:WordBool dispid-2147418009;
		function Activate:OleVariant;dispid-2147417808;
		property AutoLoad:WordBool dispid-2147416926;
		property AutoUpdate:WordBool dispid-2147417064;
		property Object_:IDispatch readonly dispid-2147417063;
		property OLEType:OleVariant readonly dispid-2147417058;
		property SourceName:WideString dispid-2147417391;
		function Update:OleVariant;dispid-2147417432;
		function Verb(Verb:XlOLEVerb):OleVariant;dispid-2147417506;
		property LinkedCell:WideString dispid-2147417054;
		property ListFillRange:WideString dispid-2147417265;
		property progID:WideString readonly dispid-2147416589;
		property AltHTML:WideString dispid-2147416259;
	end;

	// *********************************************************************//
	// DispIntf:  OLEObjects
	// Flags:     (4096) Dispatchable
	// GUID:      {000208A3-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEObjects=dispinterface
		['{000208A3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		procedure _Dummy30;dispid 65566;
		property AutoLoad:WordBool dispid 1186;
		procedure _Dummy32;dispid 65568;
		procedure _Dummy33;dispid 65569;
		procedure _Dummy34;dispid 65570;
		property SourceName:WideString dispid 721;
		procedure _Dummy36;dispid 65572;
		procedure _Dummy37;dispid 65573;
		procedure _Dummy38;dispid 65574;
		procedure _Dummy39;dispid 65575;
		procedure _Dummy40;dispid 65576;
		procedure _Dummy41;dispid 65577;
		function Add(ClassType:OleVariant;Filename:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;
			IconFileName:OleVariant;IconIndex:OleVariant;IconLabel:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant):ExcelOLEObject;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  TextBox
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A4-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextBox=dispinterface
		['{000208A4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property RoundedCorners:WordBool dispid 619;
		property Shadow:WordBool dispid 103;
	end;

	// *********************************************************************//
	// DispIntf:  TextBoxes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A5-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextBoxes=dispinterface
		['{000208A5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property RoundedCorners:WordBool dispid 619;
		property Shadow:WordBool dispid 103;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):TextBox;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Picture
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A6-0000-0000-C000-000000000046}
	// *********************************************************************//
	Picture=dispinterface
		['{000208A6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		property Formula:WideString dispid 261;
	end;

	// *********************************************************************//
	// DispIntf:  Pictures
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A7-0000-0000-C000-000000000046}
	// *********************************************************************//
	Pictures=dispinterface
		['{000208A7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		property Formula:WideString dispid 261;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):Picture;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Insert(const Filename:WideString;Converter:OleVariant):Picture;dispid 252;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function Paste(Link:OleVariant):Picture;dispid 211;
	end;

	// *********************************************************************//
	// DispIntf:  Drawing
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Drawing=dispinterface
		['{000208A8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		function AddVertex(Left:Double;Top:Double):OleVariant;dispid 601;
		function Reshape(Vertex:Integer;Insert:WordBool;Left:OleVariant;Top:OleVariant):OleVariant;dispid 604;
		property Vertices[Index1:OleVariant;Index2:OleVariant]:OleVariant readonly dispid 621;
	end;

	// *********************************************************************//
	// DispIntf:  Drawings
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208A9-0000-0000-C000-000000000046}
	// *********************************************************************//
	Drawings=dispinterface
		['{000208A9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function Copy:OleVariant;dispid 551;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		property AddIndent:WordBool dispid 1063;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoSize:WordBool dispid 614;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		function CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant):OleVariant;dispid 505;
		property Font:Font readonly dispid 146;
		property Formula:WideString dispid 261;
		property HorizontalAlignment:OleVariant dispid 136;
		property LockedText:WordBool dispid 616;
		property Orientation:OleVariant dispid 134;
		property Text:WideString dispid 138;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		procedure _Dummy44;dispid 65580;
		function Reshape(Vertex:Integer;Insert:WordBool;Left:OleVariant;Top:OleVariant):OleVariant;dispid 604;
		procedure _Dummy46;dispid 65582;
		function Add(X1:Double;Y1:Double;X2:Double;Y2:Double;Closed:WordBool):Drawing;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  RoutingSlip
	// Flags:     (4096) Dispatchable
	// GUID:      {000208AA-0000-0000-C000-000000000046}
	// *********************************************************************//
	RoutingSlip=dispinterface
		['{000208AA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Delivery:XlRoutingSlipDelivery dispid 955;
		property Message:OleVariant dispid 954;
		property Recipients[Index:OleVariant]:OleVariant dispid 952;
		function Reset:OleVariant;dispid 555;
		property ReturnWhenDone:WordBool dispid 956;
		property Status:XlRoutingSlipStatus readonly dispid 958;
		property Subject:OleVariant dispid 953;
		property TrackStatus:WordBool dispid 957;
	end;

	// *********************************************************************//
	// DispIntf:  Outline
	// Flags:     (4096) Dispatchable
	// GUID:      {000208AB-0000-0000-C000-000000000046}
	// *********************************************************************//
	Outline=dispinterface
		['{000208AB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AutomaticStyles:WordBool dispid 959;
		function ShowLevels(RowLevels:OleVariant;ColumnLevels:OleVariant):OleVariant;dispid 960;
		property SummaryColumn:XlSummaryColumn dispid 961;
		property SummaryRow:XlSummaryRow dispid 902;
	end;

	// *********************************************************************//
	// DispIntf:  Module
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AD-0000-0000-C000-000000000046}
	// *********************************************************************//
	Module=dispinterface
		['{000208AD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate;dispid 304;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		procedure Delete;dispid 117;
		property CodeName:WideString readonly dispid 1373;
		property _CodeName:WideString dispid-2147418112;
		property Index:Integer readonly dispid 486;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property Name:WideString dispid 110;
		property Next:IDispatch readonly dispid 502;
		property OnDoubleClick:WideString dispid 628;
		property OnSheetActivate:WideString dispid 1031;
		property OnSheetDeactivate:WideString dispid 1081;
		property PageSetup:PageSetup readonly dispid 998;
		property Previous:IDispatch readonly dispid 503;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure _Dummy18;dispid 65554;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant);dispid 282;
		property ProtectContents:WordBool readonly dispid 292;
		procedure _Dummy21;dispid 65557;
		property ProtectionMode:WordBool readonly dispid 1159;
		procedure _Dummy23;dispid 65559;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant);dispid 284;
		procedure Select(Replace:OleVariant);dispid 235;
		procedure Unprotect(Password:OleVariant);dispid 285;
		property Visible:XlSheetVisibility dispid 558;
		property Shapes:Shapes readonly dispid 1377;
		function InsertFile(Filename:OleVariant;Merge:OleVariant):OleVariant;dispid 584;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant);dispid 1925;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant);dispid 2029;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 2361;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant);dispid 3174;
	end;

	// *********************************************************************//
	// DispIntf:  Modules
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AE-0000-0000-C000-000000000046}
	// *********************************************************************//
	Modules=dispinterface
		['{000208AE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant):Module;dispid 181;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		property Count:Integer readonly dispid 118;
		procedure Delete;dispid 117;
		procedure _Dummy7;dispid 65543;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure _Dummy12;dispid 65548;
		procedure Select(Replace:OleVariant);dispid 235;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property Visible:OleVariant dispid 558;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant);dispid 2361;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):IDispatch;dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  DialogSheet
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208AF-0000-0000-C000-000000000046}
	// *********************************************************************//
	DialogSheet=dispinterface
		['{000208AF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate;dispid 304;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		procedure Delete;dispid 117;
		property CodeName:WideString readonly dispid 1373;
		property _CodeName:WideString dispid-2147418112;
		property Index:Integer readonly dispid 486;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property Name:WideString dispid 110;
		property Next:IDispatch readonly dispid 502;
		property OnDoubleClick:WideString dispid 628;
		property OnSheetActivate:WideString dispid 1031;
		property OnSheetDeactivate:WideString dispid 1081;
		property PageSetup:PageSetup readonly dispid 998;
		property Previous:IDispatch readonly dispid 503;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant);dispid 281;
		procedure _Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant);dispid 282;
		property ProtectContents:WordBool readonly dispid 292;
		property ProtectDrawingObjects:WordBool readonly dispid 293;
		property ProtectionMode:WordBool readonly dispid 1159;
		property ProtectScenarios:WordBool readonly dispid 294;
		procedure __SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant);dispid 284;
		procedure Select(Replace:OleVariant);dispid 235;
		procedure Unprotect(Password:OleVariant);dispid 285;
		property Visible:XlSheetVisibility dispid 558;
		property Shapes:Shapes readonly dispid 1377;
		procedure _Dummy29;dispid 65565;
		function Arcs(Index:OleVariant):IDispatch;dispid 760;
		procedure _Dummy31;dispid 65567;
		procedure _Dummy32;dispid 65568;
		function Buttons(Index:OleVariant):IDispatch;dispid 557;
		procedure _Dummy34;dispid 65570;
		property EnableCalculation:WordBool dispid 1424;
		procedure _Dummy36;dispid 65572;
		function ChartObjects(Index:OleVariant):IDispatch;dispid 1060;
		function CheckBoxes(Index:OleVariant):IDispatch;dispid 824;
		procedure CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant);dispid 505;
		procedure _Dummy40;dispid 65576;
		procedure _Dummy41;dispid 65577;
		procedure _Dummy42;dispid 65578;
		procedure _Dummy43;dispid 65579;
		procedure _Dummy44;dispid 65580;
		procedure _Dummy45;dispid 65581;
		property DisplayAutomaticPageBreaks:WordBool dispid 643;
		function Drawings(Index:OleVariant):IDispatch;dispid 772;
		function DrawingObjects(Index:OleVariant):IDispatch;dispid 88;
		function DropDowns(Index:OleVariant):IDispatch;dispid 836;
		property EnableAutoFilter:WordBool dispid 1156;
		property EnableSelection:XlEnableSelection dispid 1425;
		property EnableOutlining:WordBool dispid 1157;
		property EnablePivotTable:WordBool dispid 1158;
		function Evaluate(Name:OleVariant):OleVariant;dispid 1;
		function _Evaluate(Name:OleVariant):OleVariant;dispid-5;
		procedure _Dummy56;dispid 65592;
		procedure ResetAllPageBreaks;dispid 1426;
		function GroupBoxes(Index:OleVariant):IDispatch;dispid 834;
		function GroupObjects(Index:OleVariant):IDispatch;dispid 1113;
		function Labels(Index:OleVariant):IDispatch;dispid 841;
		function Lines(Index:OleVariant):IDispatch;dispid 767;
		function ListBoxes(Index:OleVariant):IDispatch;dispid 832;
		property Names:Names readonly dispid 442;
		function OLEObjects(Index:OleVariant):IDispatch;dispid 799;
		procedure _Dummy65;dispid 65601;
		procedure _Dummy66;dispid 65602;
		procedure _Dummy67;dispid 65603;
		function OptionButtons(Index:OleVariant):IDispatch;dispid 826;
		procedure _Dummy69;dispid 65605;
		function Ovals(Index:OleVariant):IDispatch;dispid 801;
		procedure Paste(Destination:OleVariant;Link:OleVariant);dispid 211;
		procedure _PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant);dispid 1027;
		function Pictures(Index:OleVariant):IDispatch;dispid 771;
		procedure _Dummy74;dispid 65610;
		procedure _Dummy75;dispid 65611;
		procedure _Dummy76;dispid 65612;
		function Rectangles(Index:OleVariant):IDispatch;dispid 774;
		procedure _Dummy78;dispid 65614;
		procedure _Dummy79;dispid 65615;
		property ScrollArea:WideString dispid 1433;
		function ScrollBars(Index:OleVariant):IDispatch;dispid 830;
		procedure _Dummy82;dispid 65618;
		procedure _Dummy83;dispid 65619;
		function Spinners(Index:OleVariant):IDispatch;dispid 838;
		procedure _Dummy85;dispid 65621;
		procedure _Dummy86;dispid 65622;
		function TextBoxes(Index:OleVariant):IDispatch;dispid 777;
		procedure _Dummy88;dispid 65624;
		procedure _Dummy89;dispid 65625;
		procedure _Dummy90;dispid 65626;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property QueryTables:QueryTables readonly dispid 1434;
		property DisplayPageBreaks:WordBool dispid 1435;
		property Comments:Comments readonly dispid 575;
		property Hyperlinks:Hyperlinks readonly dispid 1393;
		procedure ClearCircles;dispid 1436;
		procedure CircleInvalid;dispid 1437;
		property _DisplayRightToLeft:Integer dispid 648;
		property _AutoFilter:AutoFilter readonly dispid 793;
		property DisplayRightToLeft:WordBool dispid 1774;
		property Scripts:Scripts readonly dispid 1816;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 1772;
		procedure _CheckSpelling(CustomDictionary:OleVariant;IgnoreUppercase:OleVariant;AlwaysSuggest:OleVariant;
			SpellLang:OleVariant;IgnoreFinalYaa:OleVariant;SpellScript:OleVariant);dispid 1817;
		property Tab:Tab readonly dispid 1041;
		property MailEnvelope:MsoEnvelope readonly dispid 2021;
		procedure _SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 1925;
		property CustomProperties:CustomProperties readonly dispid 2030;
		property SmartTags:SmartTags readonly dispid 2016;
		property Protection:Protection readonly dispid 176;
		procedure PasteSpecial(Format:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;IconFileName:OleVariant;
			IconIndex:OleVariant;IconLabel:OleVariant;NoHTMLFormatting:OleVariant);dispid 1928;
		procedure Protect(Password:OleVariant;DrawingObjects:OleVariant;Contents:OleVariant;Scenarios:OleVariant;
			UserInterfaceOnly:OleVariant;AllowFormattingCells:OleVariant;AllowFormattingColumns:OleVariant;
			AllowFormattingRows:OleVariant;AllowInsertingColumns:OleVariant;AllowInsertingRows:OleVariant;
			AllowInsertingHyperlinks:OleVariant;AllowDeletingColumns:OleVariant;AllowDeletingRows:OleVariant;
			AllowSorting:OleVariant;AllowFiltering:OleVariant;AllowUsingPivotTables:OleVariant);dispid 2029;
		procedure _Dummy113;dispid 65649;
		procedure _Dummy114;dispid 65650;
		procedure _Dummy115;dispid 65651;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 2361;
		property EnableFormatConditionsCalculation:WordBool dispid 2511;
		property _Sort:Sort readonly dispid 880;
		procedure _ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant);dispid 2493;
		property PrintedCommentPages:Integer readonly dispid 2857;
		procedure ExportAsFixedFormat(Type_:XlFixedFormatType;Filename:OleVariant;Quality:OleVariant;
			IncludeDocProperties:OleVariant;IgnorePrintAreas:OleVariant;From:OleVariant;To_:OleVariant;
			OpenAfterPublish:OleVariant;FixedFormatExtClassPtr:OleVariant;WorkIdentity:OleVariant);dispid 3175;
		procedure SaveAs(const Filename:WideString;FileFormat:OleVariant;Password:OleVariant;WriteResPassword:OleVariant;
			ReadOnlyRecommended:OleVariant;CreateBackup:OleVariant;AddToMru:OleVariant;TextCodepage:OleVariant;
			TextVisualLayout:OleVariant;Local:OleVariant);dispid 3174;
		property CommentsThreaded:CommentsThreaded readonly dispid 3282;
		property AutoFilter:AutoFilter readonly dispid 3289;
		property Sort:Sort readonly dispid 3288;
		property NamedSheetViews:NamedSheetViewCollection readonly dispid 3309;
		property DefaultButton:OleVariant dispid 857;
		property DialogFrame:DialogFrame readonly dispid 839;
		function EditBoxes(Index:OleVariant):IDispatch;dispid 828;
		property Focus:OleVariant dispid 814;
		function Hide(Cancel:OleVariant):WordBool;dispid 813;
		function Show:WordBool;dispid 496;
	end;

	// *********************************************************************//
	// DispIntf:  DialogSheets
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208B0-0000-0000-C000-000000000046}
	// *********************************************************************//
	DialogSheets=dispinterface
		['{000208B0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant):DialogSheet;dispid 181;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		property Count:Integer readonly dispid 118;
		procedure Delete;dispid 117;
		procedure _Dummy7;dispid 65543;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant);dispid 281;
		procedure Select(Replace:OleVariant);dispid 235;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property Visible:OleVariant dispid 558;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 2361;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):IDispatch;dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  Worksheets
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B1-0000-0000-C000-000000000046}
	// *********************************************************************//
	Worksheets=dispinterface
		['{000208B1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Before:OleVariant;After:OleVariant;Count:OleVariant;Type_:OleVariant):IDispatch;dispid 181;
		procedure Copy(Before:OleVariant;After:OleVariant);dispid 551;
		property Count:Integer readonly dispid 118;
		procedure Delete;dispid 117;
		procedure FillAcrossSheets(const Range:ExcelRange;Type_:XlFillWith);dispid 469;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		procedure Move(Before:OleVariant;After:OleVariant);dispid 637;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure __PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant);dispid 905;
		procedure PrintPreview(EnableChanges:OleVariant);dispid 281;
		procedure Select(Replace:OleVariant);dispid 235;
		property HPageBreaks:HPageBreaks readonly dispid 1418;
		property VPageBreaks:VPageBreaks readonly dispid 1419;
		property Visible:OleVariant dispid 558;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		procedure _PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant);dispid 1772;
		procedure PrintOut(From:OleVariant;To_:OleVariant;Copies:OleVariant;Preview:OleVariant;ActivePrinter:OleVariant;
			PrintToFile:OleVariant;Collate:OleVariant;PrToFileName:OleVariant;IgnorePrintAreas:OleVariant);dispid 2361;
		function Add2(Before:OleVariant;After:OleVariant;Count:OleVariant;NewLayout:OleVariant):IDispatch;dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  PageSetup
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B4-0000-0000-C000-000000000046}
	// *********************************************************************//
	PageSetup=dispinterface
		['{000208B4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BlackAndWhite:WordBool dispid 1009;
		property BottomMargin:Double dispid 1002;
		property CenterFooter:WideString dispid 1010;
		property CenterHeader:WideString dispid 1011;
		property CenterHorizontally:WordBool dispid 1005;
		property CenterVertically:WordBool dispid 1006;
		property ChartSize:XlObjectSize dispid 1012;
		property Draft:WordBool dispid 1020;
		property FirstPageNumber:Integer dispid 1008;
		property FitToPagesTall:OleVariant dispid 1013;
		property FitToPagesWide:OleVariant dispid 1014;
		property FooterMargin:Double dispid 1015;
		property HeaderMargin:Double dispid 1016;
		property LeftFooter:WideString dispid 1017;
		property LeftHeader:WideString dispid 1018;
		property LeftMargin:Double dispid 999;
		property Order:XlOrder dispid 192;
		property Orientation:XlPageOrientation dispid 134;
		property PaperSize:XlPaperSize dispid 1007;
		property PrintArea:WideString dispid 1019;
		property PrintGridlines:WordBool dispid 1004;
		property PrintHeadings:WordBool dispid 1003;
		property PrintNotes:WordBool dispid 1021;
		property PrintQuality[Index:OleVariant]:OleVariant dispid 1022;
		property PrintTitleColumns:WideString dispid 1023;
		property PrintTitleRows:WideString dispid 1024;
		property RightFooter:WideString dispid 1025;
		property RightHeader:WideString dispid 1026;
		property RightMargin:Double dispid 1000;
		property TopMargin:Double dispid 1001;
		property Zoom:OleVariant dispid 663;
		property PrintComments:XlPrintLocation dispid 1524;
		property PrintErrors:XlPrintErrors dispid 2149;
		property CenterHeaderPicture:Graphic readonly dispid 2150;
		property CenterFooterPicture:Graphic readonly dispid 2151;
		property LeftHeaderPicture:Graphic readonly dispid 2152;
		property LeftFooterPicture:Graphic readonly dispid 2153;
		property RightHeaderPicture:Graphic readonly dispid 2154;
		property RightFooterPicture:Graphic readonly dispid 2155;
		property OddAndEvenPagesHeaderFooter:WordBool dispid 2600;
		property DifferentFirstPageHeaderFooter:WordBool dispid 2601;
		property ScaleWithDocHeaderFooter:WordBool dispid 2602;
		property AlignMarginsHeaderFooter:WordBool dispid 2603;
		property Pages:Pages readonly dispid 2604;
		property EvenPage:Page readonly dispid 2605;
		property FirstPage:Page readonly dispid 2606;
	end;

	// *********************************************************************//
	// DispIntf:  Names
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Names=dispinterface
		['{000208B8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Name:OleVariant;RefersTo:OleVariant;Visible:OleVariant;MacroType:OleVariant;ShortcutKey:OleVariant;
			Category:OleVariant;NameLocal:OleVariant;RefersToLocal:OleVariant;CategoryLocal:OleVariant;
			RefersToR1C1:OleVariant;RefersToR1C1Local:OleVariant):Name;dispid 181;
		function Item(Index:OleVariant;IndexLocal:OleVariant;RefersTo:OleVariant):Name;dispid 170;
		function _Default(Index:OleVariant;IndexLocal:OleVariant;RefersTo:OleVariant):Name;dispid 0;
		property Count:Integer readonly dispid 118;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Name
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B9-0000-0000-C000-000000000046}
	// *********************************************************************//
	Name=dispinterface
		['{000208B9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		property Index:Integer readonly dispid 486;
		property Category:WideString dispid 934;
		property CategoryLocal:WideString dispid 935;
		procedure Delete;dispid 117;
		property MacroType:XlXLMMacroType dispid 936;
		property Name_:WideString dispid 110;
		property RefersTo:OleVariant dispid 938;
		property ShortcutKey:WideString dispid 597;
		property Value:WideString dispid 6;
		property Visible:WordBool dispid 558;
		property NameLocal:WideString dispid 937;
		property RefersToLocal:OleVariant dispid 939;
		property RefersToR1C1:OleVariant dispid 940;
		property RefersToR1C1Local:OleVariant dispid 941;
		property RefersToRange:ExcelRange readonly dispid 1160;
		property Comment:WideString dispid 910;
		property WorkbookParameter:WordBool dispid 2607;
		property ValidWorkbookParameter:WordBool readonly dispid 2608;
	end;

	// *********************************************************************//
	// DispIntf:  ChartObject
	// Flags:     (4096) Dispatchable
	// GUID:      {000208CF-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartObject=dispinterface
		['{000208CF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BottomRightCell:ExcelRange readonly dispid 615;
		function BringToFront:OleVariant;dispid 602;
		function _Copy:OleVariant;dispid 2609;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		property Index:Integer readonly dispid 486;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		property Name:WideString dispid 110;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		property ZOrder:Integer readonly dispid 622;
		property ShapeRange:ShapeRange readonly dispid 1528;
		function Activate:OleVariant;dispid 304;
		property Chart:ExcelChart readonly dispid 7;
		property ProtectChartObject:WordBool dispid 1529;
		property RoundedCorners:WordBool dispid 619;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		function Copy:OleVariant;dispid 551;
	end;

	// *********************************************************************//
	// DispIntf:  ChartObjects
	// Flags:     (4096) Dispatchable
	// GUID:      {000208D0-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartObjects=dispinterface
		['{000208D0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Dummy3;dispid 65539;
		function BringToFront:OleVariant;dispid 602;
		function _Copy:OleVariant;dispid 2609;
		function CopyPicture(Appearance:XlPictureAppearance;Format:XlCopyPictureFormat):OleVariant;dispid 213;
		function Cut:OleVariant;dispid 565;
		function Delete:OleVariant;dispid 117;
		function Duplicate:IDispatch;dispid 1039;
		property Enabled:WordBool dispid 600;
		property Height:Double dispid 123;
		procedure _Dummy12;dispid 65548;
		property Left:Double dispid 127;
		property Locked:WordBool dispid 269;
		procedure _Dummy15;dispid 65551;
		property OnAction:WideString dispid 596;
		property Placement:OleVariant dispid 617;
		property PrintObject:WordBool dispid 618;
		function Select(Replace:OleVariant):OleVariant;dispid 235;
		function SendToBack:OleVariant;dispid 605;
		property Top:Double dispid 126;
		procedure _Dummy22;dispid 65558;
		property Visible:WordBool dispid 558;
		property Width:Double dispid 122;
		procedure _Dummy25;dispid 65561;
		property ShapeRange:ShapeRange readonly dispid 1528;
		procedure _Dummy27;dispid 65563;
		procedure _Dummy28;dispid 65564;
		property ProtectChartObject:WordBool dispid 1529;
		property RoundedCorners:WordBool dispid 619;
		property Border:Border readonly dispid 128;
		property Interior:Interior readonly dispid 129;
		property Shadow:WordBool dispid 103;
		function Copy:OleVariant;dispid 551;
		function Add(Left:Double;Top:Double;Width:Double;Height:Double):ChartObject;dispid 181;
		property Count:Integer readonly dispid 118;
		function Group:GroupObject;dispid 46;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:OleVariant):IDispatch;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  Mailer
	// Flags:     (4096) Dispatchable
	// GUID:      {000208D1-0000-0000-C000-000000000046}
	// *********************************************************************//
	Mailer=dispinterface
		['{000208D1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BCCRecipients:OleVariant dispid 983;
		property CCRecipients:OleVariant dispid 982;
		property Enclosures:OleVariant dispid 984;
		property Received:WordBool readonly dispid 986;
		property SendDateTime:TDateTime readonly dispid 987;
		property Sender:WideString readonly dispid 988;
		property Subject:WideString dispid 953;
		property ToRecipients:OleVariant dispid 981;
		property WhichAddress:OleVariant dispid 974;
	end;

	// *********************************************************************//
	// DispIntf:  CustomViews
	// Flags:     (4096) Dispatchable
	// GUID:      {00024422-0000-0000-C000-000000000046}
	// *********************************************************************//
	CustomViews=dispinterface
		['{00024422-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(ViewName:OleVariant):CustomView;dispid 170;
		function Add(const ViewName:WideString;PrintSettings:OleVariant;RowColSettings:OleVariant):CustomView;dispid 181;
		property _Default[ViewName:OleVariant]:CustomView readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CustomView
	// Flags:     (4096) Dispatchable
	// GUID:      {00024423-0000-0000-C000-000000000046}
	// *********************************************************************//
	CustomView=dispinterface
		['{00024423-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property PrintSettings:WordBool readonly dispid 1577;
		property RowColSettings:WordBool readonly dispid 1578;
		procedure Show;dispid 496;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  FormatConditions
	// Flags:     (4096) Dispatchable
	// GUID:      {00024424-0000-0000-C000-000000000046}
	// *********************************************************************//
	FormatConditions=dispinterface
		['{00024424-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		function Add(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant;
			String_:OleVariant;TextOperator:OleVariant;DateOperator:OleVariant;ScopeType:OleVariant):IDispatch;dispid 181;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Delete;dispid 117;
		function AddColorScale(ColorScaleType:Integer):IDispatch;dispid 2616;
		function AddDatabar:IDispatch;dispid 2618;
		function AddIconSetCondition:IDispatch;dispid 2619;
		function AddTop10:IDispatch;dispid 2620;
		function AddAboveAverage:IDispatch;dispid 2621;
		function AddUniqueValues:IDispatch;dispid 2622;
	end;

	// *********************************************************************//
	// DispIntf:  FormatCondition
	// Flags:     (4096) Dispatchable
	// GUID:      {00024425-0000-0000-C000-000000000046}
	// *********************************************************************//
	FormatCondition=dispinterface
		['{00024425-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure _Modify(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant);
			dispid 2623;
		property Type_:Integer readonly dispid 108;
		property Operator_:Integer readonly dispid 797;
		property Formula1:WideString readonly dispid 1579;
		property Formula2:WideString readonly dispid 1580;
		property Interior:Interior readonly dispid 129;
		property Borders:Borders readonly dispid 435;
		property Font:Font readonly dispid 146;
		procedure Delete;dispid 117;
		procedure Modify(Type_:XlFormatConditionType;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant;
			String_:OleVariant;Operator2:OleVariant);dispid 1581;
		property Text:WideString dispid 138;
		property TextOperator:XlContainsOperator dispid 2613;
		property DateOperator:XlTimePeriods dispid 2614;
		property NumberFormat:OleVariant dispid 193;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
	end;

	// *********************************************************************//
	// DispIntf:  Comments
	// Flags:     (4096) Dispatchable
	// GUID:      {00024426-0000-0000-C000-000000000046}
	// *********************************************************************//
	Comments=dispinterface
		['{00024426-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):Comment;dispid 170;
		property _Default[Index:Integer]:Comment readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Comment
	// Flags:     (4096) Dispatchable
	// GUID:      {00024427-0000-0000-C000-000000000046}
	// *********************************************************************//
	Comment=dispinterface
		['{00024427-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Author:WideString readonly dispid 574;
		property Shape:Shape readonly dispid 1582;
		property Visible:WordBool dispid 558;
		function Text(Text:OleVariant;Start:OleVariant;Overwrite:OleVariant):WideString;dispid 138;
		procedure Delete;dispid 117;
		function Next:Comment;dispid 502;
		function Previous:Comment;dispid 503;
	end;

	// *********************************************************************//
	// DispIntf:  RefreshEvents
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002441B-0000-0000-C000-000000000046}
	// *********************************************************************//
	RefreshEvents=dispinterface
		['{0002441B-0000-0000-C000-000000000046}']
		procedure BeforeRefresh(var Cancel:WordBool);dispid 1596;
		procedure AfterRefresh(Success:WordBool);dispid 1597;
	end;

	// *********************************************************************//
	// DispIntf:  _QueryTable
	// Flags:     (4096) Dispatchable
	// GUID:      {00024428-0000-0000-C000-000000000046}
	// *********************************************************************//
	_QueryTable=dispinterface
		['{00024428-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property FieldNames:WordBool dispid 1584;
		property RowNumbers:WordBool dispid 1585;
		property FillAdjacentFormulas:WordBool dispid 1586;
		property HasAutoFormat:WordBool dispid 695;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property Refreshing:WordBool readonly dispid 1587;
		property FetchedRowOverflow:WordBool readonly dispid 1588;
		property BackgroundQuery:WordBool dispid 1427;
		procedure CancelRefresh;dispid 1589;
		property RefreshStyle:XlCellInsertionMode dispid 1590;
		property EnableRefresh:WordBool dispid 1477;
		property SavePassword:WordBool dispid 1481;
		property Destination:ExcelRange readonly dispid 681;
		property Connection:OleVariant dispid 1432;
		property Sql:OleVariant dispid 1480;
		property PostText:WideString dispid 1591;
		property ResultRange:ExcelRange readonly dispid 1592;
		procedure Delete;dispid 117;
		function Refresh(BackgroundQuery:OleVariant):WordBool;dispid 1417;
		property Parameters:Parameters readonly dispid 1593;
		property Recordset:IDispatch dispid 1165;
		property SaveData:WordBool dispid 692;
		property TablesOnlyFromHTML:WordBool dispid 1594;
		property EnableEditing:WordBool dispid 1595;
		property TextFilePlatform:Integer dispid 1855;
		property TextFileStartRow:Integer dispid 1856;
		property TextFileParseType:XlTextParsingType dispid 1857;
		property TextFileTextQualifier:XlTextQualifier dispid 1858;
		property TextFileConsecutiveDelimiter:WordBool dispid 1859;
		property TextFileTabDelimiter:WordBool dispid 1860;
		property TextFileSemicolonDelimiter:WordBool dispid 1861;
		property TextFileCommaDelimiter:WordBool dispid 1862;
		property TextFileSpaceDelimiter:WordBool dispid 1863;
		property TextFileOtherDelimiter:WideString dispid 1864;
		property TextFileColumnDataTypes:OleVariant dispid 1865;
		property TextFileFixedColumnWidths:OleVariant dispid 1866;
		property PreserveColumnInfo:WordBool dispid 1867;
		property PreserveFormatting:WordBool dispid 1500;
		property AdjustColumnWidth:WordBool dispid 1868;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property TextFilePromptOnRefresh:WordBool dispid 1869;
		property QueryType:XlQueryType readonly dispid 1831;
		property MaintainConnection:WordBool dispid 1832;
		property TextFileDecimalSeparator:WideString dispid 1870;
		property TextFileThousandsSeparator:WideString dispid 1871;
		property RefreshPeriod:Integer dispid 1833;
		procedure ResetTimer;dispid 1834;
		property WebSelectionType:XlWebSelectionType dispid 1872;
		property WebFormatting:XlWebFormatting dispid 1873;
		property WebTables:WideString dispid 1874;
		property WebPreFormattedTextToColumns:WordBool dispid 1875;
		property WebSingleBlockTextImport:WordBool dispid 1876;
		property WebDisableDateRecognition:WordBool dispid 1877;
		property WebConsecutiveDelimitersAsOne:WordBool dispid 1878;
		property WebDisableRedirections:WordBool dispid 2162;
		property EditWebPage:OleVariant dispid 2163;
		property SourceConnectionFile:WideString dispid 2079;
		property SourceDataFile:WideString dispid 2080;
		property RobustConnect:XlRobustConnect dispid 2081;
		property TextFileTrailingMinusNumbers:WordBool dispid 2164;
		procedure SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant);dispid 2082;
		property ListObject:ListObject readonly dispid 2257;
		property TextFileVisualLayout:XlTextVisualLayoutType dispid 2245;
		property WorkbookConnection:WorkbookConnection readonly dispid 2544;
		property _Sort:Sort readonly dispid 880;
		property Sort:Sort readonly dispid 3288;
	end;

	// *********************************************************************//
	// DispIntf:  QueryTables
	// Flags:     (4096) Dispatchable
	// GUID:      {00024429-0000-0000-C000-000000000046}
	// *********************************************************************//
	QueryTables=dispinterface
		['{00024429-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(Connection:OleVariant;const Destination:ExcelRange;Sql:OleVariant):ExcelQueryTable;dispid 181;
		function Item(Index:OleVariant):ExcelQueryTable;dispid 170;
		property _Default[Index:OleVariant]:ExcelQueryTable readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Parameter
	// Flags:     (4096) Dispatchable
	// GUID:      {0002442A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Parameter=dispinterface
		['{0002442A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property DataType:XlParameterDataType dispid 722;
		property Type_:XlParameterType readonly dispid 108;
		property PromptString:WideString readonly dispid 1599;
		property Value:OleVariant readonly dispid 6;
		property SourceRange:ExcelRange readonly dispid 1600;
		property Name:WideString dispid 110;
		procedure SetParam(Type_:XlParameterType;Value:OleVariant);dispid 1601;
		property RefreshOnChange:WordBool dispid 1879;
	end;

	// *********************************************************************//
	// DispIntf:  Parameters
	// Flags:     (4096) Dispatchable
	// GUID:      {0002442B-0000-0000-C000-000000000046}
	// *********************************************************************//
	Parameters=dispinterface
		['{0002442B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Name:WideString;iDataType:OleVariant):Parameter;dispid 181;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Parameter;dispid 170;
		property _Default[Index:OleVariant]:Parameter readonly dispid 0;default;
		procedure Delete;dispid 117;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ODBCError
	// Flags:     (4096) Dispatchable
	// GUID:      {0002442C-0000-0000-C000-000000000046}
	// *********************************************************************//
	ODBCError=dispinterface
		['{0002442C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property SqlState:WideString readonly dispid 1603;
		property ErrorString:WideString readonly dispid 1490;
	end;

	// *********************************************************************//
	// DispIntf:  ODBCErrors
	// Flags:     (4096) Dispatchable
	// GUID:      {0002442D-0000-0000-C000-000000000046}
	// *********************************************************************//
	ODBCErrors=dispinterface
		['{0002442D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):ODBCError;dispid 170;
		property _Default[Index:Integer]:ODBCError readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Validation
	// Flags:     (4096) Dispatchable
	// GUID:      {0002442F-0000-0000-C000-000000000046}
	// *********************************************************************//
	Validation=dispinterface
		['{0002442F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Add(Type_:XlDVType;AlertStyle:OleVariant;Operator_:OleVariant;Formula1:OleVariant;Formula2:OleVariant);
			dispid 181;
		property AlertStyle:Integer readonly dispid 1605;
		property IgnoreBlank:WordBool dispid 1606;
		property IMEMode:Integer dispid 1607;
		property InCellDropdown:WordBool dispid 1608;
		procedure Delete;dispid 117;
		property ErrorMessage:WideString dispid 1609;
		property ErrorTitle:WideString dispid 1610;
		property InputMessage:WideString dispid 1611;
		property InputTitle:WideString dispid 1612;
		property Formula1:WideString readonly dispid 1579;
		property Formula2:WideString readonly dispid 1580;
		procedure Modify(Type_:OleVariant;AlertStyle:OleVariant;Operator_:OleVariant;Formula1:OleVariant;
			Formula2:OleVariant);dispid 1581;
		property Operator_:Integer readonly dispid 797;
		property ShowError:WordBool dispid 1613;
		property ShowInput:WordBool dispid 1614;
		property Type_:Integer readonly dispid 108;
		property Value:WordBool readonly dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  Hyperlinks
	// Flags:     (4096) Dispatchable
	// GUID:      {00024430-0000-0000-C000-000000000046}
	// *********************************************************************//
	Hyperlinks=dispinterface
		['{00024430-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Anchor:IDispatch;const Address:WideString;SubAddress:OleVariant;ScreenTip:OleVariant;
			TextToDisplay:OleVariant):IDispatch;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:Hyperlink readonly dispid 170;
		property _Default[Index:OleVariant]:Hyperlink readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  Hyperlink
	// Flags:     (4096) Dispatchable
	// GUID:      {00024431-0000-0000-C000-000000000046}
	// *********************************************************************//
	Hyperlink=dispinterface
		['{00024431-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property Range:ExcelRange readonly dispid 197;
		property Shape:Shape readonly dispid 1582;
		property SubAddress:WideString dispid 1471;
		property Address:WideString dispid 236;
		property Type_:Integer readonly dispid 108;
		procedure AddToFavorites;dispid 1476;
		procedure Delete;dispid 117;
		procedure Follow(NewWindow:OleVariant;AddHistory:OleVariant;ExtraInfo:OleVariant;Method:OleVariant;
			HeaderInfo:OleVariant);dispid 1616;
		property EmailSubject:WideString dispid 1883;
		property ScreenTip:WideString dispid 1881;
		property TextToDisplay:WideString dispid 1882;
		procedure CreateNewDocument(const Filename:WideString;EditNow:WordBool;Overwrite:WordBool);dispid 1884;
	end;

	// *********************************************************************//
	// DispIntf:  AutoFilter
	// Flags:     (4096) Dispatchable
	// GUID:      {00024432-0000-0000-C000-000000000046}
	// *********************************************************************//
	AutoFilter=dispinterface
		['{00024432-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Range:ExcelRange readonly dispid 197;
		property Filters:Filters readonly dispid 1617;
		property FilterMode:WordBool readonly dispid 800;
		property _Sort:Sort readonly dispid 880;
		procedure ApplyFilter;dispid 2640;
		procedure ShowAllData;dispid 794;
		property Sort:Sort readonly dispid 3288;
	end;

	// *********************************************************************//
	// DispIntf:  Filters
	// Flags:     (4096) Dispatchable
	// GUID:      {00024433-0000-0000-C000-000000000046}
	// *********************************************************************//
	Filters=dispinterface
		['{00024433-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property _Default[Index:Integer]:Filter readonly dispid 0;default;
		property Item[Index:Integer]:Filter readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Filter
	// Flags:     (4096) Dispatchable
	// GUID:      {00024434-0000-0000-C000-000000000046}
	// *********************************************************************//
	Filter=dispinterface
		['{00024434-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property On_:WordBool readonly dispid 1618;
		property Criteria1:OleVariant readonly dispid 796;
		property _Operator:XlAutoFilterOperator readonly dispid 2641;
		property Criteria2:OleVariant readonly dispid 798;
		property Operator_:XlAutoFilterOperator dispid 797;
		property Count:Integer readonly dispid 118;
	end;

	// *********************************************************************//
	// DispIntf:  AutoCorrect
	// Flags:     (4096) Dispatchable
	// GUID:      {000208D4-0000-0000-C000-000000000046}
	// *********************************************************************//
	AutoCorrect=dispinterface
		['{000208D4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function AddReplacement(const What:WideString;const Replacement:WideString):OleVariant;dispid 1146;
		property CapitalizeNamesOfDays:WordBool dispid 1150;
		function DeleteReplacement(const What:WideString):OleVariant;dispid 1147;
		property ReplacementList[Index:OleVariant]:OleVariant dispid 1151;
		property ReplaceText:WordBool dispid 1148;
		property TwoInitialCapitals:WordBool dispid 1149;
		property CorrectSentenceCap:WordBool dispid 1619;
		property CorrectCapsLock:WordBool dispid 1620;
		property DisplayAutoCorrectOptions:WordBool dispid 1926;
		property AutoExpandListRange:WordBool dispid 2294;
		property AutoFillFormulasInLists:WordBool dispid 2642;
		property KeepGeneralFormatLeadingZerosAsText:WordBool dispid 3354;
		property KeepGeneralFormatLargeNumbersAsText:WordBool dispid 3355;
		property KeepGeneralFormatDigitsWithEAsText:WordBool dispid 3356;
	end;

	// *********************************************************************//
	// DispIntf:  Border
	// Flags:     (4096) Dispatchable
	// GUID:      {00020854-0000-0000-C000-000000000046}
	// *********************************************************************//
	Border=dispinterface
		['{00020854-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Color:OleVariant dispid 99;
		property ColorIndex:OleVariant dispid 97;
		property LineStyle:OleVariant dispid 119;
		property Weight:OleVariant dispid 120;
		property ThemeColor:OleVariant dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
	end;

	// *********************************************************************//
	// DispIntf:  Interior
	// Flags:     (4096) Dispatchable
	// GUID:      {00020870-0000-0000-C000-000000000046}
	// *********************************************************************//
	Interior=dispinterface
		['{00020870-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Color:OleVariant dispid 99;
		property ColorIndex:OleVariant dispid 97;
		property InvertIfNegative:OleVariant dispid 132;
		property Pattern:OleVariant dispid 95;
		property PatternColor:OleVariant dispid 100;
		property PatternColorIndex:OleVariant dispid 98;
		property ThemeColor:OleVariant dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
		property PatternThemeColor:OleVariant dispid 2643;
		property PatternTintAndShade:OleVariant dispid 2644;
		property Gradient:IDispatch readonly dispid 2645;
	end;

	// *********************************************************************//
	// DispIntf:  ChartFillFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024435-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartFillFormat=dispinterface
		['{00024435-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure OneColorGradient(Style:MsoGradientStyle;Variant:Integer;Degree:Single);dispid 1621;
		procedure TwoColorGradient(Style:MsoGradientStyle;Variant:Integer);dispid 1624;
		procedure PresetTextured(PresetTexture:MsoPresetTexture);dispid 1625;
		procedure Solid;dispid 1627;
		procedure Patterned(Pattern:MsoPatternType);dispid 1628;
		procedure UserPicture(PictureFile:OleVariant;PictureFormat:OleVariant;PictureStackUnit:OleVariant;
			PicturePlacement:OleVariant);dispid 1629;
		procedure UserTextured(const TextureFile:WideString);dispid 1634;
		procedure PresetGradient(Style:MsoGradientStyle;Variant:Integer;PresetGradientType:MsoPresetGradientType);
			dispid 1636;
		property BackColor:ChartColorFormat readonly dispid 1638;
		property ForeColor:ChartColorFormat readonly dispid 1639;
		property GradientColorType:MsoGradientColorType readonly dispid 1640;
		property GradientDegree:Single readonly dispid 1641;
		property GradientStyle:MsoGradientStyle readonly dispid 1642;
		property GradientVariant:Integer readonly dispid 1643;
		property Pattern:MsoPatternType readonly dispid 95;
		property PresetGradientType:MsoPresetGradientType readonly dispid 1637;
		property PresetTexture:MsoPresetTexture readonly dispid 1626;
		property TextureName:WideString readonly dispid 1644;
		property TextureType:MsoTextureType readonly dispid 1645;
		property Type_:MsoFillType readonly dispid 108;
		property Visible:MsoTriState dispid 558;
	end;

	// *********************************************************************//
	// DispIntf:  ChartColorFormat
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024436-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartColorFormat=dispinterface
		['{00024436-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property SchemeColor:Integer dispid 1646;
		property RGB:Integer readonly dispid 1055;
		property _Default:Integer readonly dispid 0;
		property Type_:Integer readonly dispid 108;
	end;

	// *********************************************************************//
	// DispIntf:  Axis
	// Flags:     (4096) Dispatchable
	// GUID:      {00020848-0000-0000-C000-000000000046}
	// *********************************************************************//
	Axis=dispinterface
		['{00020848-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AxisBetweenCategories:WordBool dispid 45;
		property AxisGroup:XlAxisGroup readonly dispid 47;
		property AxisTitle:AxisTitle readonly dispid 82;
		property Border:Border readonly dispid 128;
		property CategoryNames:OleVariant dispid 156;
		property Crosses:XlAxisCrosses dispid 42;
		property CrossesAt:Double dispid 43;
		function Delete:OleVariant;dispid 117;
		property HasMajorGridlines:WordBool dispid 24;
		property HasMinorGridlines:WordBool dispid 25;
		property HasTitle:WordBool dispid 54;
		property MajorGridlines:Gridlines readonly dispid 89;
		property MajorTickMark:XlTickMark dispid 26;
		property MajorUnit:Double dispid 37;
		property MajorUnitIsAuto:WordBool dispid 38;
		property MaximumScale:Double dispid 35;
		property MaximumScaleIsAuto:WordBool dispid 36;
		property MinimumScale:Double dispid 33;
		property MinimumScaleIsAuto:WordBool dispid 34;
		property MinorGridlines:Gridlines readonly dispid 90;
		property MinorTickMark:XlTickMark dispid 27;
		property MinorUnit:Double dispid 39;
		property MinorUnitIsAuto:WordBool dispid 40;
		property ReversePlotOrder:WordBool dispid 44;
		property ScaleType:XlScaleType dispid 41;
		function Select:OleVariant;dispid 235;
		property TickLabelPosition:XlTickLabelPosition dispid 28;
		property TickLabels:TickLabels readonly dispid 91;
		property TickLabelSpacing:Integer dispid 29;
		property TickMarkSpacing:Integer dispid 31;
		property Type_:XlAxisType dispid 108;
		property BaseUnit:XlTimeUnit dispid 1647;
		property BaseUnitIsAuto:WordBool dispid 1648;
		property MajorUnitScale:XlTimeUnit dispid 1649;
		property MinorUnitScale:XlTimeUnit dispid 1650;
		property CategoryType:XlCategoryType dispid 1651;
		property Left:Double readonly dispid 127;
		property Top:Double readonly dispid 126;
		property Width:Double readonly dispid 122;
		property Height:Double readonly dispid 123;
		property DisplayUnit:XlDisplayUnit dispid 1886;
		property DisplayUnitCustom:Double dispid 1887;
		property HasDisplayUnitLabel:WordBool dispid 1888;
		property DisplayUnitLabel:DisplayUnitLabel readonly dispid 1889;
		property LogBase:Double dispid 2646;
		property TickLabelSpacingIsAuto:WordBool dispid 2647;
		property Format:ChartFormat readonly dispid 116;
		property CategorySortOrder:XlCategorySortOrder dispid 3228;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  ChartTitle
	// Flags:     (4096) Dispatchable
	// GUID:      {00020849-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartTitle=dispinterface
		['{00020849-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property Font:Font readonly dispid 146;
		property HorizontalAlignment:OleVariant dispid 136;
		property Left:Double dispid 127;
		property Orientation:OleVariant dispid 134;
		property Shadow:WordBool dispid 103;
		property Text:WideString dispid 138;
		property Top:Double dispid 126;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		property IncludeInLayout:WordBool dispid 2648;
		property Position:XlChartElementPosition dispid 133;
		property Format:ChartFormat readonly dispid 116;
		property Height:Double readonly dispid 123;
		property Width:Double readonly dispid 122;
		property Formula:WideString dispid 261;
		property FormulaR1C1:WideString dispid 264;
		property FormulaLocal:WideString dispid 263;
		property FormulaR1C1Local:WideString dispid 265;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  AxisTitle
	// Flags:     (4096) Dispatchable
	// GUID:      {0002084A-0000-0000-C000-000000000046}
	// *********************************************************************//
	AxisTitle=dispinterface
		['{0002084A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property Font:Font readonly dispid 146;
		property HorizontalAlignment:OleVariant dispid 136;
		property Left:Double dispid 127;
		property Orientation:OleVariant dispid 134;
		property Shadow:WordBool dispid 103;
		property Text:WideString dispid 138;
		property Top:Double dispid 126;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		property IncludeInLayout:WordBool dispid 2648;
		property Position:XlChartElementPosition dispid 133;
		property Format:ChartFormat readonly dispid 116;
		property Height:Double readonly dispid 123;
		property Width:Double readonly dispid 122;
		property Formula:WideString dispid 261;
		property FormulaR1C1:WideString dispid 264;
		property FormulaLocal:WideString dispid 263;
		property FormulaR1C1Local:WideString dispid 265;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  ChartGroup
	// Flags:     (4096) Dispatchable
	// GUID:      {00020859-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartGroup=dispinterface
		['{00020859-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AxisGroup:XlAxisGroup dispid 47;
		property DoughnutHoleSize:Integer dispid 1126;
		property DownBars:DownBars readonly dispid 141;
		property DropLines:DropLines readonly dispid 142;
		property FirstSliceAngle:Integer dispid 63;
		property GapWidth:Integer dispid 51;
		property HasDropLines:WordBool dispid 61;
		property HasHiLoLines:WordBool dispid 62;
		property HasRadarAxisLabels:WordBool dispid 64;
		property HasSeriesLines:WordBool dispid 65;
		property HasUpDownBars:WordBool dispid 66;
		property HiLoLines:HiLoLines readonly dispid 143;
		property Index:Integer readonly dispid 486;
		property Overlap:Integer dispid 56;
		property RadarAxisLabels:TickLabels readonly dispid 144;
		function SeriesCollection(Index:OleVariant):IDispatch;dispid 68;
		property SeriesLines:SeriesLines readonly dispid 145;
		property SubType:Integer dispid 109;
		property Type_:Integer dispid 108;
		property UpBars:UpBars readonly dispid 140;
		property VaryByCategories:WordBool dispid 60;
		property SizeRepresents:XlSizeRepresents dispid 1652;
		property BubbleScale:Integer dispid 1653;
		property ShowNegativeBubbles:WordBool dispid 1654;
		property SplitType:XlChartSplitType dispid 1655;
		property SplitValue:OleVariant dispid 1656;
		property SecondPlotSize:Integer dispid 1657;
		property Has3DShading:WordBool dispid 1658;
		function FullCategoryCollection(Index:OleVariant):IDispatch;dispid 3081;
		function CategoryCollection(Index:OleVariant):IDispatch;dispid 3082;
		property BinsType:XlBinsType dispid 3196;
		property BinWidthValue:Double dispid 3197;
		property BinsCountValue:Integer dispid 3198;
		property BinsOverflowEnabled:WordBool dispid 3199;
		property BinsOverflowValue:Double dispid 3200;
		property BinsUnderflowEnabled:WordBool dispid 3201;
		property BinsUnderflowValue:Double dispid 3202;
	end;

	// *********************************************************************//
	// DispIntf:  ChartGroups
	// Flags:     (4096) Dispatchable
	// GUID:      {0002085A-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartGroups=dispinterface
		['{0002085A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ChartGroup;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Axes
	// Flags:     (4096) Dispatchable
	// GUID:      {0002085B-0000-0000-C000-000000000046}
	// *********************************************************************//
	Axes=dispinterface
		['{0002085B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Type_:XlAxisType;AxisGroup:XlAxisGroup):Axis;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Type_:XlAxisType;AxisGroup:XlAxisGroup):Axis;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  Points
	// Flags:     (4096) Dispatchable
	// GUID:      {00020869-0000-0000-C000-000000000046}
	// *********************************************************************//
	Points=dispinterface
		['{00020869-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):Point;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:Integer):Point;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  Point
	// Flags:     (4096) Dispatchable
	// GUID:      {0002086A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Point=dispinterface
		['{0002086A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant)
			:OleVariant;dispid 151;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		function Copy:OleVariant;dispid 551;
		property DataLabel:DataLabel readonly dispid 158;
		function Delete:OleVariant;dispid 117;
		property Explosion:Integer dispid 182;
		property HasDataLabel:WordBool dispid 77;
		property Interior:Interior readonly dispid 129;
		property InvertIfNegative:WordBool dispid 132;
		property MarkerBackgroundColor:Integer dispid 73;
		property MarkerBackgroundColorIndex:XlColorIndex dispid 74;
		property MarkerForegroundColor:Integer dispid 75;
		property MarkerForegroundColorIndex:XlColorIndex dispid 76;
		property MarkerSize:Integer dispid 231;
		property MarkerStyle:XlMarkerStyle dispid 72;
		function Paste:OleVariant;dispid 211;
		property PictureType:XlChartPictureType dispid 161;
		property PictureUnit:Integer dispid 162;
		function Select:OleVariant;dispid 235;
		property ApplyPictToSides:WordBool dispid 1659;
		property ApplyPictToFront:WordBool dispid 1660;
		property ApplyPictToEnd:WordBool dispid 1661;
		property Shadow:WordBool dispid 103;
		property SecondaryPlot:WordBool dispid 1662;
		property Fill:ChartFillFormat readonly dispid 1663;
		function ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant):OleVariant;dispid 1922;
		property Has3DEffect:WordBool dispid 1665;
		property PictureUnit2:Double dispid 2649;
		property Format:ChartFormat readonly dispid 116;
		property Height:Double readonly dispid 123;
		property Width:Double readonly dispid 122;
		property Top:Double readonly dispid 126;
		property Left:Double readonly dispid 127;
		property Name:WideString readonly dispid 110;
		function PieSliceLocation(loc:XlPieSliceLocation;Index:XlPieSliceIndex):Double;dispid 2913;
		property IsTotal:WordBool dispid 3203;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  Series
	// Flags:     (4096) Dispatchable
	// GUID:      {0002086B-0000-0000-C000-000000000046}
	// *********************************************************************//
	Series=dispinterface
		['{0002086B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function _ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant)
			:OleVariant;dispid 151;
		property AxisGroup:XlAxisGroup dispid 47;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		function Copy:OleVariant;dispid 551;
		function DataLabels(Index:OleVariant):IDispatch;dispid 157;
		function Delete:OleVariant;dispid 117;
		function ErrorBar(Direction:XlErrorBarDirection;Include:XlErrorBarInclude;Type_:XlErrorBarType;Amount:OleVariant;
			MinusValues:OleVariant):OleVariant;dispid 152;
		property ErrorBars:ErrorBars readonly dispid 159;
		property Explosion:Integer dispid 182;
		property Formula:WideString dispid 261;
		property FormulaLocal:WideString dispid 263;
		property FormulaR1C1:WideString dispid 264;
		property FormulaR1C1Local:WideString dispid 265;
		property HasDataLabels:WordBool dispid 78;
		property HasErrorBars:WordBool dispid 160;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property InvertIfNegative:WordBool dispid 132;
		property MarkerBackgroundColor:Integer dispid 73;
		property MarkerBackgroundColorIndex:XlColorIndex dispid 74;
		property MarkerForegroundColor:Integer dispid 75;
		property MarkerForegroundColorIndex:XlColorIndex dispid 76;
		property MarkerSize:Integer dispid 231;
		property MarkerStyle:XlMarkerStyle dispid 72;
		property Name:WideString dispid 110;
		function Paste:OleVariant;dispid 211;
		property PictureType:XlChartPictureType dispid 161;
		property PictureUnit:Integer dispid 162;
		property PlotOrder:Integer dispid 228;
		function Points(Index:OleVariant):IDispatch;dispid 70;
		function Select:OleVariant;dispid 235;
		property Smooth:WordBool dispid 163;
		function Trendlines(Index:OleVariant):IDispatch;dispid 154;
		property Type_:Integer dispid 108;
		property ChartType:XlChartType dispid 1400;
		procedure ApplyCustomType(ChartType:XlChartType);dispid 1401;
		property Values:OleVariant dispid 164;
		property XValues:OleVariant dispid 1111;
		property BubbleSizes:OleVariant dispid 1664;
		property BarShape:XlBarShape dispid 1403;
		property ApplyPictToSides:WordBool dispid 1659;
		property ApplyPictToFront:WordBool dispid 1660;
		property ApplyPictToEnd:WordBool dispid 1661;
		property Has3DEffect:WordBool dispid 1665;
		property Shadow:WordBool dispid 103;
		property HasLeaderLines:WordBool dispid 1394;
		property LeaderLines:LeaderLines readonly dispid 1666;
		function ApplyDataLabels(Type_:XlDataLabelsType;LegendKey:OleVariant;AutoText:OleVariant;HasLeaderLines:OleVariant;
			ShowSeriesName:OleVariant;ShowCategoryName:OleVariant;ShowValue:OleVariant;ShowPercentage:OleVariant;
			ShowBubbleSize:OleVariant;Separator:OleVariant):OleVariant;dispid 1922;
		property PictureUnit2:Double dispid 2649;
		property Format:ChartFormat readonly dispid 116;
		property PlotColorIndex:Integer readonly dispid 2915;
		property InvertColor:Integer dispid 2916;
		property InvertColorIndex:Integer dispid 2917;
		property IsFiltered:WordBool dispid 3083;
		property ParentDataLabelOption:XlParentDataLabelOptions dispid 3204;
		property QuartileCalculationInclusiveMedian:WordBool dispid 3205;
		property ValueSortOrder:XlValueSortOrder dispid 3229;
		property GeoProjectionType:XlGeoProjectionType dispid 3250;
		property GeoMappingLevel:XlGeoMappingLevel dispid 3251;
		property RegionLabelOption:XlRegionLabelOptions dispid 3252;
		property SeriesColorGradientStyle:XlSeriesColorGradientStyle dispid 3261;
		property SeriesColorMinGradientStop:ChartSeriesGradientStopData readonly dispid 3262;
		property SeriesColorMidGradientStop:ChartSeriesGradientStopData readonly dispid 3263;
		property SeriesColorMaxGradientStop:ChartSeriesGradientStopData readonly dispid 3264;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  SeriesCollection
	// Flags:     (4096) Dispatchable
	// GUID:      {0002086C-0000-0000-C000-000000000046}
	// *********************************************************************//
	SeriesCollection=dispinterface
		['{0002086C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Source:OleVariant;Rowcol:XlRowCol;SeriesLabels:OleVariant;CategoryLabels:OleVariant;Replace:OleVariant)
			:Series;dispid 181;
		property Count:Integer readonly dispid 118;
		function Extend(Source:OleVariant;Rowcol:OleVariant;CategoryLabels:OleVariant):OleVariant;dispid 227;
		function Item(Index:OleVariant):Series;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function Paste(Rowcol:XlRowCol;SeriesLabels:OleVariant;CategoryLabels:OleVariant;Replace:OleVariant;
			NewSeries:OleVariant):OleVariant;dispid 211;
		function NewSeries:Series;dispid 1117;
		function _Default(Index:OleVariant):Series;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  DataLabel
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B2-0000-0000-C000-000000000046}
	// *********************************************************************//
	DataLabel=dispinterface
		['{000208B2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property Font:Font readonly dispid 146;
		property HorizontalAlignment:OleVariant dispid 136;
		property Left:Double dispid 127;
		property Orientation:OleVariant dispid 134;
		property Shadow:WordBool dispid 103;
		property Text:WideString dispid 138;
		property Top:Double dispid 126;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoText:WordBool dispid 135;
		property NumberFormat:WideString dispid 193;
		property NumberFormatLinked:WordBool dispid 194;
		property NumberFormatLocal:OleVariant dispid 1097;
		property ShowLegendKey:WordBool dispid 171;
		property Type_:OleVariant dispid 108;
		property Position:XlDataLabelPosition dispid 133;
		property ShowSeriesName:WordBool dispid 2022;
		property ShowCategoryName:WordBool dispid 2023;
		property ShowValue:WordBool dispid 2024;
		property ShowPercentage:WordBool dispid 2025;
		property ShowBubbleSize:WordBool dispid 2026;
		property Separator:OleVariant dispid 2027;
		property Format:ChartFormat readonly dispid 116;
		property _Height:Double readonly dispid 3084;
		property _Width:Double readonly dispid 3085;
		property Formula:WideString dispid 261;
		property FormulaR1C1:WideString dispid 264;
		property FormulaLocal:WideString dispid 263;
		property FormulaR1C1Local:WideString dispid 265;
		property ShowRange:WordBool dispid 3086;
		property Height:Double dispid 123;
		property Width:Double dispid 122;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  DataLabels
	// Flags:     (4096) Dispatchable
	// GUID:      {000208B3-0000-0000-C000-000000000046}
	// *********************************************************************//
	DataLabels=dispinterface
		['{000208B3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		procedure _Dummy9;dispid 65545;
		procedure _Dummy10;dispid 65546;
		property Font:Font readonly dispid 146;
		property HorizontalAlignment:OleVariant dispid 136;
		procedure _Dummy13;dispid 65549;
		property Orientation:OleVariant dispid 134;
		property Shadow:WordBool dispid 103;
		procedure _Dummy16;dispid 65552;
		procedure _Dummy17;dispid 65553;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		property AutoText:WordBool dispid 135;
		property NumberFormat:WideString dispid 193;
		property NumberFormatLinked:WordBool dispid 194;
		property NumberFormatLocal:OleVariant dispid 1097;
		property ShowLegendKey:WordBool dispid 171;
		property Type_:OleVariant dispid 108;
		property Position:XlDataLabelPosition dispid 133;
		property ShowSeriesName:WordBool dispid 2022;
		property ShowCategoryName:WordBool dispid 2023;
		property ShowValue:WordBool dispid 2024;
		property ShowPercentage:WordBool dispid 2025;
		property ShowBubbleSize:WordBool dispid 2026;
		property Separator:OleVariant dispid 2027;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):DataLabel;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:OleVariant):DataLabel;dispid 0;
		property Format:ChartFormat readonly dispid 116;
		procedure Propagate(Index:OleVariant);dispid 3087;
		property ShowRange:WordBool dispid 3086;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  LegendEntry
	// Flags:     (4096) Dispatchable
	// GUID:      {000208BA-0000-0000-C000-000000000046}
	// *********************************************************************//
	LegendEntry=dispinterface
		['{000208BA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Delete:OleVariant;dispid 117;
		property Font:Font readonly dispid 146;
		property Index:Integer readonly dispid 486;
		property LegendKey:LegendKey readonly dispid 174;
		function Select:OleVariant;dispid 235;
		property AutoScaleFont:OleVariant dispid 1525;
		property Left:Double readonly dispid 127;
		property Top:Double readonly dispid 126;
		property Width:Double readonly dispid 122;
		property Height:Double readonly dispid 123;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  LegendEntries
	// Flags:     (4096) Dispatchable
	// GUID:      {000208BB-0000-0000-C000-000000000046}
	// *********************************************************************//
	LegendEntries=dispinterface
		['{000208BB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):LegendEntry;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:OleVariant):LegendEntry;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  LegendKey
	// Flags:     (4096) Dispatchable
	// GUID:      {000208BC-0000-0000-C000-000000000046}
	// *********************************************************************//
	LegendKey=dispinterface
		['{000208BC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property InvertIfNegative:WordBool dispid 132;
		property MarkerBackgroundColor:Integer dispid 73;
		property MarkerBackgroundColorIndex:XlColorIndex dispid 74;
		property MarkerForegroundColor:Integer dispid 75;
		property MarkerForegroundColorIndex:XlColorIndex dispid 76;
		property MarkerSize:Integer dispid 231;
		property MarkerStyle:XlMarkerStyle dispid 72;
		property PictureType:Integer dispid 161;
		property PictureUnit:Integer dispid 162;
		function Select:OleVariant;dispid 235;
		property Smooth:WordBool dispid 163;
		property Left:Double readonly dispid 127;
		property Top:Double readonly dispid 126;
		property Width:Double readonly dispid 122;
		property Height:Double readonly dispid 123;
		property Shadow:WordBool dispid 103;
		property PictureUnit2:Double dispid 2649;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  Trendlines
	// Flags:     (4096) Dispatchable
	// GUID:      {000208BD-0000-0000-C000-000000000046}
	// *********************************************************************//
	Trendlines=dispinterface
		['{000208BD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Type_:XlTrendlineType;Order:OleVariant;Period:OleVariant;Forward:OleVariant;Backward:OleVariant;
			Intercept:OleVariant;DisplayEquation:OleVariant;DisplayRSquared:OleVariant;Name:OleVariant):Trendline;dispid 181;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Trendline;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:OleVariant):Trendline;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  Trendline
	// Flags:     (4096) Dispatchable
	// GUID:      {000208BE-0000-0000-C000-000000000046}
	// *********************************************************************//
	Trendline=dispinterface
		['{000208BE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Backward:Integer dispid 185;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		property DataLabel:DataLabel readonly dispid 158;
		function Delete:OleVariant;dispid 117;
		property DisplayEquation:WordBool dispid 190;
		property DisplayRSquared:WordBool dispid 189;
		property Forward:Integer dispid 191;
		property Index:Integer readonly dispid 486;
		property Intercept:Double dispid 186;
		property InterceptIsAuto:WordBool dispid 187;
		property Name:WideString dispid 110;
		property NameIsAuto:WordBool dispid 188;
		property Order:Integer dispid 192;
		property Period:Integer dispid 184;
		function Select:OleVariant;dispid 235;
		property Type_:XlTrendlineType dispid 108;
		property Backward2:Double dispid 2650;
		property Forward2:Double dispid 2651;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  Corners
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000208C0-0000-0000-C000-000000000046}
	// *********************************************************************//
	Corners=dispinterface
		['{000208C0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
	end;

	// *********************************************************************//
	// DispIntf:  SeriesLines
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C1-0000-0000-C000-000000000046}
	// *********************************************************************//
	SeriesLines=dispinterface
		['{000208C1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  HiLoLines
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C2-0000-0000-C000-000000000046}
	// *********************************************************************//
	HiLoLines=dispinterface
		['{000208C2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  Gridlines
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C3-0000-0000-C000-000000000046}
	// *********************************************************************//
	Gridlines=dispinterface
		['{000208C3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  DropLines
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C4-0000-0000-C000-000000000046}
	// *********************************************************************//
	DropLines=dispinterface
		['{000208C4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  LeaderLines
	// Flags:     (4096) Dispatchable
	// GUID:      {00024437-0000-0000-C000-000000000046}
	// *********************************************************************//
	LeaderLines=dispinterface
		['{00024437-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Border:Border readonly dispid 128;
		procedure Delete;dispid 117;
		procedure Select;dispid 235;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  UpBars
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C5-0000-0000-C000-000000000046}
	// *********************************************************************//
	UpBars=dispinterface
		['{000208C5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  DownBars
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C6-0000-0000-C000-000000000046}
	// *********************************************************************//
	DownBars=dispinterface
		['{000208C6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  Floor
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C7-0000-0000-C000-000000000046}
	// *********************************************************************//
	Floor=dispinterface
		['{000208C7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property PictureType:OleVariant dispid 161;
		procedure Paste;dispid 211;
		property Thickness:Integer dispid 2652;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  Walls
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Walls=dispinterface
		['{000208C8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property PictureType:OleVariant dispid 161;
		procedure Paste;dispid 211;
		property PictureUnit:OleVariant dispid 162;
		property Thickness:Integer dispid 2652;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  TickLabels
	// Flags:     (4096) Dispatchable
	// GUID:      {000208C9-0000-0000-C000-000000000046}
	// *********************************************************************//
	TickLabels=dispinterface
		['{000208C9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Delete:OleVariant;dispid 117;
		property Font:Font readonly dispid 146;
		property Name:WideString readonly dispid 110;
		property NumberFormat:WideString dispid 193;
		property NumberFormatLinked:WordBool dispid 194;
		property NumberFormatLocal:OleVariant dispid 1097;
		property Orientation:XlTickLabelOrientation dispid 134;
		function Select:OleVariant;dispid 235;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		property Depth:Integer readonly dispid 1890;
		property Offset:Integer dispid 254;
		property Alignment:Integer dispid 453;
		property MultiLevel:WordBool dispid 2653;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  PlotArea
	// Flags:     (4096) Dispatchable
	// GUID:      {000208CB-0000-0000-C000-000000000046}
	// *********************************************************************//
	PlotArea=dispinterface
		['{000208CB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function ClearFormats:OleVariant;dispid 112;
		property Height:Double dispid 123;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Left:Double dispid 127;
		property Top:Double dispid 126;
		property Width:Double dispid 122;
		property _InsideLeft:Double readonly dispid 2654;
		property _InsideTop:Double readonly dispid 2655;
		property _InsideWidth:Double readonly dispid 2656;
		property _InsideHeight:Double readonly dispid 2657;
		property InsideLeft:Double dispid 1667;
		property InsideTop:Double dispid 1668;
		property InsideWidth:Double dispid 1669;
		property InsideHeight:Double dispid 1670;
		property Position:XlChartElementPosition dispid 133;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  ChartArea
	// Flags:     (4096) Dispatchable
	// GUID:      {000208CC-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartArea=dispinterface
		['{000208CC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Clear:OleVariant;dispid 111;
		function ClearContents:OleVariant;dispid 113;
		function Copy:OleVariant;dispid 551;
		property Font:Font readonly dispid 146;
		property Shadow:WordBool dispid 103;
		function ClearFormats:OleVariant;dispid 112;
		property Height:Double dispid 123;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Left:Double dispid 127;
		property Top:Double dispid 126;
		property Width:Double dispid 122;
		property AutoScaleFont:OleVariant dispid 1525;
		property Format:ChartFormat readonly dispid 116;
		property RoundedCorners:WordBool dispid 619;
	end;

	// *********************************************************************//
	// DispIntf:  Legend
	// Flags:     (4096) Dispatchable
	// GUID:      {000208CD-0000-0000-C000-000000000046}
	// *********************************************************************//
	Legend=dispinterface
		['{000208CD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Font:Font readonly dispid 146;
		function LegendEntries(Index:OleVariant):IDispatch;dispid 173;
		property Position:XlLegendPosition dispid 133;
		property Shadow:WordBool dispid 103;
		function Clear:OleVariant;dispid 111;
		property Height:Double dispid 123;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Left:Double dispid 127;
		property Top:Double dispid 126;
		property Width:Double dispid 122;
		property AutoScaleFont:OleVariant dispid 1525;
		property IncludeInLayout:WordBool dispid 2648;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  ErrorBars
	// Flags:     (4096) Dispatchable
	// GUID:      {000208CE-0000-0000-C000-000000000046}
	// *********************************************************************//
	ErrorBars=dispinterface
		['{000208CE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		function ClearFormats:OleVariant;dispid 112;
		property EndStyle:XlEndStyleCap dispid 1124;
		property Format:ChartFormat readonly dispid 116;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  DataTable
	// Flags:     (4096) Dispatchable
	// GUID:      {00020843-0000-0000-C000-000000000046}
	// *********************************************************************//
	DataTable=dispinterface
		['{00020843-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ShowLegendKey:WordBool dispid 171;
		property HasBorderHorizontal:WordBool dispid 1671;
		property HasBorderVertical:WordBool dispid 1672;
		property HasBorderOutline:WordBool dispid 1673;
		property Border:Border readonly dispid 128;
		property Font:Font readonly dispid 146;
		procedure Select;dispid 235;
		procedure Delete;dispid 117;
		property AutoScaleFont:OleVariant dispid 1525;
		property Format:ChartFormat readonly dispid 116;
	end;

	// *********************************************************************//
	// DispIntf:  Phonetic
	// Flags:     (4096) Dispatchable
	// GUID:      {00024438-0000-0000-C000-000000000046}
	// *********************************************************************//
	Phonetic=dispinterface
		['{00024438-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Visible:WordBool dispid 558;
		property CharacterType:Integer dispid 1674;
		property Alignment:Integer dispid 453;
		property Font:Font readonly dispid 146;
		property Text:WideString dispid 138;
	end;

	// *********************************************************************//
	// DispIntf:  Shape
	// Flags:     (4096) Dispatchable
	// GUID:      {00024439-0000-0000-C000-000000000046}
	// *********************************************************************//
	Shape=dispinterface
		['{00024439-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Apply;dispid 1675;
		procedure Delete;dispid 117;
		function Duplicate:Shape;dispid 1039;
		procedure Flip(FlipCmd:MsoFlipCmd);dispid 1676;
		procedure IncrementLeft(Increment:Single);dispid 1678;
		procedure IncrementRotation(Increment:Single);dispid 1680;
		procedure IncrementTop(Increment:Single);dispid 1681;
		procedure PickUp;dispid 1682;
		procedure RerouteConnections;dispid 1683;
		procedure ScaleHeight(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant);dispid 1684;
		procedure ScaleWidth(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant);dispid 1688;
		procedure Select(Replace:OleVariant);dispid 235;
		procedure SetShapesDefaultProperties;dispid 1689;
		function Ungroup:ShapeRange;dispid 244;
		procedure ZOrder(ZOrderCmd:MsoZOrderCmd);dispid 622;
		property Adjustments:Adjustments readonly dispid 1691;
		property TextFrame:TextFrame readonly dispid 1692;
		property AutoShapeType:MsoAutoShapeType dispid 1693;
		property Callout:CalloutFormat readonly dispid 1694;
		property ConnectionSiteCount:Integer readonly dispid 1695;
		property Connector:MsoTriState readonly dispid 1696;
		property ConnectorFormat:ConnectorFormat readonly dispid 1697;
		property Fill:FillFormat readonly dispid 1663;
		property GroupItems:GroupShapes readonly dispid 1698;
		property Height:Single dispid 123;
		property HorizontalFlip:MsoTriState readonly dispid 1699;
		property Left:Single dispid 127;
		property Line:LineFormat readonly dispid 817;
		property LockAspectRatio:MsoTriState dispid 1700;
		property Name:WideString dispid 110;
		property Nodes:ShapeNodes readonly dispid 1701;
		property Rotation:Single dispid 59;
		property PictureFormat:PictureFormat readonly dispid 1631;
		property Shadow:ShadowFormat readonly dispid 103;
		property TextEffect:TextEffectFormat readonly dispid 1702;
		property ThreeD:ThreeDFormat readonly dispid 1703;
		property Top:Single dispid 126;
		property Type_:MsoShapeType readonly dispid 108;
		property VerticalFlip:MsoTriState readonly dispid 1704;
		property Vertices:OleVariant readonly dispid 621;
		property Visible:MsoTriState dispid 558;
		property Width:Single dispid 122;
		property ZOrderPosition:Integer readonly dispid 1705;
		property Hyperlink:Hyperlink readonly dispid 1706;
		property BlackWhiteMode:MsoBlackWhiteMode dispid 1707;
		property DrawingObject:IDispatch readonly dispid 1708;
		property OnAction:WideString dispid 596;
		property Locked:WordBool dispid 269;
		property TopLeftCell:ExcelRange readonly dispid 620;
		property BottomRightCell:ExcelRange readonly dispid 615;
		property Placement:XlPlacement dispid 617;
		procedure Copy;dispid 551;
		procedure Cut;dispid 565;
		procedure CopyPicture(Appearance:OleVariant;Format:OleVariant);dispid 213;
		property ControlFormat:ControlFormat readonly dispid 1709;
		property LinkFormat:LinkFormat readonly dispid 1710;
		property OLEFormat:OLEFormat readonly dispid 1711;
		property FormControlType:XlFormControl readonly dispid 1712;
		property AlternativeText:WideString dispid 1891;
		property Script:Script readonly dispid 1892;
		property DiagramNode:DiagramNode readonly dispid 2165;
		property HasDiagramNode:MsoTriState readonly dispid 2166;
		property Diagram:Diagram readonly dispid 2167;
		property HasDiagram:MsoTriState readonly dispid 2168;
		property Child:MsoTriState readonly dispid 2169;
		property ParentGroup:Shape readonly dispid 2170;
		property CanvasItems:CanvasShapes readonly dispid 2171;
		property ID:Integer readonly dispid 570;
		procedure CanvasCropLeft(Increment:Single);dispid 2172;
		procedure CanvasCropTop(Increment:Single);dispid 2173;
		procedure CanvasCropRight(Increment:Single);dispid 2174;
		procedure CanvasCropBottom(Increment:Single);dispid 2175;
		property Chart:ExcelChart readonly dispid 7;
		property HasChart:MsoTriState readonly dispid 2658;
		property TextFrame2:TextFrame2 readonly dispid 2659;
		property ShapeStyle:MsoShapeStyleIndex dispid 2660;
		property BackgroundStyle:MsoBackgroundStyleIndex dispid 2661;
		property SoftEdge:SoftEdgeFormat readonly dispid 2662;
		property Glow:GlowFormat readonly dispid 2663;
		property Reflection:ReflectionFormat readonly dispid 2664;
		property HasSmartArt:MsoTriState readonly dispid 2918;
		property SmartArt:SmartArt readonly dispid 2919;
		property Title:WideString dispid 199;
		property GraphicStyle:MsoGraphicStyleIndex dispid 3272;
		property Model3D:Model3DFormat readonly dispid 3357;
		property Decorative:MsoTriState dispid 3358;
	end;

	// *********************************************************************//
	// DispIntf:  Shapes
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Shapes=dispinterface
		['{0002443A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Shape;dispid 170;
		function _Default(Index:OleVariant):Shape;dispid 0;
		property _NewEnum:IUnknown readonly dispid-4;
		function AddCallout(Type_:MsoCalloutType;Left:Single;Top:Single;Width:Single;Height:Single):Shape;dispid 1713;
		function AddConnector(Type_:MsoConnectorType;BeginX:Single;BeginY:Single;EndX:Single;EndY:Single):Shape;dispid 1714;
		function AddCurve(SafeArrayOfPoints:OleVariant):Shape;dispid 1719;
		function AddLabel(Orientation:MsoTextOrientation;Left:Single;Top:Single;Width:Single;Height:Single):Shape;
			dispid 1721;
		function AddLine(BeginX:Single;BeginY:Single;EndX:Single;EndY:Single):Shape;dispid 1722;
		function AddPicture(const Filename:WideString;LinkToFile:MsoTriState;SaveWithDocument:MsoTriState;Left:Single;
			Top:Single;Width:Single;Height:Single):Shape;dispid 1723;
		function AddPolyline(SafeArrayOfPoints:OleVariant):Shape;dispid 1726;
		function AddShape(Type_:MsoAutoShapeType;Left:Single;Top:Single;Width:Single;Height:Single):Shape;dispid 1727;
		function AddTextEffect(PresetTextEffect:MsoPresetTextEffect;const Text:WideString;const FontName:WideString;
			FontSize:Single;FontBold:MsoTriState;FontItalic:MsoTriState;Left:Single;Top:Single):Shape;dispid 1728;
		function AddTextbox(Orientation:MsoTextOrientation;Left:Single;Top:Single;Width:Single;Height:Single):Shape;
			dispid 1734;
		function BuildFreeform(EditingType:MsoEditingType;X1:Single;Y1:Single):FreeformBuilder;dispid 1735;
		property Range[Index:OleVariant]:ShapeRange readonly dispid 197;
		procedure SelectAll;dispid 1737;
		function AddFormControl(Type_:XlFormControl;Left:Integer;Top:Integer;Width:Integer;Height:Integer):Shape;
			dispid 1738;
		function AddOLEObject(ClassType:OleVariant;Filename:OleVariant;Link:OleVariant;DisplayAsIcon:OleVariant;
			IconFileName:OleVariant;IconIndex:OleVariant;IconLabel:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant):Shape;dispid 1739;
		function AddDiagram(Type_:MsoDiagramType;Left:Single;Top:Single;Width:Single;Height:Single):Shape;dispid 2176;
		function AddCanvas(Left:Single;Top:Single;Width:Single;Height:Single):Shape;dispid 2177;
		function AddChart(XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;Height:OleVariant):Shape;
			dispid 2665;
		function AddSmartArt(const Layout:SmartArtLayout;Left:OleVariant;Top:OleVariant;Width:OleVariant;Height:OleVariant)
			:Shape;dispid 2920;
		function AddChart2(Style:OleVariant;XlChartType:OleVariant;Left:OleVariant;Top:OleVariant;Width:OleVariant;
			Height:OleVariant;NewLayout:OleVariant):Shape;dispid 3088;
		function AddPicture2(const Filename:WideString;LinkToFile:MsoTriState;SaveWithDocument:MsoTriState;Left:Single;
			Top:Single;Width:Single;Height:Single;Compress:MsoPictureCompress):Shape;dispid 3159;
		function Add3DModel(const Filename:WideString;LinkToFile:OleVariant;SaveWithDocument:OleVariant;Left:OleVariant;
			Top:OleVariant;Width:OleVariant;Height:OleVariant):Shape;dispid 3359;
	end;

	// *********************************************************************//
	// DispIntf:  ShapeRange
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443B-0000-0000-C000-000000000046}
	// *********************************************************************//
	ShapeRange=dispinterface
		['{0002443B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Shape;dispid 170;
		function _Default(Index:OleVariant):Shape;dispid 0;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Align(AlignCmd:MsoAlignCmd;RelativeTo:MsoTriState);dispid 1740;
		procedure Apply;dispid 1675;
		procedure Delete;dispid 117;
		procedure Distribute(DistributeCmd:MsoDistributeCmd;RelativeTo:MsoTriState);dispid 1742;
		function Duplicate:ShapeRange;dispid 1039;
		procedure Flip(FlipCmd:MsoFlipCmd);dispid 1676;
		procedure IncrementLeft(Increment:Single);dispid 1678;
		procedure IncrementRotation(Increment:Single);dispid 1680;
		procedure IncrementTop(Increment:Single);dispid 1681;
		function Group:Shape;dispid 46;
		procedure PickUp;dispid 1682;
		procedure RerouteConnections;dispid 1683;
		function Regroup:Shape;dispid 1744;
		procedure ScaleHeight(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant);dispid 1684;
		procedure ScaleWidth(Factor:Single;RelativeToOriginalSize:MsoTriState;Scale:OleVariant);dispid 1688;
		procedure Select(Replace:OleVariant);dispid 235;
		procedure SetShapesDefaultProperties;dispid 1689;
		function Ungroup:ShapeRange;dispid 244;
		procedure ZOrder(ZOrderCmd:MsoZOrderCmd);dispid 622;
		property Adjustments:Adjustments readonly dispid 1691;
		property TextFrame:TextFrame readonly dispid 1692;
		property AutoShapeType:MsoAutoShapeType dispid 1693;
		property Callout:CalloutFormat readonly dispid 1694;
		property ConnectionSiteCount:Integer readonly dispid 1695;
		property Connector:MsoTriState readonly dispid 1696;
		property ConnectorFormat:ConnectorFormat readonly dispid 1697;
		property Fill:FillFormat readonly dispid 1663;
		property GroupItems:GroupShapes readonly dispid 1698;
		property Height:Single dispid 123;
		property HorizontalFlip:MsoTriState readonly dispid 1699;
		property Left:Single dispid 127;
		property Line:LineFormat readonly dispid 817;
		property LockAspectRatio:MsoTriState dispid 1700;
		property Name:WideString dispid 110;
		property Nodes:ShapeNodes readonly dispid 1701;
		property Rotation:Single dispid 59;
		property PictureFormat:PictureFormat readonly dispid 1631;
		property Shadow:ShadowFormat readonly dispid 103;
		property TextEffect:TextEffectFormat readonly dispid 1702;
		property ThreeD:ThreeDFormat readonly dispid 1703;
		property Top:Single dispid 126;
		property Type_:MsoShapeType readonly dispid 108;
		property VerticalFlip:MsoTriState readonly dispid 1704;
		property Vertices:OleVariant readonly dispid 621;
		property Visible:MsoTriState dispid 558;
		property Width:Single dispid 122;
		property ZOrderPosition:Integer readonly dispid 1705;
		property BlackWhiteMode:MsoBlackWhiteMode dispid 1707;
		property AlternativeText:WideString dispid 1891;
		property DiagramNode:DiagramNode readonly dispid 2165;
		property HasDiagramNode:MsoTriState readonly dispid 2166;
		property Diagram:Diagram readonly dispid 2167;
		property HasDiagram:MsoTriState readonly dispid 2168;
		property Child:MsoTriState readonly dispid 2169;
		property ParentGroup:Shape readonly dispid 2170;
		property CanvasItems:CanvasShapes readonly dispid 2171;
		property ID:Integer readonly dispid 570;
		procedure CanvasCropLeft(Increment:Single);dispid 2172;
		procedure CanvasCropTop(Increment:Single);dispid 2173;
		procedure CanvasCropRight(Increment:Single);dispid 2174;
		procedure CanvasCropBottom(Increment:Single);dispid 2175;
		property Chart:ExcelChart readonly dispid 7;
		property HasChart:MsoTriState readonly dispid 2658;
		property TextFrame2:TextFrame2 readonly dispid 2659;
		property ShapeStyle:MsoShapeStyleIndex dispid 2660;
		property BackgroundStyle:MsoBackgroundStyleIndex dispid 2661;
		property SoftEdge:SoftEdgeFormat readonly dispid 2662;
		property Glow:GlowFormat readonly dispid 2663;
		property Reflection:ReflectionFormat readonly dispid 2664;
		property Title:WideString dispid 199;
		property GraphicStyle:MsoGraphicStyleIndex dispid 3272;
		property Model3D:Model3DFormat readonly dispid 3357;
		property Decorative:MsoTriState dispid 3358;
	end;

	// *********************************************************************//
	// DispIntf:  GroupShapes
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443C-0000-0000-C000-000000000046}
	// *********************************************************************//
	GroupShapes=dispinterface
		['{0002443C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Shape;dispid 170;
		function _Default(Index:OleVariant):Shape;dispid 0;
		property _NewEnum:IUnknown readonly dispid-4;
		property Range[Index:OleVariant]:ShapeRange readonly dispid 197;
	end;

	// *********************************************************************//
	// DispIntf:  TextFrame
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443D-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextFrame=dispinterface
		['{0002443D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property MarginBottom:Single dispid 1745;
		property MarginLeft:Single dispid 1746;
		property MarginRight:Single dispid 1747;
		property MarginTop:Single dispid 1748;
		property Orientation:MsoTextOrientation dispid 134;
		function Characters(Start:OleVariant;Length:OleVariant):Characters;dispid 603;
		property HorizontalAlignment:XlHAlign dispid 136;
		property VerticalAlignment:XlVAlign dispid 137;
		property AutoSize:WordBool dispid 614;
		property ReadingOrder:Integer dispid 975;
		property AutoMargins:WordBool dispid 1749;
		property VerticalOverflow:XlOartVerticalOverflow dispid 2922;
		property HorizontalOverflow:XlOartHorizontalOverflow dispid 2923;
	end;

	// *********************************************************************//
	// DispIntf:  ConnectorFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443E-0000-0000-C000-000000000046}
	// *********************************************************************//
	ConnectorFormat=dispinterface
		['{0002443E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure BeginConnect(const ConnectedShape:Shape;ConnectionSite:Integer);dispid 1750;
		procedure BeginDisconnect;dispid 1753;
		procedure EndConnect(const ConnectedShape:Shape;ConnectionSite:Integer);dispid 1754;
		procedure EndDisconnect;dispid 1755;
		property BeginConnected:MsoTriState readonly dispid 1756;
		property BeginConnectedShape:Shape readonly dispid 1757;
		property BeginConnectionSite:Integer readonly dispid 1758;
		property EndConnected:MsoTriState readonly dispid 1759;
		property EndConnectedShape:Shape readonly dispid 1760;
		property EndConnectionSite:Integer readonly dispid 1761;
		property Type_:MsoConnectorType dispid 108;
	end;

	// *********************************************************************//
	// DispIntf:  FreeformBuilder
	// Flags:     (4096) Dispatchable
	// GUID:      {0002443F-0000-0000-C000-000000000046}
	// *********************************************************************//
	FreeformBuilder=dispinterface
		['{0002443F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure AddNodes(SegmentType:MsoSegmentType;EditingType:MsoEditingType;X1:Single;Y1:Single;X2:OleVariant;
			Y2:OleVariant;X3:OleVariant;Y3:OleVariant);dispid 1762;
		function ConvertToShape:Shape;dispid 1766;
	end;

	// *********************************************************************//
	// DispIntf:  ControlFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {00024440-0000-0000-C000-000000000046}
	// *********************************************************************//
	ControlFormat=dispinterface
		['{00024440-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure AddItem(const Text:WideString;Index:OleVariant);dispid 851;
		procedure RemoveAllItems;dispid 853;
		procedure RemoveItem(Index:Integer;Count:OleVariant);dispid 852;
		property DropDownLines:Integer dispid 848;
		property Enabled:WordBool dispid 600;
		property LargeChange:Integer dispid 845;
		property LinkedCell:WideString dispid 1058;
		function List(Index:OleVariant):OleVariant;dispid 861;
		property ListCount:Integer dispid 849;
		property ListFillRange:WideString dispid 847;
		property ListIndex:Integer dispid 850;
		property LockedText:WordBool dispid 616;
		property Max:Integer dispid 842;
		property Min:Integer dispid 843;
		property MultiSelect:Integer dispid 32;
		property PrintObject:WordBool dispid 618;
		property SmallChange:Integer dispid 844;
		property _Default:Integer dispid 0;
		property Value:Integer dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  OLEFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {00024441-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEFormat=dispinterface
		['{00024441-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Activate;dispid 304;
		property Object_:IDispatch readonly dispid 1049;
		property progID:WideString readonly dispid 1523;
		procedure Verb(Verb:OleVariant);dispid 606;
	end;

	// *********************************************************************//
	// DispIntf:  LinkFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {00024442-0000-0000-C000-000000000046}
	// *********************************************************************//
	LinkFormat=dispinterface
		['{00024442-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AutoUpdate:WordBool dispid 1048;
		property Locked:WordBool dispid 269;
		procedure Update;dispid 680;
	end;

	// *********************************************************************//
	// DispIntf:  PublishObjects
	// Flags:     (4096) Dispatchable
	// GUID:      {00024443-0000-0000-C000-000000000046}
	// *********************************************************************//
	PublishObjects=dispinterface
		['{00024443-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(SourceType:XlSourceType;const Filename:WideString;Sheet:OleVariant;Source:OleVariant;
			HtmlType:OleVariant;DivID:OleVariant;Title:OleVariant):PublishObject;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:PublishObject readonly dispid 170;
		property _Default[Index:OleVariant]:PublishObject readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Delete;dispid 117;
		procedure Publish;dispid 1895;
	end;

	// *********************************************************************//
	// DispIntf:  OLEDBError
	// Flags:     (4096) Dispatchable
	// GUID:      {00024445-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEDBError=dispinterface
		['{00024445-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property SqlState:WideString readonly dispid 1603;
		property ErrorString:WideString readonly dispid 1490;
		property Native:Integer readonly dispid 1897;
		property Number:Integer readonly dispid 451;
		property Stage:Integer readonly dispid 1898;
	end;

	// *********************************************************************//
	// DispIntf:  OLEDBErrors
	// Flags:     (4096) Dispatchable
	// GUID:      {00024446-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEDBErrors=dispinterface
		['{00024446-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):OLEDBError;dispid 170;
		property _Default[Index:Integer]:OLEDBError readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Phonetics
	// Flags:     (4096) Dispatchable
	// GUID:      {00024447-0000-0000-C000-000000000046}
	// *********************************************************************//
	Phonetics=dispinterface
		['{00024447-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Start:Integer readonly dispid 608;
		property Length:Integer readonly dispid 609;
		property Visible:WordBool dispid 558;
		property CharacterType:Integer dispid 1674;
		property Alignment:Integer dispid 453;
		property Font:Font readonly dispid 146;
		property Item[Index:Integer]:IDispatch readonly dispid 170;
		procedure Delete;dispid 117;
		procedure Add(Start:Integer;Length:Integer;const Text:WideString);dispid 181;
		property Text:WideString dispid 138;
		property _Default[Index:Integer]:IDispatch readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  PivotLayout
	// Flags:     (4096) Dispatchable
	// GUID:      {0002444A-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotLayout=dispinterface
		['{0002444A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ColumnFields[Index:OleVariant]:IDispatch readonly dispid 713;
		property DataFields[Index:OleVariant]:IDispatch readonly dispid 715;
		property PageFields[Index:OleVariant]:IDispatch readonly dispid 714;
		property RowFields[Index:OleVariant]:IDispatch readonly dispid 712;
		property HiddenFields[Index:OleVariant]:IDispatch readonly dispid 711;
		property VisibleFields[Index:OleVariant]:IDispatch readonly dispid 710;
		property PivotFields[Index:OleVariant]:IDispatch readonly dispid 718;
		property CubeFields:CubeFields readonly dispid 1839;
		property PivotCache:PivotCache readonly dispid 1496;
		property PivotTable:PivotTable readonly dispid 716;
		property InnerDetail:WideString dispid 698;
		procedure AddFields(RowFields:OleVariant;ColumnFields:OleVariant;PageFields:OleVariant;AppendField:OleVariant);
			dispid 708;
	end;

	// *********************************************************************//
	// DispIntf:  DisplayUnitLabel
	// Flags:     (4096) Dispatchable
	// GUID:      {0002084C-0000-0000-C000-000000000046}
	// *********************************************************************//
	DisplayUnitLabel=dispinterface
		['{0002084C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		function Select:OleVariant;dispid 235;
		property Border:Border readonly dispid 128;
		function Delete:OleVariant;dispid 117;
		property Interior:Interior readonly dispid 129;
		property Fill:ChartFillFormat readonly dispid 1663;
		property Caption:WideString dispid 139;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property Font:Font readonly dispid 146;
		property HorizontalAlignment:OleVariant dispid 136;
		property Left:Double dispid 127;
		property Orientation:OleVariant dispid 134;
		property Shadow:WordBool dispid 103;
		property Text:WideString dispid 138;
		property Top:Double dispid 126;
		property VerticalAlignment:OleVariant dispid 137;
		property ReadingOrder:Integer dispid 975;
		property AutoScaleFont:OleVariant dispid 1525;
		procedure _Dummy21;dispid 65557;
		property Position:XlChartElementPosition dispid 133;
		property Format:ChartFormat readonly dispid 116;
		property Height:Double readonly dispid 123;
		property Width:Double readonly dispid 122;
		property Formula:WideString dispid 261;
		property FormulaR1C1:WideString dispid 264;
		property FormulaLocal:WideString dispid 263;
		property FormulaR1C1Local:WideString dispid 265;
		procedure SetProperty(const ID:WideString;Value:OleVariant);dispid 3253;
		function GetProperty(const ID:WideString):OleVariant;dispid 3256;
	end;

	// *********************************************************************//
	// DispIntf:  CellFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {00024450-0000-0000-C000-000000000046}
	// *********************************************************************//
	CellFormat=dispinterface
		['{00024450-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Borders:Borders dispid 435;
		property Font:Font dispid 146;
		property Interior:Interior dispid 129;
		property NumberFormat:OleVariant dispid 193;
		property NumberFormatLocal:OleVariant dispid 1097;
		property AddIndent:OleVariant dispid 1063;
		property IndentLevel:OleVariant dispid 201;
		property HorizontalAlignment:OleVariant dispid 136;
		property VerticalAlignment:OleVariant dispid 137;
		property Orientation:OleVariant dispid 134;
		property ShrinkToFit:OleVariant dispid 209;
		property WrapText:OleVariant dispid 276;
		property Locked:OleVariant dispid 269;
		property FormulaHidden:OleVariant dispid 262;
		property MergeCells:OleVariant dispid 208;
		procedure Clear;dispid 111;
	end;

	// *********************************************************************//
	// DispIntf:  UsedObjects
	// Flags:     (4096) Dispatchable
	// GUID:      {00024451-0000-0000-C000-000000000046}
	// *********************************************************************//
	UsedObjects=dispinterface
		['{00024451-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  CustomProperties
	// Flags:     (4096) Dispatchable
	// GUID:      {00024452-0000-0000-C000-000000000046}
	// *********************************************************************//
	CustomProperties=dispinterface
		['{00024452-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Name:WideString;Value:OleVariant):CustomProperty;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:CustomProperty readonly dispid 0;default;
		property Item[Index:OleVariant]:CustomProperty readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CustomProperty
	// Flags:     (4096) Dispatchable
	// GUID:      {00024453-0000-0000-C000-000000000046}
	// *********************************************************************//
	CustomProperty=dispinterface
		['{00024453-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property Value:OleVariant dispid 6;
		property _Default:OleVariant readonly dispid 0;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  CalculatedMembers
	// Flags:     (4096) Dispatchable
	// GUID:      {00024454-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalculatedMembers=dispinterface
		['{00024454-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:CalculatedMember readonly dispid 170;
		property _Default[Index:OleVariant]:CalculatedMember readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function _Add(const Name:WideString;const Formula:WideString;SolveOrder:OleVariant;Type_:OleVariant)
			:CalculatedMember;dispid 2085;
		function Add(const Name:WideString;Formula:OleVariant;SolveOrder:OleVariant;Type_:OleVariant;Dynamic:OleVariant;
			DisplayFolder:OleVariant;HierarchizeDistinct:OleVariant):CalculatedMember;dispid 181;
		function AddCalculatedMember(const Name:WideString;Formula:OleVariant;SolveOrder:OleVariant;Type_:OleVariant;
			DisplayFolder:OleVariant;MeasureGroup:OleVariant;ParentHierarchy:OleVariant;ParentMember:OleVariant;
			NumberFormat:OleVariant):CalculatedMember;dispid 3091;
	end;

	// *********************************************************************//
	// DispIntf:  CalculatedMember
	// Flags:     (4096) Dispatchable
	// GUID:      {00024455-0000-0000-C000-000000000046}
	// *********************************************************************//
	CalculatedMember=dispinterface
		['{00024455-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property Formula:WideString readonly dispid 261;
		property SourceName:WideString readonly dispid 721;
		property SolveOrder:Integer readonly dispid 2187;
		property IsValid:WordBool readonly dispid 2188;
		property _Default:WideString readonly dispid 0;
		procedure Delete;dispid 117;
		property Type_:XlCalculatedMemberType readonly dispid 108;
		property Dynamic:WordBool readonly dispid 2926;
		property DisplayFolder:WideString readonly dispid 2927;
		property HierarchizeDistinct:WordBool dispid 2925;
		property FlattenHierarchies:WordBool dispid 2924;
		property MeasureGroup:WideString readonly dispid 3092;
		property ParentHierarchy:WideString readonly dispid 3093;
		property ParentMember:WideString readonly dispid 3094;
		property NumberFormat:XlCalcMemNumberFormatType readonly dispid 193;
	end;

	// *********************************************************************//
	// DispIntf:  Watches
	// Flags:     (4096) Dispatchable
	// GUID:      {00024456-0000-0000-C000-000000000046}
	// *********************************************************************//
	Watches=dispinterface
		['{00024456-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Source:OleVariant):Watch;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:Watch readonly dispid 0;default;
		property Item[Index:OleVariant]:Watch readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  Watch
	// Flags:     (4096) Dispatchable
	// GUID:      {00024457-0000-0000-C000-000000000046}
	// *********************************************************************//
	Watch=dispinterface
		['{00024457-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		property Source:OleVariant readonly dispid 222;
	end;

	// *********************************************************************//
	// DispIntf:  PivotCell
	// Flags:     (4096) Dispatchable
	// GUID:      {00024458-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotCell=dispinterface
		['{00024458-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property PivotCellType:XlPivotCellType readonly dispid 2189;
		property PivotTable:PivotTable readonly dispid 716;
		property DataField:PivotField readonly dispid 2091;
		property PivotField:PivotField readonly dispid 731;
		property PivotItem:PivotItem readonly dispid 740;
		property RowItems:PivotItemList readonly dispid 2190;
		property ColumnItems:PivotItemList readonly dispid 2191;
		property Range:ExcelRange readonly dispid 197;
		property Dummy18:WideString readonly dispid 2295;
		property CustomSubtotalFunction:XlConsolidationFunction readonly dispid 2193;
		property PivotRowLine:PivotLine readonly dispid 2673;
		property PivotColumnLine:PivotLine readonly dispid 2674;
		procedure AllocateChange;dispid 2928;
		procedure DiscardChange;dispid 2929;
		property DataSourceValue:OleVariant readonly dispid 2930;
		property CellChanged:XlCellChangedState readonly dispid 2931;
		property MDX:WideString readonly dispid 2123;
		property ServerActions:Actions readonly dispid 2491;
	end;

	// *********************************************************************//
	// DispIntf:  Graphic
	// Flags:     (4096) Dispatchable
	// GUID:      {00024459-0000-0000-C000-000000000046}
	// *********************************************************************//
	Graphic=dispinterface
		['{00024459-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Brightness:Single dispid 2194;
		property ColorType:MsoPictureColorType dispid 2195;
		property Contrast:Single dispid 2196;
		property CropBottom:Single dispid 2197;
		property CropLeft:Single dispid 2198;
		property CropRight:Single dispid 2199;
		property CropTop:Single dispid 2200;
		property Filename:WideString dispid 1415;
		property Height:Single dispid 123;
		property LockAspectRatio:MsoTriState dispid 1700;
		property Width:Single dispid 122;
	end;

	// *********************************************************************//
	// DispIntf:  AutoRecover
	// Flags:     (4096) Dispatchable
	// GUID:      {0002445A-0000-0000-C000-000000000046}
	// *********************************************************************//
	AutoRecover=dispinterface
		['{0002445A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Enabled:WordBool dispid 600;
		property Time:Integer dispid 394;
		property Path:WideString dispid 291;
	end;

	// *********************************************************************//
	// DispIntf:  ErrorCheckingOptions
	// Flags:     (4096) Dispatchable
	// GUID:      {0002445B-0000-0000-C000-000000000046}
	// *********************************************************************//
	ErrorCheckingOptions=dispinterface
		['{0002445B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BackgroundChecking:WordBool dispid 2201;
		property IndicatorColorIndex:XlColorIndex dispid 2202;
		property EvaluateToError:WordBool dispid 2203;
		property TextDate:WordBool dispid 2204;
		property NumberAsText:WordBool dispid 2205;
		property InconsistentFormula:WordBool dispid 2206;
		property OmittedCells:WordBool dispid 2207;
		property UnlockedFormulaCells:WordBool dispid 2208;
		property EmptyCellReferences:WordBool dispid 2209;
		property ListDataValidation:WordBool dispid 2296;
		property InconsistentTableFormula:WordBool dispid 2675;
		property MisleadingNumberFormats:WordBool dispid 3298;
	end;

	// *********************************************************************//
	// DispIntf:  Errors
	// Flags:     (4096) Dispatchable
	// GUID:      {0002445C-0000-0000-C000-000000000046}
	// *********************************************************************//
	Errors=dispinterface
		['{0002445C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Item[Index:OleVariant]:Error readonly dispid 170;
		property _Default[Index:OleVariant]:Error readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  Error
	// Flags:     (4096) Dispatchable
	// GUID:      {0002445D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Error=dispinterface
		['{0002445D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Value:WordBool readonly dispid 6;
		property Ignore:WordBool dispid 2210;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTagAction
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445E-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTagAction=dispinterface
		['{0002445E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		procedure Execute;dispid 2211;
		property _Default:WideString readonly dispid 0;
		property Type_:XlSmartTagControlType readonly dispid 108;
		property PresentInPane:WordBool readonly dispid 2297;
		property ExpandHelp:WordBool dispid 2298;
		property CheckboxState:WordBool dispid 2299;
		property TextboxText:WideString dispid 2300;
		property ListSelection:Integer dispid 2301;
		property RadioGroupSelection:Integer dispid 2302;
		property ActiveXControl:IDispatch readonly dispid 2303;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTagActions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002445F-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTagActions=dispinterface
		['{0002445F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:SmartTagAction readonly dispid 0;default;
		property Item[Index:OleVariant]:SmartTagAction readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTag
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024460-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTag=dispinterface
		['{00024460-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property DownloadURL:WideString readonly dispid 2212;
		property Name:WideString readonly dispid 110;
		property _Default:WideString readonly dispid 0;
		property XML:WideString readonly dispid 2213;
		property Range:ExcelRange readonly dispid 197;
		procedure Delete;dispid 117;
		property SmartTagActions:SmartTagActions readonly dispid 2214;
		property Properties:CustomProperties readonly dispid 2135;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTags
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024461-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTags=dispinterface
		['{00024461-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const SmartTagType:WideString):SmartTag;dispid 181;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:SmartTag readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTagRecognizer
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024462-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTagRecognizer=dispinterface
		['{00024462-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Enabled:WordBool dispid 600;
		property progID:WideString readonly dispid 2216;
		property _Default:WideString readonly dispid 0;
		property FullName:WideString readonly dispid 289;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTagRecognizers
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024463-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTagRecognizers=dispinterface
		['{00024463-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:SmartTagRecognizer readonly dispid 170;
		property _Default[Index:OleVariant]:SmartTagRecognizer readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Recognize:WordBool dispid 2217;
	end;

	// *********************************************************************//
	// DispIntf:  SmartTagOptions
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {00024464-0000-0000-C000-000000000046}
	// *********************************************************************//
	SmartTagOptions=dispinterface
		['{00024464-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property DisplaySmartTags:XlSmartTagDisplayMode dispid 2218;
		property EmbedSmartTags:WordBool dispid 2219;
	end;

	// *********************************************************************//
	// DispIntf:  SpellingOptions
	// Flags:     (4096) Dispatchable
	// GUID:      {00024465-0000-0000-C000-000000000046}
	// *********************************************************************//
	SpellingOptions=dispinterface
		['{00024465-0000-0000-C000-000000000046}']
		property DictLang:Integer dispid 2220;
		property UserDict:WideString dispid 2221;
		property IgnoreCaps:WordBool dispid 2222;
		property SuggestMainOnly:WordBool dispid 2223;
		property IgnoreMixedDigits:WordBool dispid 2224;
		property IgnoreFileNames:WordBool dispid 2225;
		property GermanPostReform:WordBool dispid 2226;
		property KoreanCombineAux:WordBool dispid 2227;
		property KoreanUseAutoChangeList:WordBool dispid 2228;
		property KoreanProcessCompound:WordBool dispid 2229;
		property HebrewModes:XlHebrewModes dispid 2230;
		property ArabicModes:XlArabicModes dispid 2231;
		property ArabicStrictAlefHamza:WordBool dispid 2932;
		property ArabicStrictFinalYaa:WordBool dispid 2933;
		property ArabicStrictTaaMarboota:WordBool dispid 2934;
		property RussianStrictE:WordBool dispid 2935;
		property SpanishModes:XlSpanishModes dispid 2936;
		property PortugalReform:XlPortugueseReform dispid 2937;
		property BrazilReform:XlPortugueseReform dispid 2938;
	end;

	// *********************************************************************//
	// DispIntf:  Speech
	// Flags:     (4096) Dispatchable
	// GUID:      {00024466-0000-0000-C000-000000000046}
	// *********************************************************************//
	Speech=dispinterface
		['{00024466-0000-0000-C000-000000000046}']
		procedure Speak(const Text:WideString;SpeakAsync:OleVariant;SpeakXML:OleVariant;Purge:OleVariant);dispid 2017;
		property Direction:XlSpeakDirection dispid 168;
		property SpeakCellOnEnter:WordBool dispid 2235;
	end;

	// *********************************************************************//
	// DispIntf:  Protection
	// Flags:     (4096) Dispatchable
	// GUID:      {00024467-0000-0000-C000-000000000046}
	// *********************************************************************//
	Protection=dispinterface
		['{00024467-0000-0000-C000-000000000046}']
		property AllowFormattingCells:WordBool readonly dispid 2032;
		property AllowFormattingColumns:WordBool readonly dispid 2033;
		property AllowFormattingRows:WordBool readonly dispid 2034;
		property AllowInsertingColumns:WordBool readonly dispid 2035;
		property AllowInsertingRows:WordBool readonly dispid 2036;
		property AllowInsertingHyperlinks:WordBool readonly dispid 2037;
		property AllowDeletingColumns:WordBool readonly dispid 2038;
		property AllowDeletingRows:WordBool readonly dispid 2039;
		property AllowSorting:WordBool readonly dispid 2040;
		property AllowFiltering:WordBool readonly dispid 2041;
		property AllowUsingPivotTables:WordBool readonly dispid 2042;
		property AllowEditRanges:AllowEditRanges readonly dispid 2236;
	end;

	// *********************************************************************//
	// DispIntf:  PivotItemList
	// Flags:     (4096) Dispatchable
	// GUID:      {00024468-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotItemList=dispinterface
		['{00024468-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):PivotItem;dispid 170;
		property _Default[Field:OleVariant]:PivotItem readonly dispid 0;default;
		function _NewEnum:IUnknown;dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  Tab
	// Flags:     (4096) Dispatchable
	// GUID:      {00024469-0000-0000-C000-000000000046}
	// *********************************************************************//
	Tab=dispinterface
		['{00024469-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Color:OleVariant dispid 99;
		property ColorIndex:XlColorIndex dispid 97;
		property ThemeColor:XlThemeColor dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
	end;

	// *********************************************************************//
	// DispIntf:  AllowEditRanges
	// Flags:     (4096) Dispatchable
	// GUID:      {0002446A-0000-0000-C000-000000000046}
	// *********************************************************************//
	AllowEditRanges=dispinterface
		['{0002446A-0000-0000-C000-000000000046}']
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:AllowEditRange readonly dispid 170;
		function Add(const Title:WideString;const Range:ExcelRange;Password:OleVariant):AllowEditRange;dispid 181;
		property _Default[Index:OleVariant]:AllowEditRange readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  AllowEditRange
	// Flags:     (4096) Dispatchable
	// GUID:      {0002446B-0000-0000-C000-000000000046}
	// *********************************************************************//
	AllowEditRange=dispinterface
		['{0002446B-0000-0000-C000-000000000046}']
		property Title:WideString dispid 199;
		property Range:ExcelRange dispid 197;
		procedure ChangePassword(const Password:WideString);dispid 2237;
		procedure Delete;dispid 117;
		procedure Unprotect(Password:OleVariant);dispid 285;
		property Users:UserAccessList readonly dispid 2238;
	end;

	// *********************************************************************//
	// DispIntf:  UserAccessList
	// Flags:     (4096) Dispatchable
	// GUID:      {0002446C-0000-0000-C000-000000000046}
	// *********************************************************************//
	UserAccessList=dispinterface
		['{0002446C-0000-0000-C000-000000000046}']
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:UserAccess readonly dispid 170;
		function Add(const Name:WideString;AllowEdit:WordBool):UserAccess;dispid 181;
		procedure DeleteAll;dispid 2239;
		property _Default[Index:OleVariant]:UserAccess readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  UserAccess
	// Flags:     (4096) Dispatchable
	// GUID:      {0002446D-0000-0000-C000-000000000046}
	// *********************************************************************//
	UserAccess=dispinterface
		['{0002446D-0000-0000-C000-000000000046}']
		property Name:WideString readonly dispid 110;
		property AllowEdit:WordBool dispid 2020;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  RTD
	// Flags:     (4096) Dispatchable
	// GUID:      {0002446E-0000-0000-C000-000000000046}
	// *********************************************************************//
	RTD=dispinterface
		['{0002446E-0000-0000-C000-000000000046}']
		property ThrottleInterval:Integer dispid 2240;
		procedure RefreshData;dispid 2241;
		procedure RestartServers;dispid 2242;
	end;

	// *********************************************************************//
	// DispIntf:  Diagram
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002446F-0000-0000-C000-000000000046}
	// *********************************************************************//
	Diagram=dispinterface
		['{0002446F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Nodes:DiagramNodes readonly dispid 1701;
		property Type_:MsoDiagramType readonly dispid 108;
		property AutoLayout:MsoTriState dispid 2243;
		property Reverse:MsoTriState dispid 2244;
		property AutoFormat:MsoTriState dispid 114;
		procedure Convert(Type_:MsoDiagramType);dispid 1046;
		procedure FitText;dispid 2304;
	end;

	// *********************************************************************//
	// DispIntf:  ListObjects
	// Flags:     (4096) Dispatchable
	// GUID:      {00024470-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListObjects=dispinterface
		['{00024470-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function _Add(SourceType:XlListObjectSourceType;Source:OleVariant;LinkSource:OleVariant;
			XlListObjectHasHeaders:XlYesNoGuess;Destination:OleVariant):ListObject;dispid 2085;
		property _Default[Index:OleVariant]:ListObject readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ListObject readonly dispid 170;
		property Count:Integer readonly dispid 118;
		function Add(SourceType:XlListObjectSourceType;Source:OleVariant;LinkSource:OleVariant;
			XlListObjectHasHeaders:XlYesNoGuess;Destination:OleVariant;TableStyleName:OleVariant):ListObject;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  ListObject
	// Flags:     (4096) Dispatchable
	// GUID:      {00024471-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListObject=dispinterface
		['{00024471-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		function Publish(Target:OleVariant;LinkSource:WordBool):WideString;dispid 1895;
		procedure Refresh;dispid 1417;
		procedure Unlink;dispid 2308;
		procedure Unlist;dispid 2309;
		procedure UpdateChanges(iConflictType:XlListConflict);dispid 2310;
		procedure Resize(const Range:ExcelRange);dispid 256;
		property _Default:WideString readonly dispid 0;
		property Active:WordBool readonly dispid 2312;
		property DataBodyRange:ExcelRange readonly dispid 705;
		property DisplayRightToLeft:WordBool readonly dispid 1774;
		property HeaderRowRange:ExcelRange readonly dispid 2313;
		property InsertRowRange:ExcelRange readonly dispid 2314;
		property ListColumns:ListColumns readonly dispid 2315;
		property ListRows:ListRows readonly dispid 2316;
		property Name:WideString dispid 110;
		property QueryTable:ExcelQueryTable readonly dispid 1386;
		property Range:ExcelRange readonly dispid 197;
		property ShowAutoFilter:WordBool dispid 2317;
		property ShowTotals:WordBool dispid 2318;
		property SourceType:XlListObjectSourceType readonly dispid 685;
		property TotalsRowRange:ExcelRange readonly dispid 2319;
		property SharePointURL:WideString readonly dispid 2320;
		property XmlMap:XmlMap readonly dispid 2253;
		property DisplayName:WideString dispid 2677;
		property ShowHeaders:WordBool dispid 2678;
		property _AutoFilter:AutoFilter readonly dispid 793;
		property TableStyle:OleVariant dispid 1504;
		property ShowTableStyleFirstColumn:WordBool dispid 2679;
		property ShowTableStyleLastColumn:WordBool dispid 2563;
		property ShowTableStyleRowStripes:WordBool dispid 2564;
		property ShowTableStyleColumnStripes:WordBool dispid 2565;
		property _Sort:Sort readonly dispid 880;
		property Comment:WideString dispid 910;
		procedure ExportToVisio;dispid 2680;
		property AlternativeText:WideString dispid 1891;
		property Summary:WideString dispid 273;
		property TableObject:TableObject readonly dispid 3095;
		property Slicers:Slicers readonly dispid 2881;
		property ShowAutoFilterDropDown:WordBool dispid 3096;
		property AutoFilter:AutoFilter readonly dispid 3289;
		property Sort:Sort readonly dispid 3288;
	end;

	// *********************************************************************//
	// DispIntf:  ListColumns
	// Flags:     (4096) Dispatchable
	// GUID:      {00024472-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListColumns=dispinterface
		['{00024472-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Position:OleVariant):ListColumn;dispid 181;
		property _Default[Index:OleVariant]:ListColumn readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ListColumn readonly dispid 170;
		property Count:Integer readonly dispid 118;
	end;

	// *********************************************************************//
	// DispIntf:  ListColumn
	// Flags:     (4096) Dispatchable
	// GUID:      {00024473-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListColumn=dispinterface
		['{00024473-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		property _Default:WideString readonly dispid 0;
		property ListDataFormat:ListDataFormat readonly dispid 2321;
		property Index:Integer readonly dispid 486;
		property Name:WideString dispid 110;
		property Range:ExcelRange readonly dispid 197;
		property TotalsCalculation:XlTotalsCalculation dispid 2322;
		property XPath:XPath readonly dispid 2258;
		property SharePointFormula:WideString readonly dispid 2323;
		property DataBodyRange:ExcelRange readonly dispid 705;
		property Total:ExcelRange readonly dispid 2681;
	end;

	// *********************************************************************//
	// DispIntf:  ListRows
	// Flags:     (4096) Dispatchable
	// GUID:      {00024474-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListRows=dispinterface
		['{00024474-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function _Add(Position:OleVariant):ListRow;dispid 2085;
		property _Default[Index:OleVariant]:ListRow readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ListRow readonly dispid 170;
		property Count:Integer readonly dispid 118;
		function Add(Position:OleVariant;AlwaysInsert:OleVariant):ListRow;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  ListRow
	// Flags:     (4096) Dispatchable
	// GUID:      {00024475-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListRow=dispinterface
		['{00024475-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		property Index:Integer readonly dispid 486;
		property InvalidData:WordBool readonly dispid 2324;
		property Range:ExcelRange readonly dispid 197;
	end;

	// *********************************************************************//
	// DispIntf:  XmlNamespace
	// Flags:     (4096) Dispatchable
	// GUID:      {00024476-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlNamespace=dispinterface
		['{00024476-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		property Uri:WideString readonly dispid 2325;
		property Prefix:WideString readonly dispid 2326;
	end;

	// *********************************************************************//
	// DispIntf:  XmlNamespaces
	// Flags:     (4096) Dispatchable
	// GUID:      {00024477-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlNamespaces=dispinterface
		['{00024477-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:XmlNamespace readonly dispid 0;default;
		property Item[Index:OleVariant]:XmlNamespace readonly dispid 170;
		property Count:Integer readonly dispid 118;
		property Value:WideString readonly dispid 6;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure InstallManifest(const Path:WideString;InstallForAllUsers:OleVariant);dispid 2327;
	end;

	// *********************************************************************//
	// DispIntf:  XmlDataBinding
	// Flags:     (4096) Dispatchable
	// GUID:      {00024478-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlDataBinding=dispinterface
		['{00024478-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		function Refresh:XlXmlImportResult;dispid 1417;
		procedure LoadSettings(const Url:WideString);dispid 2329;
		procedure ClearSettings;dispid 2330;
		property SourceUrl:WideString readonly dispid 2331;
	end;

	// *********************************************************************//
	// DispIntf:  XmlSchema
	// Flags:     (4096) Dispatchable
	// GUID:      {00024479-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlSchema=dispinterface
		['{00024479-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Namespace:XmlNamespace readonly dispid 2332;
		property XML:WideString readonly dispid 2333;
		property Name:WideString readonly dispid 110;
	end;

	// *********************************************************************//
	// DispIntf:  XmlSchemas
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447A-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlSchemas=dispinterface
		['{0002447A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:XmlSchema readonly dispid 0;default;
		property Item[Index:OleVariant]:XmlSchema readonly dispid 170;
		property Count:Integer readonly dispid 118;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  XmlMap
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447B-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlMap=dispinterface
		['{0002447B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		property Name:WideString dispid 110;
		property IsExportable:WordBool readonly dispid 2334;
		property ShowImportExportValidationErrors:WordBool dispid 2335;
		property SaveDataSourceDefinition:WordBool dispid 2336;
		property AdjustColumnWidth:WordBool dispid 1868;
		property PreserveColumnFilter:WordBool dispid 2337;
		property PreserveNumberFormatting:WordBool dispid 2338;
		property AppendOnImport:WordBool dispid 2339;
		property RootElementName:WideString readonly dispid 2340;
		property RootElementNamespace:XmlNamespace readonly dispid 2341;
		property Schemas:XmlSchemas readonly dispid 2342;
		property DataBinding:XmlDataBinding readonly dispid 2343;
		procedure Delete;dispid 117;
		function Import(const Url:WideString;Overwrite:OleVariant):XlXmlImportResult;dispid 917;
		function ImportXml(const XmlData:WideString;Overwrite:OleVariant):XlXmlImportResult;dispid 2344;
		function Export(const Url:WideString;Overwrite:OleVariant):XlXmlExportResult;dispid 1414;
		function ExportXml(out Data:WideString):XlXmlExportResult;dispid 2346;
		property WorkbookConnection:WorkbookConnection readonly dispid 2544;
	end;

	// *********************************************************************//
	// DispIntf:  XmlMaps
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447C-0000-0000-C000-000000000046}
	// *********************************************************************//
	XmlMaps=dispinterface
		['{0002447C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Schema:WideString;RootElementName:OleVariant):XmlMap;dispid 181;
		property _Default[Index:OleVariant]:XmlMap readonly dispid 0;default;
		property Item[Index:OleVariant]:XmlMap readonly dispid 170;
		property Count:Integer readonly dispid 118;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ListDataFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447D-0000-0000-C000-000000000046}
	// *********************************************************************//
	ListDataFormat=dispinterface
		['{0002447D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:XlListDataType readonly dispid 0;
		property Choices:OleVariant readonly dispid 2348;
		property DecimalPlaces:Integer readonly dispid 2349;
		property DefaultValue:OleVariant readonly dispid 2350;
		property IsPercent:WordBool readonly dispid 2351;
		property lcid:Integer readonly dispid 2352;
		property MaxCharacters:Integer readonly dispid 2353;
		property MaxNumber:OleVariant readonly dispid 2354;
		property MinNumber:OleVariant readonly dispid 2355;
		property Required:WordBool readonly dispid 2356;
		property Type_:XlListDataType readonly dispid 108;
		property readonly:WordBool readonly dispid 296;
		property AllowFillIn:WordBool readonly dispid 2357;
	end;

	// *********************************************************************//
	// DispIntf:  XPath
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447E-0000-0000-C000-000000000046}
	// *********************************************************************//
	XPath=dispinterface
		['{0002447E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		property Value:WideString readonly dispid 6;
		property Map:XmlMap readonly dispid 2262;
		procedure SetValue(const Map:XmlMap;const XPath:WideString;SelectionNamespace:OleVariant;Repeating:OleVariant);
			dispid 2358;
		procedure Clear;dispid 111;
		property Repeating:WordBool readonly dispid 2360;
	end;

	// *********************************************************************//
	// DispIntf:  PivotLineCells
	// Flags:     (4096) Dispatchable
	// GUID:      {0002447F-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotLineCells=dispinterface
		['{0002447F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:PivotCell readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:PivotCell readonly dispid 170;
		property Count:Integer readonly dispid 118;
		property Full:WordBool readonly dispid 3097;
	end;

	// *********************************************************************//
	// DispIntf:  PivotLine
	// Flags:     (4096) Dispatchable
	// GUID:      {00024480-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotLine=dispinterface
		['{00024480-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property LineType:XlPivotLineType readonly dispid 2683;
		property Position:Integer readonly dispid 133;
		property PivotLineCells:PivotLineCells readonly dispid 2684;
		property PivotLineCellsFull:PivotLineCells readonly dispid 3098;
	end;

	// *********************************************************************//
	// DispIntf:  PivotLines
	// Flags:     (4096) Dispatchable
	// GUID:      {00024481-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotLines=dispinterface
		['{00024481-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:PivotLine readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:PivotLine readonly dispid 170;
		property Count:Integer readonly dispid 118;
	end;

	// *********************************************************************//
	// DispIntf:  PivotAxis
	// Flags:     (4096) Dispatchable
	// GUID:      {00024482-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotAxis=dispinterface
		['{00024482-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property PivotLines:PivotLines readonly dispid 2685;
	end;

	// *********************************************************************//
	// DispIntf:  PivotFilter
	// Flags:     (4096) Dispatchable
	// GUID:      {00024483-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotFilter=dispinterface
		['{00024483-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Order:Integer dispid 192;
		property FilterType:XlPivotFilterType readonly dispid 2686;
		property Name:WideString readonly dispid 110;
		property Description:WideString readonly dispid 218;
		procedure Delete;dispid 117;
		property Active:WordBool readonly dispid 2312;
		property PivotField:PivotField readonly dispid 731;
		property DataField:PivotField readonly dispid 2091;
		property DataCubeField:CubeField readonly dispid 2687;
		property Value1:OleVariant readonly dispid 2688;
		property Value2:OleVariant readonly dispid 1388;
		property MemberPropertyField:PivotField readonly dispid 2689;
		property IsMemberPropertyFilter:WordBool readonly dispid 2690;
		property WholeDayFilter:WordBool dispid 3099;
	end;

	// *********************************************************************//
	// DispIntf:  PivotFilters
	// Flags:     (4096) Dispatchable
	// GUID:      {00024484-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotFilters=dispinterface
		['{00024484-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:PivotFilter readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:PivotFilter readonly dispid 170;
		property Count:Integer readonly dispid 118;
		function Add(Type_:XlPivotFilterType;DataField:OleVariant;Value1:OleVariant;Value2:OleVariant;Order:OleVariant;
			Name:OleVariant;Description:OleVariant;MemberPropertyField:OleVariant):PivotFilter;dispid 181;
		function Add2(Type_:XlPivotFilterType;DataField:OleVariant;Value1:OleVariant;Value2:OleVariant;Order:OleVariant;
			Name:OleVariant;Description:OleVariant;MemberPropertyField:OleVariant;WholeDayFilter:OleVariant):PivotFilter;
			dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  WorkbookConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {00024485-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorkbookConnection=dispinterface
		['{00024485-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property Description:WideString dispid 218;
		property _Default:WideString dispid 0;
		property Type_:XlConnectionType readonly dispid 108;
		property OLEDBConnection:OLEDBConnection readonly dispid 2697;
		property ODBCConnection:ODBCConnection readonly dispid 2698;
		property Ranges:Ranges readonly dispid 2699;
		procedure Delete;dispid 117;
		procedure Refresh;dispid 1417;
		property ModelConnection:ModelConnection readonly dispid 3100;
		property WorksheetDataConnection:WorksheetDataConnection readonly dispid 3101;
		property RefreshWithRefreshAll:WordBool dispid 3102;
		property TextConnection:TextConnection readonly dispid 3103;
		property DataFeedConnection:DataFeedConnection readonly dispid 3104;
		property InModel:WordBool readonly dispid 3105;
		property ModelTables:ModelTables readonly dispid 3106;
	end;

	// *********************************************************************//
	// DispIntf:  Connections
	// Flags:     (4096) Dispatchable
	// GUID:      {00024486-0000-0000-C000-000000000046}
	// *********************************************************************//
	Connections=dispinterface
		['{00024486-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function _AddFromFile(const Filename:WideString):WorkbookConnection;dispid 2700;
		function Add(const Name:WideString;const Description:WideString;ConnectionString:OleVariant;CommandText:OleVariant;
			lCmdtype:OleVariant):WorkbookConnection;dispid 181;
		function Item(Index:OleVariant):WorkbookConnection;dispid 170;
		property _Default[Index:OleVariant]:WorkbookConnection readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add2(const Name:WideString;const Description:WideString;ConnectionString:OleVariant;CommandText:OleVariant;
			lCmdtype:OleVariant;CreateModelConnection:OleVariant;ImportRelationships:OleVariant):WorkbookConnection;
			dispid 3054;
		function AddFromFile(const Filename:WideString;CreateModelConnection:OleVariant;ImportRelationships:OleVariant)
			:WorkbookConnection;dispid 3107;
	end;

	// *********************************************************************//
	// DispIntf:  WorksheetView
	// Flags:     (4096) Dispatchable
	// GUID:      {00024487-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorksheetView=dispinterface
		['{00024487-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Sheet:IDispatch readonly dispid 751;
		property DisplayGridlines:WordBool dispid 645;
		property DisplayFormulas:WordBool dispid 644;
		property DisplayHeadings:WordBool dispid 646;
		property DisplayOutline:WordBool dispid 647;
		property DisplayZeros:WordBool dispid 649;
	end;

	// *********************************************************************//
	// DispIntf:  ChartView
	// Flags:     (4096) Dispatchable
	// GUID:      {00024488-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartView=dispinterface
		['{00024488-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Sheet:IDispatch readonly dispid 751;
	end;

	// *********************************************************************//
	// DispIntf:  ModuleView
	// Flags:     (4096) Dispatchable
	// GUID:      {00024489-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModuleView=dispinterface
		['{00024489-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Sheet:IDispatch readonly dispid 751;
	end;

	// *********************************************************************//
	// DispIntf:  DialogSheetView
	// Flags:     (4096) Dispatchable
	// GUID:      {0002448A-0000-0000-C000-000000000046}
	// *********************************************************************//
	DialogSheetView=dispinterface
		['{0002448A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Sheet:IDispatch readonly dispid 751;
	end;

	// *********************************************************************//
	// DispIntf:  SheetViews
	// Flags:     (4096) Dispatchable
	// GUID:      {0002448C-0000-0000-C000-000000000046}
	// *********************************************************************//
	SheetViews=dispinterface
		['{0002448C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function _NewEnum:IUnknown;dispid-4;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  OLEDBConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {0002448D-0000-0000-C000-000000000046}
	// *********************************************************************//
	OLEDBConnection=dispinterface
		['{0002448D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ADOConnection:IDispatch readonly dispid 2074;
		property BackgroundQuery:WordBool dispid 1427;
		procedure CancelRefresh;dispid 1589;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property Connection:OleVariant dispid 1432;
		property EnableRefresh:WordBool dispid 1477;
		property LocalConnection:OleVariant dispid 1835;
		property MaintainConnection:WordBool dispid 1832;
		procedure MakeConnection;dispid 2076;
		procedure Refresh;dispid 1417;
		property RefreshDate:TDateTime readonly dispid 696;
		property Refreshing:WordBool readonly dispid 1587;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property RefreshPeriod:Integer dispid 1833;
		property RobustConnect:XlRobustConnect dispid 2081;
		procedure SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant);dispid 2082;
		property SavePassword:WordBool dispid 1481;
		property SourceConnectionFile:WideString dispid 2079;
		property SourceDataFile:WideString dispid 2080;
		property OLAP:WordBool readonly dispid 2077;
		property UseLocalConnection:WordBool dispid 1837;
		property MaxDrillthroughRecords:Integer dispid 2703;
		property IsConnected:WordBool readonly dispid 2075;
		property ServerCredentialsMethod:XlCredentialsMethod dispid 2704;
		property ServerSSOApplicationID:WideString dispid 2705;
		property AlwaysUseConnectionFile:WordBool dispid 2706;
		property ServerFillColor:WordBool dispid 2707;
		property ServerFontStyle:WordBool dispid 2708;
		property ServerNumberFormat:WordBool dispid 2709;
		property ServerTextColor:WordBool dispid 2710;
		property RetrieveInOfficeUILang:WordBool dispid 2711;
		procedure Reconnect;dispid 2939;
		property CalculatedMembers:CalculatedMembers readonly dispid 2125;
		property LocaleID:Integer dispid 2940;
	end;

	// *********************************************************************//
	// DispIntf:  ODBCConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {0002448E-0000-0000-C000-000000000046}
	// *********************************************************************//
	ODBCConnection=dispinterface
		['{0002448E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property BackgroundQuery:WordBool dispid 1427;
		procedure CancelRefresh;dispid 1589;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property Connection:OleVariant dispid 1432;
		property EnableRefresh:WordBool dispid 1477;
		procedure Refresh;dispid 1417;
		property RefreshDate:TDateTime readonly dispid 696;
		property Refreshing:WordBool readonly dispid 1587;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property RefreshPeriod:Integer dispid 1833;
		property RobustConnect:XlRobustConnect dispid 2081;
		procedure SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant);dispid 2082;
		property SavePassword:WordBool dispid 1481;
		property SourceConnectionFile:WideString dispid 2079;
		property SourceData:OleVariant dispid 686;
		property SourceDataFile:WideString dispid 2080;
		property ServerCredentialsMethod:XlCredentialsMethod dispid 2704;
		property ServerSSOApplicationID:WideString dispid 2705;
		property AlwaysUseConnectionFile:WordBool dispid 2706;
	end;

	// *********************************************************************//
	// DispIntf:  Action
	// Flags:     (4096) Dispatchable
	// GUID:      {0002448F-0000-0000-C000-000000000046}
	// *********************************************************************//
	Action=dispinterface
		['{0002448F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property Caption:WideString readonly dispid 139;
		property Type_:XlActionType readonly dispid 108;
		property Coordinate:WideString readonly dispid 2712;
		property Content:WideString readonly dispid 2713;
		procedure Execute;dispid 2211;
	end;

	// *********************************************************************//
	// DispIntf:  Actions
	// Flags:     (4096) Dispatchable
	// GUID:      {00024490-0000-0000-C000-000000000046}
	// *********************************************************************//
	Actions=dispinterface
		['{00024490-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:Action readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:Action readonly dispid 170;
		property Count:Integer readonly dispid 118;
	end;

	// *********************************************************************//
	// DispIntf:  FormatColor
	// Flags:     (4096) Dispatchable
	// GUID:      {00024491-0000-0000-C000-000000000046}
	// *********************************************************************//
	FormatColor=dispinterface
		['{00024491-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Color:OleVariant dispid 99;
		property ColorIndex:XlColorIndex dispid 97;
		property ThemeColor:OleVariant dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
	end;

	// *********************************************************************//
	// DispIntf:  ConditionValue
	// Flags:     (4096) Dispatchable
	// GUID:      {00024492-0000-0000-C000-000000000046}
	// *********************************************************************//
	ConditionValue=dispinterface
		['{00024492-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Modify(newtype:XlConditionValueTypes;newvalue:OleVariant);dispid 1581;
		property Type_:XlConditionValueTypes readonly dispid 108;
		property Value:OleVariant readonly dispid 6;
	end;

	// *********************************************************************//
	// DispIntf:  ColorScale
	// Flags:     (4096) Dispatchable
	// GUID:      {00024493-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorScale=dispinterface
		['{00024493-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool readonly dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property Formula:WideString dispid 261;
		property Type_:Integer readonly dispid 108;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
		property ColorScaleCriteria:ColorScaleCriteria readonly dispid 2716;
	end;

	// *********************************************************************//
	// DispIntf:  ColorScaleCriteria
	// Flags:     (4096) Dispatchable
	// GUID:      {00024494-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorScaleCriteria=dispinterface
		['{00024494-0000-0000-C000-000000000046}']
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:ColorScaleCriterion readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ColorScaleCriterion readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  ColorScaleCriterion
	// Flags:     (4096) Dispatchable
	// GUID:      {00024495-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorScaleCriterion=dispinterface
		['{00024495-0000-0000-C000-000000000046}']
		property Index:Integer readonly dispid 486;
		property Type_:XlConditionValueTypes dispid 108;
		property Value:OleVariant dispid 6;
		property FormatColor:FormatColor readonly dispid 2717;
	end;

	// *********************************************************************//
	// DispIntf:  Databar
	// Flags:     (4096) Dispatchable
	// GUID:      {00024496-0000-0000-C000-000000000046}
	// *********************************************************************//
	Databar=dispinterface
		['{00024496-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool readonly dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property MinPoint:ConditionValue readonly dispid 2718;
		property MaxPoint:ConditionValue readonly dispid 2719;
		property PercentMin:Integer dispid 2720;
		property PercentMax:Integer dispid 2721;
		property BarColor:IDispatch readonly dispid 2722;
		property ShowValue:WordBool dispid 2024;
		property Formula:WideString dispid 261;
		property Type_:Integer readonly dispid 108;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
		property Direction:Integer dispid 168;
		property BarFillType:XlDataBarFillType dispid 2941;
		property AxisPosition:XlDataBarAxisPosition dispid 2942;
		property AxisColor:IDispatch readonly dispid 2943;
		property BarBorder:DataBarBorder readonly dispid 2944;
		property NegativeBarFormat:NegativeBarFormat readonly dispid 2945;
	end;

	// *********************************************************************//
	// DispIntf:  IconSetCondition
	// Flags:     (4096) Dispatchable
	// GUID:      {00024497-0000-0000-C000-000000000046}
	// *********************************************************************//
	IconSetCondition=dispinterface
		['{00024497-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool readonly dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property Type_:Integer readonly dispid 108;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		property ReverseOrder:WordBool dispid 2723;
		property PercentileValues:WordBool dispid 2724;
		property ShowIconOnly:WordBool dispid 2725;
		property Formula:WideString dispid 261;
		property IconSet:OleVariant dispid 2726;
		property IconCriteria:IconCriteria readonly dispid 2727;
	end;

	// *********************************************************************//
	// DispIntf:  IconCriteria
	// Flags:     (4096) Dispatchable
	// GUID:      {00024498-0000-0000-C000-000000000046}
	// *********************************************************************//
	IconCriteria=dispinterface
		['{00024498-0000-0000-C000-000000000046}']
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:IconCriterion readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:IconCriterion readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  IconCriterion
	// Flags:     (4096) Dispatchable
	// GUID:      {00024499-0000-0000-C000-000000000046}
	// *********************************************************************//
	IconCriterion=dispinterface
		['{00024499-0000-0000-C000-000000000046}']
		property Index:Integer readonly dispid 486;
		property Type_:XlConditionValueTypes dispid 108;
		property Value:OleVariant dispid 6;
		property Operator_:Integer dispid 797;
		property Icon:XlIcon dispid 2747;
	end;

	// *********************************************************************//
	// DispIntf:  Icon
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449A-0000-0000-C000-000000000046}
	// *********************************************************************//
	Icon=dispinterface
		['{0002449A-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IconSet readonly dispid 150;
		property Index:Integer readonly dispid 486;
	end;

	// *********************************************************************//
	// DispIntf:  IconSet
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449B-0000-0000-C000-000000000046}
	// *********************************************************************//
	IconSet=dispinterface
		['{0002449B-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ID:XlIconSet readonly dispid 570;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:Icon readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:Icon readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  IconSets
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449C-0000-0000-C000-000000000046}
	// *********************************************************************//
	IconSets=dispinterface
		['{0002449C-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:IDispatch readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  Top10
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449D-0000-0000-C000-000000000046}
	// *********************************************************************//
	Top10=dispinterface
		['{0002449D-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property TopBottom:XlTopBottom dispid 2728;
		property Rank:Integer dispid 1290;
		property Percent:WordBool dispid 2729;
		property Interior:Interior readonly dispid 129;
		property Borders:Borders readonly dispid 435;
		property Font:Font readonly dispid 146;
		property Type_:Integer readonly dispid 108;
		property NumberFormat:OleVariant dispid 193;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
		property CalcFor:XlCalcFor dispid 2730;
	end;

	// *********************************************************************//
	// DispIntf:  AboveAverage
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449E-0000-0000-C000-000000000046}
	// *********************************************************************//
	AboveAverage=dispinterface
		['{0002449E-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property AboveBelow:XlAboveBelow dispid 2731;
		property Interior:Interior readonly dispid 129;
		property Borders:Borders readonly dispid 435;
		property Font:Font readonly dispid 146;
		property Type_:Integer readonly dispid 108;
		property NumberFormat:OleVariant dispid 193;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
		property CalcFor:XlCalcFor dispid 2730;
		property NumStdDev:Integer dispid 2732;
	end;

	// *********************************************************************//
	// DispIntf:  UniqueValues
	// Flags:     (4096) Dispatchable
	// GUID:      {0002449F-0000-0000-C000-000000000046}
	// *********************************************************************//
	UniqueValues=dispinterface
		['{0002449F-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Priority:Integer dispid 985;
		property StopIfTrue:WordBool dispid 2625;
		property AppliesTo:ExcelRange readonly dispid 2626;
		property DupeUnique:XlDupeUnique dispid 2733;
		property Interior:Interior readonly dispid 129;
		property Borders:Borders readonly dispid 435;
		property Font:Font readonly dispid 146;
		property Type_:Integer readonly dispid 108;
		property NumberFormat:OleVariant dispid 193;
		procedure SetFirstPriority;dispid 2629;
		procedure SetLastPriority;dispid 2630;
		procedure Delete;dispid 117;
		procedure ModifyAppliesToRange(const Range:ExcelRange);dispid 2627;
		property PTCondition:WordBool readonly dispid 2631;
		property ScopeType:XlPivotConditionScope dispid 2615;
	end;

	// *********************************************************************//
	// DispIntf:  Ranges
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A0-0000-0000-C000-000000000046}
	// *********************************************************************//
	Ranges=dispinterface
		['{000244A0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:ExcelRange readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ExcelRange readonly dispid 170;
		property Count:Integer readonly dispid 118;
	end;

	// *********************************************************************//
	// DispIntf:  HeaderFooter
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A1-0000-0000-C000-000000000046}
	// *********************************************************************//
	HeaderFooter=dispinterface
		['{000244A1-0000-0000-C000-000000000046}']
		property Text:WideString dispid 138;
		property Picture:Graphic readonly dispid 479;
	end;

	// *********************************************************************//
	// DispIntf:  Page
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A2-0000-0000-C000-000000000046}
	// *********************************************************************//
	Page=dispinterface
		['{000244A2-0000-0000-C000-000000000046}']
		property LeftHeader:HeaderFooter readonly dispid 1018;
		property CenterHeader:HeaderFooter readonly dispid 1011;
		property RightHeader:HeaderFooter readonly dispid 1026;
		property LeftFooter:HeaderFooter readonly dispid 1017;
		property CenterFooter:HeaderFooter readonly dispid 1010;
		property RightFooter:HeaderFooter readonly dispid 1025;
	end;

	// *********************************************************************//
	// DispIntf:  Pages
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A3-0000-0000-C000-000000000046}
	// *********************************************************************//
	Pages=dispinterface
		['{000244A3-0000-0000-C000-000000000046}']
		property Item[Index:OleVariant]:Page readonly dispid 170;
		property _Default[Index:OleVariant]:Page readonly dispid 0;default;
		property Count:Integer readonly dispid 118;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ServerViewableItems
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A4-0000-0000-C000-000000000046}
	// *********************************************************************//
	ServerViewableItems=dispinterface
		['{000244A4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(Obj:OleVariant):IDispatch;dispid 181;
		procedure Delete(Index:OleVariant);dispid 117;
		procedure DeleteAll;dispid 2239;
		function Item(Index:OleVariant):IDispatch;dispid 170;
		property _Default[Index:OleVariant]:IDispatch readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  TableStyleElement
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A5-0000-0000-C000-000000000046}
	// *********************************************************************//
	TableStyleElement=dispinterface
		['{000244A5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property HasFormat:WordBool readonly dispid 2735;
		property Interior:Interior readonly dispid 129;
		property Borders:Borders readonly dispid 435;
		property Font:Font readonly dispid 146;
		property StripeSize:Integer dispid 2736;
		procedure Clear;dispid 111;
	end;

	// *********************************************************************//
	// DispIntf:  TableStyleElements
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A6-0000-0000-C000-000000000046}
	// *********************************************************************//
	TableStyleElements=dispinterface
		['{000244A6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:XlTableStyleElementType):TableStyleElement;dispid 170;
		property _Default[Index:XlTableStyleElementType]:TableStyleElement readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  TableStyle
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A7-0000-0000-C000-000000000046}
	// *********************************************************************//
	TableStyle=dispinterface
		['{000244A7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default:WideString readonly dispid 0;
		property Name:WideString readonly dispid 110;
		property NameLocal:WideString readonly dispid 937;
		property BuiltIn:WordBool readonly dispid 553;
		property TableStyleElements:TableStyleElements readonly dispid 2737;
		property ShowAsAvailableTableStyle:WordBool dispid 2738;
		property ShowAsAvailablePivotTableStyle:WordBool dispid 2739;
		procedure Delete;dispid 117;
		function Duplicate(NewTableStyleName:OleVariant):TableStyle;dispid 1039;
		property ShowAsAvailableSlicerStyle:WordBool dispid 2946;
		property ShowAsAvailableTimelineStyle:WordBool dispid 3110;
	end;

	// *********************************************************************//
	// DispIntf:  TableStyles
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A8-0000-0000-C000-000000000046}
	// *********************************************************************//
	TableStyles=dispinterface
		['{000244A8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(const TableStyleName:WideString):TableStyle;dispid 181;
		function Item(Index:OleVariant):TableStyle;dispid 170;
		property _Default[Index:OleVariant]:TableStyle readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  SortField
	// Flags:     (4096) Dispatchable
	// GUID:      {000244A9-0000-0000-C000-000000000046}
	// *********************************************************************//
	SortField=dispinterface
		['{000244A9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property SortOn:XlSortOn dispid 2741;
		property SortOnValue:IDispatch readonly dispid 2742;
		property Key:ExcelRange readonly dispid 155;
		property Order:XlSortOrder dispid 192;
		property CustomOrder:OleVariant dispid 2743;
		property DataOption:XlSortDataOption dispid 2744;
		property Priority:Integer dispid 985;
		procedure Delete;dispid 117;
		procedure ModifyKey(const Key:ExcelRange);dispid 2745;
		procedure SetIcon(const Icon:Icon);dispid 2746;
		property SubField:OleVariant dispid 3328;
	end;

	// *********************************************************************//
	// DispIntf:  SortFields
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AA-0000-0000-C000-000000000046}
	// *********************************************************************//
	SortFields=dispinterface
		['{000244AA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Key:ExcelRange;SortOn:OleVariant;Order:OleVariant;CustomOrder:OleVariant;DataOption:OleVariant)
			:SortField;dispid 181;
		property Item[Index:OleVariant]:SortField readonly dispid 170;
		property Count:Integer readonly dispid 118;
		procedure Clear;dispid 111;
		property _Default[Index:OleVariant]:SortField readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add2(const Key:ExcelRange;SortOn:OleVariant;Order:OleVariant;CustomOrder:OleVariant;DataOption:OleVariant;
			SubField:OleVariant):SortField;dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  Sort
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AB-0000-0000-C000-000000000046}
	// *********************************************************************//
	Sort=dispinterface
		['{000244AB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Rng:ExcelRange readonly dispid 2748;
		property Header:XlYesNoGuess dispid 895;
		property MatchCase:WordBool dispid 426;
		property Orientation:XlSortOrientation dispid 134;
		property SortMethod:XlSortMethod dispid 897;
		property SortFields:SortFields readonly dispid 2749;
		procedure SetRange(const Rng:ExcelRange);dispid 2750;
		procedure Apply;dispid 1675;
	end;

	// *********************************************************************//
	// DispIntf:  Research
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AC-0000-0000-C000-000000000046}
	// *********************************************************************//
	Research=dispinterface
		['{000244AC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Query(const ServiceID:WideString;QueryString:OleVariant;QueryLanguage:OleVariant;UseSelection:OleVariant;
			LaunchQuery:OleVariant):OleVariant;dispid 2751;
		function IsResearchService(const ServiceID:WideString):WordBool;dispid 2757;
		function SetLanguagePair(LanguageFrom:Integer;LanguageTo:Integer):OleVariant;dispid 2758;
	end;

	// *********************************************************************//
	// DispIntf:  ColorStop
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AD-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorStop=dispinterface
		['{000244AD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Delete;dispid 117;
		property Color:OleVariant dispid 99;
		property ThemeColor:Integer dispid 2365;
		property TintAndShade:OleVariant dispid 2366;
		property Position:Double dispid 133;
	end;

	// *********************************************************************//
	// DispIntf:  ColorStops
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AE-0000-0000-C000-000000000046}
	// *********************************************************************//
	ColorStops=dispinterface
		['{000244AE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(Position:Double):ColorStop;dispid 181;
		function Item(Index:OleVariant):ColorStop;dispid 170;
		property _Default[Index:OleVariant]:ColorStop readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure Clear;dispid 111;
	end;

	// *********************************************************************//
	// DispIntf:  LinearGradient
	// Flags:     (4096) Dispatchable
	// GUID:      {000244AF-0000-0000-C000-000000000046}
	// *********************************************************************//
	LinearGradient=dispinterface
		['{000244AF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ColorStops:ColorStops readonly dispid 2761;
		property Degree:Double dispid 1623;
	end;

	// *********************************************************************//
	// DispIntf:  RectangularGradient
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B0-0000-0000-C000-000000000046}
	// *********************************************************************//
	RectangularGradient=dispinterface
		['{000244B0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ColorStops:ColorStops readonly dispid 2761;
		property RectangleTop:Double dispid 2762;
		property RectangleBottom:Double dispid 2763;
		property RectangleLeft:Double dispid 2764;
		property RectangleRight:Double dispid 2765;
	end;

	// *********************************************************************//
	// DispIntf:  MultiThreadedCalculation
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B1-0000-0000-C000-000000000046}
	// *********************************************************************//
	MultiThreadedCalculation=dispinterface
		['{000244B1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Enabled:WordBool dispid 600;
		property ThreadMode:XlThreadMode dispid 2766;
		property ThreadCount:Integer dispid 2767;
	end;

	// *********************************************************************//
	// DispIntf:  ChartFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B2-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartFormat=dispinterface
		['{000244B2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Fill:FillFormat readonly dispid 1663;
		property Glow:GlowFormat readonly dispid 2663;
		property Line:LineFormat readonly dispid 817;
		property PictureFormat:PictureFormat readonly dispid 1631;
		property Shadow:ShadowFormat readonly dispid 103;
		property SoftEdge:SoftEdgeFormat readonly dispid 2662;
		property TextFrame2:TextFrame2 readonly dispid 2659;
		property ThreeD:ThreeDFormat readonly dispid 1703;
		property Adjustments:Adjustments readonly dispid 1691;
		property AutoShapeType:MsoAutoShapeType dispid 1693;
	end;

	// *********************************************************************//
	// DispIntf:  FileExportConverter
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B3-0000-0000-C000-000000000046}
	// *********************************************************************//
	FileExportConverter=dispinterface
		['{000244B3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Extensions:WideString readonly dispid 2769;
		property Description:WideString readonly dispid 218;
		property FileFormat:Integer readonly dispid 288;
	end;

	// *********************************************************************//
	// DispIntf:  FileExportConverters
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B4-0000-0000-C000-000000000046}
	// *********************************************************************//
	FileExportConverters=dispinterface
		['{000244B4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property _Default[Index:OleVariant]:FileExportConverter readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:FileExportConverter readonly dispid 170;
	end;

	// *********************************************************************//
	// DispIntf:  AddIns2
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B5-0000-0000-C000-000000000046}
	// *********************************************************************//
	AddIns2=dispinterface
		['{000244B5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(const Filename:WideString;CopyFile:OleVariant):AddIn;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:AddIn readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:AddIn readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  SparklineGroups
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B6-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparklineGroups=dispinterface
		['{000244B6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function Add(Type_:XlSparkType;const SourceData:WideString):SparklineGroup;dispid 181;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:SparklineGroup readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:SparklineGroup readonly dispid 0;default;
		procedure Clear;dispid 111;
		procedure ClearGroups;dispid 2947;
		procedure Group(const Location:ExcelRange);dispid 46;
		procedure Ungroup;dispid 244;
	end;

	// *********************************************************************//
	// DispIntf:  SparklineGroup
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B7-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparklineGroup=dispinterface
		['{000244B7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:Sparkline readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property Location:ExcelRange dispid 1397;
		property SourceData:WideString dispid 686;
		property DateRange:WideString dispid 2948;
		procedure ModifyLocation(const Location:ExcelRange);dispid 2949;
		procedure ModifySourceData(const SourceData:WideString);dispid 2950;
		procedure Modify(const Location:ExcelRange;const SourceData:WideString);dispid 1581;
		procedure ModifyDateRange(const DateRange:WideString);dispid 2951;
		procedure Delete;dispid 117;
		property Type_:XlSparkType dispid 108;
		property SeriesColor:FormatColor readonly dispid 2952;
		property Points:SparkPoints readonly dispid 70;
		property Axes:SparkAxes readonly dispid 23;
		property DisplayBlanksAs:XlDisplayBlanksAs dispid 93;
		property DisplayHidden:WordBool dispid 2953;
		property LineWeight:OleVariant dispid 2954;
		property PlotBy:XlSparklineRowCol dispid 202;
	end;

	// *********************************************************************//
	// DispIntf:  SparkPoints
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B8-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparkPoints=dispinterface
		['{000244B8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Negative:SparkColor readonly dispid 2955;
		property Markers:SparkColor readonly dispid 2956;
		property Highpoint:SparkColor readonly dispid 2957;
		property Lowpoint:SparkColor readonly dispid 2958;
		property Firstpoint:SparkColor readonly dispid 2959;
		property Lastpoint:SparkColor readonly dispid 2960;
	end;

	// *********************************************************************//
	// DispIntf:  Sparkline
	// Flags:     (4096) Dispatchable
	// GUID:      {000244B9-0000-0000-C000-000000000046}
	// *********************************************************************//
	Sparkline=dispinterface
		['{000244B9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Location:ExcelRange dispid 1397;
		property SourceData:WideString dispid 686;
		procedure ModifyLocation(const Range:ExcelRange);dispid 2949;
		procedure ModifySourceData(const Formula:WideString);dispid 2950;
	end;

	// *********************************************************************//
	// DispIntf:  SparkAxes
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BA-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparkAxes=dispinterface
		['{000244BA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Vertical:SparkVerticalAxis readonly dispid 2961;
		property Horizontal:SparkHorizontalAxis readonly dispid 2962;
	end;

	// *********************************************************************//
	// DispIntf:  SparkHorizontalAxis
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BB-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparkHorizontalAxis=dispinterface
		['{000244BB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Axis:SparkColor readonly dispid 67;
		property IsDateAxis:WordBool readonly dispid 2963;
		property RightToLeftPlotOrder:WordBool dispid 2964;
	end;

	// *********************************************************************//
	// DispIntf:  SparkVerticalAxis
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BC-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparkVerticalAxis=dispinterface
		['{000244BC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property MinScaleType:XlSparkScale dispid 2965;
		property CustomMinScaleValue:OleVariant dispid 2966;
		property MaxScaleType:XlSparkScale dispid 2967;
		property CustomMaxScaleValue:OleVariant dispid 2968;
	end;

	// *********************************************************************//
	// DispIntf:  SparkColor
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BD-0000-0000-C000-000000000046}
	// *********************************************************************//
	SparkColor=dispinterface
		['{000244BD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Visible:WordBool dispid 558;
		property Color:FormatColor readonly dispid 99;
	end;

	// *********************************************************************//
	// DispIntf:  DataBarBorder
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BE-0000-0000-C000-000000000046}
	// *********************************************************************//
	DataBarBorder=dispinterface
		['{000244BE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Type_:XlDataBarBorderType dispid 108;
		property Color:IDispatch readonly dispid 99;
	end;

	// *********************************************************************//
	// DispIntf:  NegativeBarFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {000244BF-0000-0000-C000-000000000046}
	// *********************************************************************//
	NegativeBarFormat=dispinterface
		['{000244BF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ColorType:XlDataBarNegativeColorType dispid 2195;
		property BorderColorType:XlDataBarNegativeColorType dispid 2969;
		property Color:IDispatch readonly dispid 99;
		property BorderColor:IDispatch readonly dispid 2970;
	end;

	// *********************************************************************//
	// DispIntf:  ValueChange
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C0-0000-0000-C000-000000000046}
	// *********************************************************************//
	ValueChange=dispinterface
		['{000244C0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Order:Integer readonly dispid 192;
		property VisibleInPivotTable:WordBool readonly dispid 2971;
		property PivotCell:PivotCell readonly dispid 2013;
		property Tuple:WideString readonly dispid 2972;
		property Value:Double readonly dispid 6;
		property AllocationValue:XlAllocationValue readonly dispid 2874;
		property AllocationMethod:XlAllocationMethod readonly dispid 2875;
		property AllocationWeightExpression:WideString readonly dispid 2876;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  PivotTableChangeList
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C1-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotTableChangeList=dispinterface
		['{000244C1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property _Default[Index:OleVariant]:ValueChange readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property Item[Index:OleVariant]:ValueChange readonly dispid 170;
		property Count:Integer readonly dispid 118;
		function Add(const Tuple:WideString;Value:Double;AllocationValue:OleVariant;AllocationMethod:OleVariant;
			AllocationWeightExpression:OleVariant):ValueChange;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  DisplayFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C2-0000-0000-C000-000000000046}
	// *********************************************************************//
	DisplayFormat=dispinterface
		['{000244C2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Borders:Borders readonly dispid 435;
		property Characters[Start:OleVariant;Length:OleVariant]:Characters readonly dispid 603;
		property Font:Font readonly dispid 146;
		property Style:OleVariant readonly dispid 260;
		property AddIndent:OleVariant readonly dispid 1063;
		property FormulaHidden:OleVariant readonly dispid 262;
		property HorizontalAlignment:OleVariant readonly dispid 136;
		property IndentLevel:OleVariant readonly dispid 201;
		property Interior:Interior readonly dispid 129;
		property Locked:OleVariant readonly dispid 269;
		property MergeCells:OleVariant readonly dispid 208;
		property NumberFormat:OleVariant readonly dispid 193;
		property NumberFormatLocal:OleVariant readonly dispid 1097;
		property Orientation:OleVariant readonly dispid 134;
		property ReadingOrder:Integer readonly dispid 975;
		property ShrinkToFit:OleVariant readonly dispid 209;
		property VerticalAlignment:OleVariant readonly dispid 137;
		property WrapText:OleVariant readonly dispid 276;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerCaches
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C3-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerCaches=dispinterface
		['{000244C3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:SlicerCache readonly dispid 170;
		property _Default[Index:OleVariant]:SlicerCache readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(Source:OleVariant;SourceField:OleVariant;Name:OleVariant):SlicerCache;dispid 181;
		function Add2(Source:OleVariant;SourceField:OleVariant;Name:OleVariant;SlicerCacheType:OleVariant):SlicerCache;
			dispid 3054;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerCache
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C4-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerCache=dispinterface
		['{000244C4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Index:Integer readonly dispid 486;
		property OLAP:WordBool readonly dispid 2077;
		property SourceType:XlPivotTableSourceType readonly dispid 685;
		property WorkbookConnection:WorkbookConnection readonly dispid 2544;
		property Slicers:Slicers readonly dispid 2881;
		property PivotTables:SlicerPivotTables readonly dispid 690;
		property SlicerCacheLevels:SlicerCacheLevels readonly dispid 2974;
		property Name:WideString dispid 110;
		property VisibleSlicerItems:SlicerItems readonly dispid 2975;
		property VisibleSlicerItemsList:OleVariant dispid 2976;
		property SlicerItems:SlicerItems readonly dispid 2977;
		property CrossFilterType:XlSlicerCrossFilterType dispid 2978;
		property SortItems:XlSlicerSort dispid 2979;
		property SourceName:WideString readonly dispid 721;
		property SortUsingCustomLists:WordBool dispid 2574;
		property ShowAllItems:WordBool dispid 452;
		procedure ClearManualFilter;dispid 2594;
		procedure Delete;dispid 117;
		property TimelineState:TimelineState readonly dispid 3112;
		procedure ClearAllFilters;dispid 2561;
		property SlicerCacheType:XlSlicerCacheType readonly dispid 3111;
		property FilterCleared:WordBool readonly dispid 3113;
		property List:WordBool readonly dispid 861;
		property RequireManualUpdate:WordBool dispid 3114;
		property ListObject:ListObject readonly dispid 2257;
		procedure ClearDateFilter;dispid 3115;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerCacheLevels
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C5-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerCacheLevels=dispinterface
		['{000244C5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Level:OleVariant]:SlicerCacheLevel readonly dispid 170;
		property _Default[Level:OleVariant]:SlicerCacheLevel readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerCacheLevel
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C6-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerCacheLevel=dispinterface
		['{000244C6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property SlicerItems:SlicerItems readonly dispid 2977;
		property Count:Integer readonly dispid 118;
		property Ordinal:Integer readonly dispid 2981;
		property Name:WideString readonly dispid 110;
		property CrossFilterType:XlSlicerCrossFilterType dispid 2978;
		property SortItems:XlSlicerSort dispid 2979;
		property VisibleSlicerItemsList:OleVariant readonly dispid 2976;
	end;

	// *********************************************************************//
	// DispIntf:  Slicers
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C7-0000-0000-C000-000000000046}
	// *********************************************************************//
	Slicers=dispinterface
		['{000244C7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:Slicer readonly dispid 170;
		property _Default[Index:OleVariant]:Slicer readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(SlicerDestination:OleVariant;Level:OleVariant;Name:OleVariant;Caption:OleVariant;Top:OleVariant;
			Left:OleVariant;Width:OleVariant;Height:OleVariant):Slicer;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  Slicer
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C8-0000-0000-C000-000000000046}
	// *********************************************************************//
	Slicer=dispinterface
		['{000244C8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property Caption:WideString dispid 139;
		property Top:Double dispid 126;
		property Left:Double dispid 127;
		property DisableMoveResizeUI:WordBool dispid 2983;
		property Width:Double dispid 122;
		property Height:Double dispid 123;
		property RowHeight:Double dispid 272;
		property ColumnWidth:Double dispid 242;
		property NumberOfColumns:Integer dispid 2984;
		property DisplayHeader:WordBool dispid 2985;
		property Locked:WordBool dispid 269;
		property SlicerCache:SlicerCache readonly dispid 2986;
		property SlicerCacheLevel:SlicerCacheLevel readonly dispid 2987;
		property Shape:Shape readonly dispid 1582;
		property Style:OleVariant dispid 260;
		procedure Delete;dispid 117;
		procedure Cut;dispid 565;
		procedure Copy;dispid 551;
		property ActiveItem:SlicerItem readonly dispid 2988;
		property TimelineViewState:TimelineViewState readonly dispid 3116;
		property SlicerCacheType:XlSlicerCacheType readonly dispid 3111;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerItem
	// Flags:     (4096) Dispatchable
	// GUID:      {000244C9-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerItem=dispinterface
		['{000244C9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:SlicerCache readonly dispid 150;
		property Caption:WideString readonly dispid 139;
		property Name:WideString readonly dispid 110;
		property SourceName:OleVariant readonly dispid 721;
		property SourceNameStandard:WideString readonly dispid 2148;
		property Value:WideString readonly dispid 6;
		property Selected:WordBool dispid 1123;
		property HasData:WordBool readonly dispid 2989;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerItems
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CA-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerItems=dispinterface
		['{000244CA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:SlicerItem readonly dispid 170;
		property _Default[Index:OleVariant]:SlicerItem readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  SlicerPivotTables
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CB-0000-0000-C000-000000000046}
	// *********************************************************************//
	SlicerPivotTables=dispinterface
		['{000244CB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:PivotTable readonly dispid 170;
		property _Default[Index:OleVariant]:PivotTable readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		procedure AddPivotTable(const PivotTable:PivotTable);dispid 2990;
		procedure RemovePivotTable(PivotTable:OleVariant);dispid 2991;
	end;

	// *********************************************************************//
	// DispIntf:  ProtectedViewWindows
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CC-0000-0000-C000-000000000046}
	// *********************************************************************//
	ProtectedViewWindows=dispinterface
		['{000244CC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		property Item[Index:OleVariant]:ProtectedViewWindow readonly dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		property _Default[Index:OleVariant]:ProtectedViewWindow readonly dispid 0;default;
		function Open(const Filename:WideString;Password:OleVariant;AddToMru:OleVariant;RepairMode:OleVariant)
			:ProtectedViewWindow;dispid 1923;
	end;

	// *********************************************************************//
	// DispIntf:  ProtectedViewWindow
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CD-0000-0000-C000-000000000046}
	// *********************************************************************//
	ProtectedViewWindow=dispinterface
		['{000244CD-0000-0000-C000-000000000046}']
		property _Default:WideString readonly dispid 0;
		property Caption:WideString dispid 139;
		property EnableResize:WordBool dispid 1192;
		property Height:Double dispid 123;
		property Left:Double dispid 127;
		property Top:Double dispid 126;
		property Width:Double dispid 122;
		property Visible:WordBool dispid 558;
		property SourceName:WideString readonly dispid 721;
		property SourcePath:WideString readonly dispid 2993;
		property WindowState:XlProtectedViewWindowState dispid 396;
		property Workbook:ExcelWorkbook readonly dispid 752;
		procedure Activate;dispid 304;
		function Close:WordBool;dispid 277;
		function Edit(WriteResPassword:OleVariant;UpdateLinks:OleVariant):ExcelWorkbook;dispid 562;
	end;

	// *********************************************************************//
	// DispIntf:  TableObject
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CE-0000-0000-C000-000000000046}
	// *********************************************************************//
	TableObject=dispinterface
		['{000244CE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property RowNumbers:WordBool dispid 1585;
		property FetchedRowOverflow:WordBool readonly dispid 1588;
		property RefreshStyle:XlCellInsertionMode dispid 1590;
		property EnableRefresh:WordBool dispid 1477;
		property Destination:ExcelRange readonly dispid 681;
		property ResultRange:ExcelRange readonly dispid 1592;
		procedure Delete;dispid 117;
		function Refresh:WordBool;dispid 1417;
		property EnableEditing:WordBool dispid 1595;
		property PreserveColumnInfo:WordBool dispid 1867;
		property PreserveFormatting:WordBool dispid 1500;
		property AdjustColumnWidth:WordBool dispid 1868;
		property ListObject:ListObject readonly dispid 2257;
		property WorkbookConnection:WorkbookConnection readonly dispid 2544;
	end;

	// *********************************************************************//
	// DispIntf:  PivotValueCell
	// Flags:     (4096) Dispatchable
	// GUID:      {000244CF-0000-0000-C000-000000000046}
	// *********************************************************************//
	PivotValueCell=dispinterface
		['{000244CF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property PivotCell:PivotCell readonly dispid 2013;
		property Value:OleVariant readonly dispid 6;
		procedure ShowDetail;dispid 585;
		property ServerActions:Actions readonly dispid 2491;
	end;

	// *********************************************************************//
	// DispIntf:  QuickAnalysis
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D0-0000-0000-C000-000000000046}
	// *********************************************************************//
	QuickAnalysis=dispinterface
		['{000244D0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		procedure Show(XlQuickAnalysisMode:XlQuickAnalysisMode);dispid 496;
		procedure Hide(XlQuickAnalysisMode:XlQuickAnalysisMode);dispid 813;
	end;

	// *********************************************************************//
	// DispIntf:  ModelConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D1-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelConnection=dispinterface
		['{000244D1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property ADOConnection:IDispatch readonly dispid 2074;
		property CalculatedMembers:CalculatedMembers readonly dispid 2125;
	end;

	// *********************************************************************//
	// DispIntf:  WorksheetDataConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D2-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorksheetDataConnection=dispinterface
		['{000244D2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Connection:OleVariant readonly dispid 1432;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
	end;

	// *********************************************************************//
	// DispIntf:  TextConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D3-0000-0000-C000-000000000046}
	// *********************************************************************//
	TextConnection=dispinterface
		['{000244D3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Connection:OleVariant dispid 1432;
		property TextFileHeaderRow:WordBool dispid 3118;
		property TextFileColumnDataTypes:OleVariant dispid 1865;
		property TextFileCommaDelimiter:WordBool dispid 1862;
		property TextFileConsecutiveDelimiter:WordBool dispid 1859;
		property TextFileDecimalSeparator:WideString dispid 1870;
		property TextFileFixedColumnWidths:OleVariant dispid 1866;
		property TextFileOtherDelimiter:WideString dispid 1864;
		property TextFileParseType:XlTextParsingType dispid 1857;
		property TextFilePlatform:XlPlatform dispid 1855;
		property TextFilePromptOnRefresh:WordBool dispid 1869;
		property TextFileSemicolonDelimiter:WordBool dispid 1861;
		property TextFileSpaceDelimiter:WordBool dispid 1863;
		property TextFileStartRow:Integer dispid 1856;
		property TextFileTabDelimiter:WordBool dispid 1860;
		property TextFileTextQualifier:XlTextQualifier dispid 1858;
		property TextFileThousandsSeparator:WideString dispid 1871;
		property TextFileTrailingMinusNumbers:WordBool dispid 2164;
		property TextFileVisualLayout:XlTextVisualLayoutType dispid 2245;
	end;

	// *********************************************************************//
	// DispIntf:  DataFeedConnection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D4-0000-0000-C000-000000000046}
	// *********************************************************************//
	DataFeedConnection=dispinterface
		['{000244D4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property AlwaysUseConnectionFile:WordBool dispid 2706;
		property CommandText:OleVariant dispid 1829;
		property CommandType:XlCmdType dispid 1830;
		property Connection:OleVariant dispid 1432;
		property EnableRefresh:WordBool dispid 1477;
		property RefreshDate:TDateTime readonly dispid 696;
		property Refreshing:WordBool readonly dispid 1587;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property RefreshPeriod:Integer dispid 1833;
		property SavePassword:WordBool dispid 1481;
		property ServerCredentialsMethod:XlCredentialsMethod dispid 2704;
		property SourceConnectionFile:WideString dispid 2079;
		property SourceDataFile:WideString dispid 2080;
		procedure CancelRefresh;dispid 1589;
		procedure Refresh;dispid 1417;
		procedure SaveAsODC(const ODCFileName:WideString;Description:OleVariant;Keywords:OleVariant);dispid 2082;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTableColumn
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D5-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTableColumn=dispinterface
		['{000244D5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property DataType:Integer readonly dispid 722;
		procedure Dummy1(const NewName:WideString);dispid 1782;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTableColumns
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D6-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTableColumns=dispinterface
		['{000244D6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelTableColumn;dispid 170;
		property _Default[Index:OleVariant]:ModelTableColumn readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTable
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D7-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTable=dispinterface
		['{000244D7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property SourceName:WideString readonly dispid 721;
		property ModelTableColumns:ModelTableColumns readonly dispid 3119;
		property SourceWorkbookConnection:WorkbookConnection readonly dispid 3120;
		procedure _Dummy7;dispid 65543;
		procedure Refresh;dispid 1417;
		property RecordCount:Integer readonly dispid 1478;
		procedure Dummy1(const NewName:WideString);dispid 1782;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTables
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D8-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTables=dispinterface
		['{000244D8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelTable;dispid 170;
		property _Default[Index:OleVariant]:ModelTable readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ModelRelationship
	// Flags:     (4096) Dispatchable
	// GUID:      {000244D9-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelRelationship=dispinterface
		['{000244D9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ForeignKeyTable:ModelTable readonly dispid 3122;
		property ForeignKeyColumn:ModelTableColumn readonly dispid 3123;
		property PrimaryKeyTable:ModelTable readonly dispid 3124;
		property PrimaryKeyColumn:ModelTableColumn readonly dispid 3125;
		property Active:WordBool dispid 2312;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  ModelRelationships
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DA-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelRelationships=dispinterface
		['{000244DA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelRelationship;dispid 170;
		property _Default[Index:OleVariant]:ModelRelationship readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(const ForeignKeyColumn:ModelTableColumn;const PrimaryKeyColumn:ModelTableColumn):ModelRelationship;
			dispid 181;
		procedure DetectRelationships(const PivotTable:PivotTable);dispid 3209;
	end;

	// *********************************************************************//
	// DispIntf:  Model
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DB-0000-0000-C000-000000000046}
	// *********************************************************************//
	Model=dispinterface
		['{000244DB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ModelTables:ModelTables readonly dispid 3106;
		property ModelRelationships:ModelRelationships readonly dispid 3126;
		procedure Refresh;dispid 1417;
		function AddConnection(const ConnectionToDataSource:WorkbookConnection):WorkbookConnection;dispid 3127;
		function CreateModelWorkbookConnection(ModelTable:OleVariant):WorkbookConnection;dispid 3129;
		property DataModelConnection:WorkbookConnection readonly dispid 3131;
		property Name:WideString readonly dispid 110;
		procedure Initialize;dispid 3132;
		property ModelMeasures:ModelMeasures readonly dispid 3210;
		property ModelFormatGeneral:ModelFormatGeneral readonly dispid 3211;
		property ModelFormatDate[FormatString:OleVariant]:ModelFormatDate readonly dispid 3212;
		property ModelFormatDecimalNumber[UseThousandSeparator:OleVariant;DecimalPlaces:OleVariant]
			:ModelFormatDecimalNumber readonly dispid 3214;
		property ModelFormatWholeNumber[UseThousandSeparator:OleVariant]:ModelFormatWholeNumber readonly dispid 3216;
		property ModelFormatPercentageNumber[UseThousandSeparator:OleVariant;DecimalPlaces:OleVariant]
			:ModelFormatPercentageNumber readonly dispid 3217;
		property ModelFormatScientificNumber[DecimalPlaces:OleVariant]:ModelFormatScientificNumber readonly dispid 3218;
		property ModelFormatCurrency[Symbol:OleVariant;DecimalPlaces:OleVariant]:ModelFormatCurrency readonly dispid 3219;
		property ModelFormatBoolean:ModelFormatBoolean readonly dispid 3221;
	end;

	// *********************************************************************//
	// DispIntf:  FullSeriesCollection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DC-0000-0000-C000-000000000046}
	// *********************************************************************//
	FullSeriesCollection=dispinterface
		['{000244DC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):Series;dispid 170;
		function _NewEnum:IUnknown;dispid-4;
		function _Default(Index:OleVariant):Series;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  ChartCategory
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DD-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartCategory=dispinterface
		['{000244DD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property IsFiltered:WordBool dispid 3083;
	end;

	// *********************************************************************//
	// DispIntf:  CategoryCollection
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DE-0000-0000-C000-000000000046}
	// *********************************************************************//
	CategoryCollection=dispinterface
		['{000244DE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ChartCategory;dispid 170;
		function _Default(Index:OleVariant):ChartCategory;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  TimelineState
	// Flags:     (4096) Dispatchable
	// GUID:      {000244DF-0000-0000-C000-000000000046}
	// *********************************************************************//
	TimelineState=dispinterface
		['{000244DF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property StartDate:OleVariant readonly dispid 3133;
		property EndDate:OleVariant readonly dispid 3134;
		property FilterType:XlPivotFilterType readonly dispid 2686;
		property FilterValue1:OleVariant readonly dispid 3135;
		property FilterValue2:OleVariant readonly dispid 3136;
		property SingleRangeFilterState:WordBool readonly dispid 3137;
		function SetFilterDateRange(StartDate:OleVariant;EndDate:OleVariant):XlFilterStatus;dispid 3138;
	end;

	// *********************************************************************//
	// DispIntf:  TimelineViewState
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E0-0000-0000-C000-000000000046}
	// *********************************************************************//
	TimelineViewState=dispinterface
		['{000244E0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property ShowHeader:WordBool dispid 3139;
		property ShowSelectionLabel:WordBool dispid 3140;
		property ShowTimeLevel:WordBool dispid 3141;
		property ShowHorizontalScrollbar:WordBool dispid 3142;
		property Level:XlTimelineLevel dispid 2980;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTableNames
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E1-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTableNames=dispinterface
		['{000244E1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):WideString;dispid 170;
		property _Default[Index:OleVariant]:WideString readonly dispid 0;default;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTableNameChange
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E2-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTableNameChange=dispinterface
		['{000244E2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TableNameOld:WideString readonly dispid 3143;
		property TableNameNew:WideString readonly dispid 3144;
	end;

	// *********************************************************************//
	// DispIntf:  ModelTableNameChanges
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E3-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelTableNameChanges=dispinterface
		['{000244E3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelTableNameChange;dispid 170;
		property _Default[Index:OleVariant]:ModelTableNameChange readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ModelChanges
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E4-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelChanges=dispinterface
		['{000244E4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TablesAdded:ModelTableNames readonly dispid 3145;
		property TablesDeleted:ModelTableNames readonly dispid 3146;
		property TablesModified:ModelTableNames readonly dispid 3147;
		property TableNamesChanged:ModelTableNameChanges readonly dispid 3148;
		property RelationshipChange:WordBool readonly dispid 3149;
		property ColumnsAdded:ModelColumnNames readonly dispid 3150;
		property ColumnsDeleted:ModelColumnNames readonly dispid 3151;
		property ColumnsChanged:ModelColumnChanges readonly dispid 3152;
		property MeasuresAdded:ModelMeasureNames readonly dispid 3153;
		property UnknownChange:WordBool readonly dispid 3154;
		property Source:XlModelChangeSource readonly dispid 222;
	end;

	// *********************************************************************//
	// DispIntf:  ModelColumnName
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E5-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelColumnName=dispinterface
		['{000244E5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TableName:WideString readonly dispid 688;
		property ColumnName:WideString readonly dispid 3156;
	end;

	// *********************************************************************//
	// DispIntf:  ModelColumnNames
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E6-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelColumnNames=dispinterface
		['{000244E6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelColumnName;dispid 170;
		property _Default[Index:OleVariant]:ModelColumnName readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ModelColumnChange
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E7-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelColumnChange=dispinterface
		['{000244E7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TableName:WideString readonly dispid 688;
		property ColumnName:WideString readonly dispid 3156;
	end;

	// *********************************************************************//
	// DispIntf:  ModelColumnChanges
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E8-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelColumnChanges=dispinterface
		['{000244E8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelColumnChange;dispid 170;
		property _Default[Index:OleVariant]:ModelColumnChange readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  ModelMeasureName
	// Flags:     (4096) Dispatchable
	// GUID:      {000244E9-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelMeasureName=dispinterface
		['{000244E9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TableName:WideString readonly dispid 688;
		property MeasureName:WideString readonly dispid 3157;
	end;

	// *********************************************************************//
	// DispIntf:  ModelMeasureNames
	// Flags:     (4096) Dispatchable
	// GUID:      {000244EA-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelMeasureNames=dispinterface
		['{000244EA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelMeasureName;dispid 170;
		property _Default[Index:OleVariant]:ModelMeasureName readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  WorkbookQuery
	// Flags:     (4096) Dispatchable
	// GUID:      {000244EB-0000-0000-C000-000000000046}
	// *********************************************************************//
	WorkbookQuery=dispinterface
		['{000244EB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property Formula:WideString dispid 261;
		property Description:WideString dispid 218;
		property _Default:WideString dispid 0;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  Queries
	// Flags:     (4096) Dispatchable
	// GUID:      {000244EC-0000-0000-C000-000000000046}
	// *********************************************************************//
	Queries=dispinterface
		['{000244EC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(const Name:WideString;const Formula:WideString;Description:OleVariant):WorkbookQuery;dispid 181;
		function Item(NameOrIndex:OleVariant):WorkbookQuery;dispid 170;
		property _Default[NameOrIndex:OleVariant]:WorkbookQuery readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		property FastCombine:WordBool dispid 3223;
	end;

	// *********************************************************************//
	// DispIntf:  ModelMeasure
	// Flags:     (4096) Dispatchable
	// GUID:      {000244ED-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelMeasure=dispinterface
		['{000244ED-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		property AssociatedTable:ModelTable dispid 3224;
		property Formula:WideString dispid 261;
		property FormatInformation:OleVariant dispid 3225;
		property Description:WideString dispid 218;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// DispIntf:  ModelMeasures
	// Flags:     (4096) Dispatchable
	// GUID:      {000244EE-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelMeasures=dispinterface
		['{000244EE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:OleVariant):ModelMeasure;dispid 170;
		property _Default[Index:OleVariant]:ModelMeasure readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
		function Add(const MeasureName:WideString;const AssociatedTable:ModelTable;const Formula:WideString;
			FormatInformation:OleVariant;Description:OleVariant):ModelMeasure;dispid 181;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatGeneral
	// Flags:     (4096) Dispatchable
	// GUID:      {000244EF-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatGeneral=dispinterface
		['{000244EF-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatDate
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F0-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatDate=dispinterface
		['{000244F0-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property FormatString:WideString dispid 3213;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatDecimalNumber
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F1-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatDecimalNumber=dispinterface
		['{000244F1-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property UseThousandSeparator:WordBool dispid 3215;
		property DecimalPlaces:Integer dispid 2349;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatWholeNumber
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F2-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatWholeNumber=dispinterface
		['{000244F2-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property UseThousandSeparator:WordBool dispid 3215;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatPercentageNumber
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F3-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatPercentageNumber=dispinterface
		['{000244F3-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property UseThousandSeparator:WordBool dispid 3215;
		property DecimalPlaces:Integer dispid 2349;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatScientificNumber
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F4-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatScientificNumber=dispinterface
		['{000244F4-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property DecimalPlaces:Integer dispid 2349;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatCurrency
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F5-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatCurrency=dispinterface
		['{000244F5-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Symbol:WideString dispid 3220;
		property DecimalPlaces:Integer dispid 2349;
	end;

	// *********************************************************************//
	// DispIntf:  ModelFormatBoolean
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F6-0000-0000-C000-000000000046}
	// *********************************************************************//
	ModelFormatBoolean=dispinterface
		['{000244F6-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
	end;

	// *********************************************************************//
	// DispIntf:  PublishedDocs
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F7-0000-0000-C000-000000000046}
	// *********************************************************************//
	PublishedDocs=dispinterface
		['{000244F7-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):PublishedDoc;dispid 170;
		property _NewEnum:IUnknown readonly dispid-4;
		function _Default(Index:Integer):PublishedDoc;dispid 0;
	end;

	// *********************************************************************//
	// DispIntf:  PublishedDoc
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {000244F8-0000-0000-C000-000000000046}
	// *********************************************************************//
	PublishedDoc=dispinterface
		['{000244F8-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Title:WideString readonly dispid 199;
		property DisclosureScope:Integer readonly dispid 3195;
		property Url:WideString readonly dispid 2271;
		property PublishedDate:TDateTime readonly dispid 3230;
	end;

	// *********************************************************************//
	// DispIntf:  SeriesGradientStopColorFormat
	// Flags:     (4096) Dispatchable
	// GUID:      {000244F9-0000-0000-C000-000000000046}
	// *********************************************************************//
	SeriesGradientStopColorFormat=dispinterface
		['{000244F9-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property TintAndShade:Single dispid 2366;
		property ObjectThemeColor:MsoThemeColorIndex dispid 3265;
		property RGB:Integer dispid 1055;
		property Transparency:Single dispid 3266;
		property Type_:MsoColorType readonly dispid 108;
	end;

	// *********************************************************************//
	// DispIntf:  ChartSeriesGradientStopData
	// Flags:     (4096) Dispatchable
	// GUID:      {000244FA-0000-0000-C000-000000000046}
	// *********************************************************************//
	ChartSeriesGradientStopData=dispinterface
		['{000244FA-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property StopColor:SeriesGradientStopColorFormat readonly dispid 3267;
		property StopPositionType:XlGradientStopPositionType dispid 3268;
		property StopValue:WideString dispid 3269;
	end;

	// *********************************************************************//
	// DispIntf:  DefaultPivotTableLayoutOptions
	// Flags:     (4096) Dispatchable
	// GUID:      {000244FB-0000-0000-C000-000000000046}
	// *********************************************************************//
	DefaultPivotTableLayoutOptions=dispinterface
		['{000244FB-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property InGridDropZones:WordBool dispid 2560;
		property DisplayFieldCaptions:WordBool dispid 2555;
		property FieldListSortAscending:WordBool dispid 2573;
		property ViewCalculatedMembers:WordBool dispid 2124;
		property DisplayContextTooltips:WordBool dispid 2551;
		property ShowDrillIndicators:WordBool dispid 2548;
		property DisplayEmptyColumn:WordBool dispid 2137;
		property DisplayEmptyRow:WordBool dispid 2136;
		property DisplayMemberPropertyTooltips:WordBool dispid 2550;
		property ShowValuesRow:WordBool dispid 2883;
		property DisplayNullString:WordBool dispid 1486;
		property NullString:WideString dispid 1495;
		property DisplayErrorString:WordBool dispid 1485;
		property ErrorString:WideString dispid 1490;
		property HasAutoFormat:WordBool dispid 695;
		property PageFieldOrder:WordBool dispid 1429;
		property MergeLabels:WordBool dispid 1494;
		property PreserveFormatting:WordBool dispid 1500;
		property PageFieldWrapCount:Integer dispid 1430;
		property CompactRowIndent:Integer dispid 2553;
		property PrintDrillIndicators:WordBool dispid 2549;
		property RepeatItemsOnEachPrintedPage:WordBool dispid 1842;
		property PrintTitles:WordBool dispid 1838;
		property AllowMultipleFilters:WordBool dispid 2570;
		property CalculatedMembersInFilters:WordBool dispid 2884;
		property VisualTotalsForSets:WordBool dispid 2882;
		property VisualTotals:WordBool dispid 2129;
		property TotalsAnnotation:WordBool dispid 1843;
		property RowGrand:WordBool dispid 693;
		property ColumnGrand:WordBool dispid 694;
		property SubtotalHiddenPageItems:WordBool dispid 1498;
		property SortUsingCustomLists:WordBool dispid 2574;
		property SaveData:WordBool dispid 692;
		property EnableDrilldown:WordBool dispid 1487;
		property RefreshOnFileOpen:WordBool dispid 1479;
		property xlMissingItemsNone:Integer dispid 3270;
		property Subtotals:WordBool dispid 733;
		property SubtotalLocation:WordBool dispid 2558;
		property LayoutBlankLine:WordBool dispid 1845;
		property RowAxisLayout:XlLayoutRowType dispid 2556;
		property RepeatAllLabels:XlPivotFieldRepeatLabels dispid 2879;
		property DisplayImmediateItems:WordBool dispid 2126;
		property EnableWriteback:WordBool dispid 2872;
	end;

	// *********************************************************************//
	// DispIntf:  CommentsThreaded
	// Flags:     (4096) Dispatchable
	// GUID:      {000244FC-0000-0000-C000-000000000046}
	// *********************************************************************//
	CommentsThreaded=dispinterface
		['{000244FC-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Item(Index:Integer):CommentThreaded;dispid 170;
		property _Default[Index:Integer]:CommentThreaded readonly dispid 0;default;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  CommentThreaded
	// Flags:     (4096) Dispatchable
	// GUID:      {000244FD-0000-0000-C000-000000000046}
	// *********************************************************************//
	CommentThreaded=dispinterface
		['{000244FD-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		function AddReply(Text:OleVariant):CommentThreaded;dispid 3283;
		procedure Delete;dispid 117;
		function Text(Text:OleVariant;Start:OleVariant;Overwrite:OleVariant):WideString;dispid 138;
		property Replies:CommentsThreaded readonly dispid 3285;
		property Author:Author readonly dispid 574;
		property Date:OleVariant readonly dispid 465;
		function Next:CommentThreaded;dispid 502;
		function Previous:CommentThreaded;dispid 503;
		property Resolved:WordBool dispid 3304;
	end;

	// *********************************************************************//
	// DispIntf:  Author
	// Flags:     (4096) Dispatchable
	// GUID:      {000244FE-0000-0000-C000-000000000046}
	// *********************************************************************//
	Author=dispinterface
		['{000244FE-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString readonly dispid 110;
		property ProviderID:WideString readonly dispid 3286;
		property UserID:WideString readonly dispid 3287;
	end;

	// *********************************************************************//
	// DispIntf:  NamedSheetViewCollection
	// Flags:     (4096) Dispatchable
	// GUID:      {00024501-0000-0000-C000-000000000046}
	// *********************************************************************//
	NamedSheetViewCollection=dispinterface
		['{00024501-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Count:Integer readonly dispid 118;
		function Add(const Name:WideString):NamedSheetView;dispid 181;
		function EnterTemporary:NamedSheetView;dispid 3360;
		procedure Exit;dispid 3361;
		function GetActive:NamedSheetView;dispid 3362;
		function GetItem(const Name:WideString):NamedSheetView;dispid 3363;
		function GetItemAt(Index:Integer):NamedSheetView;dispid 3364;
		property _NewEnum:IUnknown readonly dispid-4;
	end;

	// *********************************************************************//
	// DispIntf:  NamedSheetView
	// Flags:     (4096) Dispatchable
	// GUID:      {00024502-0000-0000-C000-000000000046}
	// *********************************************************************//
	NamedSheetView=dispinterface
		['{00024502-0000-0000-C000-000000000046}']
		property Application:ExcelApplication readonly dispid 148;
		property Creator:XlCreator readonly dispid 149;
		property Parent:IDispatch readonly dispid 150;
		property Name:WideString dispid 110;
		function Duplicate(Name:OleVariant):NamedSheetView;dispid 1039;
		procedure Activate;dispid 304;
		procedure Delete;dispid 117;
	end;

	// *********************************************************************//
	// Interface: IDummy
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002442E-0001-0000-C000-000000000046}
	// *********************************************************************//
	IDummy=interface(IDispatch)
		['{0002442E-0001-0000-C000-000000000046}']
		function _ActiveSheetOrChart:HResult;stdcall;
		function RGB:HResult;stdcall;
		function ChDir:HResult;stdcall;
		function DoScript:HResult;stdcall;
		function DirectObject:HResult;stdcall;
		function RefreshDocument:HResult;stdcall;
		function AddSignatureLine(SigProv:OleVariant;out RHS:Signature):HResult;stdcall;
		function AddNonVisibleSignature(SigProv:OleVariant;out RHS:Signature):HResult;stdcall;
		function Get_ShowSignaturesPane(out RHS:WordBool):HResult;stdcall;
		function Set_ShowSignaturesPane(RHS:WordBool):HResult;stdcall;
		function ThemeFontScheme:HResult;stdcall;
		function ThemeColorScheme:HResult;stdcall;
		function ThemeEffectScheme:HResult;stdcall;
		function Load:HResult;stdcall;
	end;

	// *********************************************************************//
	// Interface: ICanvasShapes
	// Flags:     (4112) Hidden Dispatchable
	// GUID:      {0002444F-0001-0000-C000-000000000046}
	// *********************************************************************//
	ICanvasShapes=interface(IDispatch)
		['{0002444F-0001-0000-C000-000000000046}']
	end;

	// *********************************************************************//
	// The Class CoExcelQueryTable provides a Create and CreateRemote method to
	// create instances of the default interface _QueryTable exposed by
	// the CoClass ExcelQueryTable. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelQueryTable=class
		class function Create:_QueryTable;
		class function CreateRemote(const MachineName:string):_QueryTable;
	end;

	// *********************************************************************//
	// The Class CoExcelApplication provides a Create and CreateRemote method to
	// create instances of the default interface _Application exposed by
	// the CoClass ExcelApplication. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelApplication=class
		class function Create:_Application;
		class function CreateRemote(const MachineName:string):_Application;
	end;

	// *********************************************************************//
	// The Class CoExcelChart provides a Create and CreateRemote method to
	// create instances of the default interface _Chart exposed by
	// the CoClass ExcelChart. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelChart=class
		class function Create:_Chart;
		class function CreateRemote(const MachineName:string):_Chart;
	end;

	// *********************************************************************//
	// The Class CoExcelWorksheet provides a Create and CreateRemote method to
	// create instances of the default interface _Worksheet exposed by
	// the CoClass ExcelWorksheet. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelWorksheet=class
		class function Create:_Worksheet;
		class function CreateRemote(const MachineName:string):_Worksheet;
	end;

	// *********************************************************************//
	// The Class CoExcelGlobal provides a Create and CreateRemote method to
	// create instances of the default interface _Global exposed by
	// the CoClass ExcelGlobal. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelGlobal=class
		class function Create:_Global;
		class function CreateRemote(const MachineName:string):_Global;
	end;

	// *********************************************************************//
	// The Class CoExcelWorkbook provides a Create and CreateRemote method to
	// create instances of the default interface _Workbook exposed by
	// the CoClass ExcelWorkbook. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelWorkbook=class
		class function Create:_Workbook;
		class function CreateRemote(const MachineName:string):_Workbook;
	end;

	// *********************************************************************//
	// The Class CoExcelOLEObject provides a Create and CreateRemote method to
	// create instances of the default interface _OLEObject exposed by
	// the CoClass ExcelOLEObject. The functions are intended to be used by
	// clients wishing to automate the CoClass objects exposed by the
	// server of this typelibrary.
	// *********************************************************************//
	CoExcelOLEObject=class
		class function Create:_OLEObject;
		class function CreateRemote(const MachineName:string):_OLEObject;
	end;

implementation

uses
	System.Win.ComObj;

class function CoExcelQueryTable.Create:_QueryTable;
begin
	Result:=CreateComObject(CLASS_ExcelQueryTable) as _QueryTable;
end;

class function CoExcelQueryTable.CreateRemote(const MachineName:string):_QueryTable;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelQueryTable) as _QueryTable;
end;

class function CoExcelApplication.Create:_Application;
begin
	Result:=CreateComObject(CLASS_ExcelApplication) as _Application;
end;

class function CoExcelApplication.CreateRemote(const MachineName:string):_Application;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelApplication) as _Application;
end;

class function CoExcelChart.Create:_Chart;
begin
	Result:=CreateComObject(CLASS_ExcelChart) as _Chart;
end;

class function CoExcelChart.CreateRemote(const MachineName:string):_Chart;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelChart) as _Chart;
end;

class function CoExcelWorksheet.Create:_Worksheet;
begin
	Result:=CreateComObject(CLASS_ExcelWorksheet) as _Worksheet;
end;

class function CoExcelWorksheet.CreateRemote(const MachineName:string):_Worksheet;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelWorksheet) as _Worksheet;
end;

class function CoExcelGlobal.Create:_Global;
begin
	Result:=CreateComObject(CLASS_ExcelGlobal) as _Global;
end;

class function CoExcelGlobal.CreateRemote(const MachineName:string):_Global;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelGlobal) as _Global;
end;

class function CoExcelWorkbook.Create:_Workbook;
begin
	Result:=CreateComObject(CLASS_ExcelWorkbook) as _Workbook;
end;

class function CoExcelWorkbook.CreateRemote(const MachineName:string):_Workbook;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelWorkbook) as _Workbook;
end;

class function CoExcelOLEObject.Create:_OLEObject;
begin
	Result:=CreateComObject(CLASS_ExcelOLEObject) as _OLEObject;
end;

class function CoExcelOLEObject.CreateRemote(const MachineName:string):_OLEObject;
begin
	Result:=CreateRemoteComObject(MachineName,CLASS_ExcelOLEObject) as _OLEObject;
end;

end.
